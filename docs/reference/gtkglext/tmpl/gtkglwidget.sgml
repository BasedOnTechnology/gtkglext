<!-- ##### SECTION Title ##### -->
gtkglwidget

<!-- ##### SECTION Short_Description ##### -->
OpenGL extension API to GtkWidget.

<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### FUNCTION gtk_widget_set_gl_capability ##### -->
<para>

</para>

@widget: 
@glconfig: 
@render_type: 
@share_list: 
@direct: 
@Returns: 
<!-- # Unused Parameters # -->
@attrib_list: 


<!-- ##### FUNCTION gtk_widget_is_gl_capable ##### -->
<para>

</para>

@widget: 
@Returns: 


<!-- ##### FUNCTION gtk_widget_get_gl_config ##### -->
<para>

</para>

@widget: 
@Returns: 


<!-- ##### FUNCTION gtk_widget_get_gl_context ##### -->
<para>

</para>

@widget: 
@Returns: 


<!-- ##### FUNCTION gtk_widget_get_gl_window ##### -->
<para>

</para>

@widget: 
@Returns: 


<!-- ##### MACRO gtk_widget_get_gl_drawable ##### -->
<para>
Return the #GdkGLDrawable holded by the #GtkWidget.
</para>

@widget: a #GtkWidget.
@Returns: the #GdkGLDrawable.


<!-- ##### MACRO gtk_widget_gl_make_current ##### -->
<para>
Attach a OpenGL rendering context to the #GtkWidget.
</para>

@widget: a #GtkWidget.
@Returns: TRUE if it is successful, FALSE otherwise.


<!-- ##### MACRO gtk_widget_gl_is_double_buffered ##### -->
<para>
Returns whether the widget supports the double-buffered visual.
</para>

@widget: a #GtkWidget.
@Returns: TRUE if the double-buffered visual is supported, FALSE otherwise.


<!-- ##### MACRO gtk_widget_gl_swap_buffers ##### -->
<para>
Exchange front and back buffers.
</para>

@widget: a #GtkWidget.


<!-- ##### MACRO gtk_widget_gl_begin ##### -->
<para>
Delimit the begining of the GL execution.
The call makes the OpenGL rendering context current to the widget, and
completes GDK drawing execution.
</para>

@widget: a #GtkWidget.


<!-- ##### MACRO gtk_widget_gl_end ##### -->
<para>
Delimit the end of the GL execution.
The call completes GL execution.
</para>

@widget: a #GtkWidget.


