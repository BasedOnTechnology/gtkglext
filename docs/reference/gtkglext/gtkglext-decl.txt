<FUNCTION>
<NAME>gdk_x11_gl_config_get_xdisplay</NAME>
<RETURNS>Display      *</RETURNS>
GdkGLConfig  *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_x11_gl_config_get_screen_number</NAME>
<RETURNS>int  </RETURNS>
GdkGLConfig  *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_x11_gl_config_get_xvinfo</NAME>
<RETURNS>XVisualInfo  *</RETURNS>
GdkGLConfig  *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_x11_gl_context_get_glxcontext</NAME>
<RETURNS>GLXContext  </RETURNS>
GdkGLContext *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_x11_gl_pixmap_get_glxpixmap</NAME>
<RETURNS>GLXPixmap  </RETURNS>
GdkGLPixmap  *glpixmap
</FUNCTION>
<FUNCTION>
<NAME>gdk_x11_gl_window_get_glxwindow</NAME>
<RETURNS>Window  </RETURNS>
GdkGLWindow  *glwindow
</FUNCTION>
<MACRO>
<NAME>GDK_GL_CONFIG_XDISPLAY</NAME>
#define GDK_GL_CONFIG_XDISPLAY(glconfig)       (GDK_GL_CONFIG_IMPL_X11 (glconfig)->xdisplay)
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_SCREEN_XNUMBER</NAME>
#define GDK_GL_CONFIG_SCREEN_XNUMBER(glconfig) (GDK_GL_CONFIG_IMPL_X11 (glconfig)->screen_num)
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_XVINFO</NAME>
#define GDK_GL_CONFIG_XVINFO(glconfig)         (GDK_GL_CONFIG_IMPL_X11 (glconfig)->xvinfo)
</MACRO>
<MACRO>
<NAME>GDK_GL_CONTEXT_GLXCONTEXT</NAME>
#define GDK_GL_CONTEXT_GLXCONTEXT(glcontext)   (GDK_GL_CONTEXT_IMPL_X11 (glcontext)->glxcontext)
</MACRO>
<MACRO>
<NAME>GDK_GL_PIXMAP_GLXPIXMAP</NAME>
#define GDK_GL_PIXMAP_GLXPIXMAP(glpixmap)      (GDK_GL_PIXMAP_IMPL_X11 (glpixmap)->glxpixmap)
</MACRO>
<MACRO>
<NAME>GDK_GL_WINDOW_GLXWINDOW</NAME>
#define GDK_GL_WINDOW_GLXWINDOW(glwindow)      (GDK_GL_WINDOW_IMPL_X11 (glwindow)->glxwindow)
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_XDISPLAY</NAME>
#define GDK_GL_CONFIG_XDISPLAY(glconfig)       (gdk_x11_gl_config_get_xdisplay (glconfig))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_SCREEN_XNUMBER</NAME>
#define GDK_GL_CONFIG_SCREEN_XNUMBER(glconfig) (gdk_x11_gl_config_get_screen_number (glconfig))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_XVINFO</NAME>
#define GDK_GL_CONFIG_XVINFO(glconfig)         (gdk_x11_gl_config_get_xvinfo (glconfig))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONTEXT_GLXCONTEXT</NAME>
#define GDK_GL_CONTEXT_GLXCONTEXT(glcontext)   (gdk_x11_gl_context_get_glxcontext (glcontext))
</MACRO>
<MACRO>
<NAME>GDK_GL_PIXMAP_GLXPIXMAP</NAME>
#define GDK_GL_PIXMAP_GLXPIXMAP(glpixmap)      (gdk_x11_gl_pixmap_get_glxpixmap (glpixmap))
</MACRO>
<MACRO>
<NAME>GDK_GL_WINDOW_GLXWINDOW</NAME>
#define GDK_GL_WINDOW_GLXWINDOW(glwindow)      (gdk_x11_gl_window_get_glxwindow (glwindow))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_XCOLORMAP</NAME>
#define GDK_GL_CONFIG_XCOLORMAP(glconfig)    (GDK_COLORMAP_XCOLORMAP ((glconfig)->colormap))
</MACRO>
<ENUM>
<NAME>GdkGLConfigMode</NAME>
typedef enum
{
  GDK_GL_MODE_RGB         = 1 << 1,
  GDK_GL_MODE_RGBA        = 1 << 1,   /* same as RGB */
  GDK_GL_MODE_INDEX       = 1 << 2,
  GDK_GL_MODE_SINGLE      = 1 << 3,
  GDK_GL_MODE_DOUBLE      = 1 << 4,
  GDK_GL_MODE_ACCUM       = 1 << 5,
  GDK_GL_MODE_ALPHA       = 1 << 6,
  GDK_GL_MODE_DEPTH       = 1 << 7,
  GDK_GL_MODE_STENCIL     = 1 << 8,
  GDK_GL_MODE_STEREO      = 1 << 9,
  GDK_GL_MODE_MULTISAMPLE = 1 << 10,  /* not supported yet */
  GDK_GL_MODE_LUMINANCE   = 1 << 11   /* not supported yet */
} GdkGLConfigMode;
</ENUM>
<STRUCT>
<NAME>GdkGLConfigClass</NAME>
</STRUCT>
<MACRO>
<NAME>GDK_TYPE_GL_CONFIG</NAME>
#define GDK_TYPE_GL_CONFIG              (gdk_gl_config_get_type ())
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG</NAME>
#define GDK_GL_CONFIG(object)           (G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GL_CONFIG, GdkGLConfig))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_CLASS</NAME>
#define GDK_GL_CONFIG_CLASS(klass)      (G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GL_CONFIG, GdkGLConfigClass))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_CONFIG</NAME>
#define GDK_IS_GL_CONFIG(object)        (G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GL_CONFIG))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_CONFIG_CLASS</NAME>
#define GDK_IS_GL_CONFIG_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GL_CONFIG))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONFIG_GET_CLASS</NAME>
#define GDK_GL_CONFIG_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GL_CONFIG, GdkGLConfigClass))
</MACRO>
<STRUCT>
<NAME>GdkGLConfig</NAME>
struct GdkGLConfig
{
  GObject parent_instance;

  GdkScreen *screen;

  GdkColormap *colormap;
  gint depth;

  gint layer_plane;

  guint is_rgba            : 1;
  guint is_double_buffered : 1;
  guint as_single_mode     : 1;
  guint is_stereo          : 1;
  guint has_alpha          : 1;
  guint has_depth_buffer   : 1;
  guint has_stencil_buffer : 1;
  guint has_accum_buffer   : 1;
  guint is_multisample     : 1;
  guint is_luminance       : 1;

};
</STRUCT>
<FUNCTION>
<NAME>gdk_gl_config_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_new</NAME>
<RETURNS>GdkGLConfig  *</RETURNS>
const int       *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_new_for_screen</NAME>
<RETURNS>GdkGLConfig  *</RETURNS>
GdkScreen       *screen,const int       *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_new_by_mode</NAME>
<RETURNS>GdkGLConfig  *</RETURNS>
GdkGLConfigMode  mode
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_get_screen</NAME>
<RETURNS>GdkScreen    *</RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_get_attrib</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig,int              attribute,int             *value
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_get_colormap</NAME>
<RETURNS>GdkColormap  *</RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_get_visual</NAME>
<RETURNS>GdkVisual    *</RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_get_depth</NAME>
<RETURNS>gint  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_is_rgba</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_is_double_buffered</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_is_stereo</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_has_alpha</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_has_depth_buffer</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_has_stencil_buffer</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_config_has_accum_buffer</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLConfig     *glconfig
</FUNCTION>
<STRUCT>
<NAME>GdkGLContextClass</NAME>
</STRUCT>
<MACRO>
<NAME>GDK_TYPE_GL_CONTEXT</NAME>
#define GDK_TYPE_GL_CONTEXT              (gdk_gl_context_get_type ())
</MACRO>
<MACRO>
<NAME>GDK_GL_CONTEXT</NAME>
#define GDK_GL_CONTEXT(object)           (G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GL_CONTEXT, GdkGLContext))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONTEXT_CLASS</NAME>
#define GDK_GL_CONTEXT_CLASS(klass)      (G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GL_CONTEXT, GdkGLContextClass))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_CONTEXT</NAME>
#define GDK_IS_GL_CONTEXT(object)        (G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GL_CONTEXT))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_CONTEXT_CLASS</NAME>
#define GDK_IS_GL_CONTEXT_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GL_CONTEXT))
</MACRO>
<MACRO>
<NAME>GDK_GL_CONTEXT_GET_CLASS</NAME>
#define GDK_GL_CONTEXT_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GL_CONTEXT, GdkGLContextClass))
</MACRO>
<STRUCT>
<NAME>GdkGLContext</NAME>
struct GdkGLContext
{
  GObject parent_instance;

  GdkGLDrawable *gldrawable;

  GdkGLConfig *glconfig;

  GdkGLContext *share_list;

  gboolean is_direct;
  int render_type;
};
</STRUCT>
<FUNCTION>
<NAME>gdk_gl_context_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_new</NAME>
<RETURNS>GdkGLContext   *</RETURNS>
GdkGLDrawable *gldrawable,GdkGLConfig   *glconfig,GdkGLContext  *share_list,gboolean       direct,int            render_type
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_copy</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLContext  *dst_glcontext,GdkGLContext  *src_glcontext,unsigned long  mask
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_get_gl_drawable</NAME>
<RETURNS>GdkGLDrawable  *</RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_get_gl_config</NAME>
<RETURNS>GdkGLConfig    *</RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_get_share_list</NAME>
<RETURNS>GdkGLContext   *</RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_is_direct</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_get_render_type</NAME>
<RETURNS>int  </RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_context_get_colormap</NAME>
<RETURNS>GdkColormap    *</RETURNS>
GdkGLContext  *glcontext
</FUNCTION>
<MACRO>
<NAME>GDK_GL_VAR</NAME>
#    define GDK_GL_VAR __declspec(dllexport)
</MACRO>
<MACRO>
<NAME>GDK_GL_VAR</NAME>
#    define GDK_GL_VAR extern __declspec(dllimport)
</MACRO>
<MACRO>
<NAME>GDK_GL_VAR</NAME>
#  define GDK_GL_VAR extern
</MACRO>
<STRUCT>
<NAME>GdkGLDrawableClass</NAME>
</STRUCT>
<MACRO>
<NAME>GDK_TYPE_GL_DRAWABLE</NAME>
#define GDK_TYPE_GL_DRAWABLE		  (gdk_gl_drawable_get_type ())
</MACRO>
<MACRO>
<NAME>GDK_GL_DRAWABLE</NAME>
#define GDK_GL_DRAWABLE(inst)		  (G_TYPE_CHECK_INSTANCE_CAST ((inst), GDK_TYPE_GL_DRAWABLE, GdkGLDrawable))
</MACRO>
<MACRO>
<NAME>GDK_GL_DRAWABLE_CLASS</NAME>
#define GDK_GL_DRAWABLE_CLASS(vtable)	  (G_TYPE_CHECK_CLASS_CAST ((vtable), GDK_TYPE_GL_DRAWABLE, GdkGLDrawableClass))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_DRAWABLE</NAME>
#define GDK_IS_GL_DRAWABLE(inst)	  (G_TYPE_CHECK_INSTANCE_TYPE ((inst), GDK_TYPE_GL_DRAWABLE))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_DRAWABLE_CLASS</NAME>
#define GDK_IS_GL_DRAWABLE_CLASS(vtable)  (G_TYPE_CHECK_CLASS_TYPE ((vtable), GDK_TYPE_GL_DRAWABLE))
</MACRO>
<MACRO>
<NAME>GDK_GL_DRAWABLE_GET_CLASS</NAME>
#define GDK_GL_DRAWABLE_GET_CLASS(inst)	  (G_TYPE_INSTANCE_GET_INTERFACE ((inst), GDK_TYPE_GL_DRAWABLE, GdkGLDrawableClass))
</MACRO>
<FUNCTION>
<NAME>gdk_gl_drawable_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_make_current</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLDrawable *gldrawable,GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_is_double_buffered</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_swap_buffers</NAME>
<RETURNS>void  </RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_wait_gl</NAME>
<RETURNS>void  </RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_wait_gdk</NAME>
<RETURNS>void  </RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_gl_begin</NAME>
<RETURNS>gboolean  </RETURNS>
GdkGLDrawable *gldrawable,GdkGLContext  *glcontext
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_gl_end</NAME>
<RETURNS>void  </RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_get_gl_config</NAME>
<RETURNS>GdkGLConfig  *</RETURNS>
GdkGLDrawable *gldrawable
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_drawable_get_size</NAME>
<RETURNS>void  </RETURNS>
GdkGLDrawable *gldrawable,gint          *width,gint          *height
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_font_use_pango_font</NAME>
<RETURNS>PangoFont  *</RETURNS>
const PangoFontDescription *font_desc,int                         first,int                         count,int                         list_base
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_font_use_pango_font_for_display</NAME>
<RETURNS>PangoFont  *</RETURNS>
GdkDisplay                 *display,const PangoFontDescription *font_desc,int                         first,int                         count,int                         list_base
</FUNCTION>
<STRUCT>
<NAME>GdkGLPixmapClass</NAME>
</STRUCT>
<MACRO>
<NAME>GDK_TYPE_GL_PIXMAP</NAME>
#define GDK_TYPE_GL_PIXMAP              (gdk_gl_pixmap_get_type ())
</MACRO>
<MACRO>
<NAME>GDK_GL_PIXMAP</NAME>
#define GDK_GL_PIXMAP(object)           (G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GL_PIXMAP, GdkGLPixmap))
</MACRO>
<MACRO>
<NAME>GDK_GL_PIXMAP_CLASS</NAME>
#define GDK_GL_PIXMAP_CLASS(klass)      (G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GL_PIXMAP, GdkGLPixmapClass))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_PIXMAP</NAME>
#define GDK_IS_GL_PIXMAP(object)        (G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GL_PIXMAP))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_PIXMAP_CLASS</NAME>
#define GDK_IS_GL_PIXMAP_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GL_PIXMAP))
</MACRO>
<MACRO>
<NAME>GDK_GL_PIXMAP_GET_CLASS</NAME>
#define GDK_GL_PIXMAP_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GL_PIXMAP, GdkGLPixmapClass))
</MACRO>
<STRUCT>
<NAME>GdkGLPixmap</NAME>
struct GdkGLPixmap
{
  GdkDrawable parent_instance;

  GdkGLConfig *glconfig;

  GdkDrawable *drawable;        /* Associated GdkPixmap */
};
</STRUCT>
<FUNCTION>
<NAME>gdk_gl_pixmap_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_pixmap_new</NAME>
<RETURNS>GdkGLPixmap  *</RETURNS>
GdkGLConfig *glconfig,GdkPixmap   *pixmap,const int   *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_pixmap_get_pixmap</NAME>
<RETURNS>GdkPixmap    *</RETURNS>
GdkGLPixmap *glpixmap
</FUNCTION>
<FUNCTION>
<NAME>gdk_pixmap_set_gl_capability</NAME>
<RETURNS>GdkGLPixmap  *</RETURNS>
GdkPixmap   *pixmap,GdkGLConfig *glconfig,const int   *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_pixmap_unset_gl_capability</NAME>
<RETURNS>void  </RETURNS>
GdkPixmap   *pixmap
</FUNCTION>
<FUNCTION>
<NAME>gdk_pixmap_is_gl_capable</NAME>
<RETURNS>gboolean  </RETURNS>
GdkPixmap   *pixmap
</FUNCTION>
<FUNCTION>
<NAME>gdk_pixmap_get_gl_pixmap</NAME>
<RETURNS>GdkGLPixmap  *</RETURNS>
GdkPixmap   *pixmap
</FUNCTION>
<MACRO>
<NAME>gdk_pixmap_get_gl_drawable</NAME>
#define      gdk_pixmap_get_gl_drawable(pixmap)         \
  GDK_GL_DRAWABLE (gdk_pixmap_get_gl_pixmap (pixmap))
</MACRO>
<USER_FUNCTION>
<NAME>GdkGLFunc</NAME>
<RETURNS>void </RETURNS>
void
</USER_FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_extension</NAME>
<RETURNS>gboolean  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_extension_for_display</NAME>
<RETURNS>gboolean  </RETURNS>
GdkDisplay *display
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_version</NAME>
<RETURNS>gboolean  </RETURNS>
int        *major,int        *minor
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_version_for_display</NAME>
<RETURNS>gboolean  </RETURNS>
GdkDisplay *display,int        *major,int        *minor
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_gl_extension</NAME>
<RETURNS>gboolean  </RETURNS>
const char *extension
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_query_get_proc_address</NAME>
<RETURNS>GdkGLFunc  </RETURNS>
const char *proc_name
</FUNCTION>
<ENUM>
<NAME>GdkGLSuccess</NAME>
typedef enum
{
  GDK_GL_SUCCESS = 0  /* same as 'Success' of X11 */
} GdkGLSuccess;
</ENUM>
<ENUM>
<NAME>GdkGLAttribListNone</NAME>
typedef enum
{
  GDK_GL_ATTRIB_LIST_NONE = 0  /* same as 'None' of X11 */
} GdkGLAttribListNone;
</ENUM>
<ENUM>
<NAME>GdkGLVisualConfigAttribute</NAME>
typedef enum
{
  GDK_GL_USE_GL           = 1,  /* support GLX rendering */
  GDK_GL_BUFFER_SIZE      = 2,  /* depth of the color buffer */
  GDK_GL_LEVEL            = 3,  /* level in plane stacking */
  GDK_GL_RGBA             = 4,  /* true if RGBA mode */
  GDK_GL_DOUBLEBUFFER     = 5,  /* double buffering supported */
  GDK_GL_STEREO           = 6,  /* stereo buffering supported */
  GDK_GL_AUX_BUFFERS      = 7,  /* number of aux buffers */
  GDK_GL_RED_SIZE         = 8,  /* number of red component bits */
  GDK_GL_GREEN_SIZE       = 9,  /* number of green component bits */
  GDK_GL_BLUE_SIZE        = 10, /* number of blue component bits */
  GDK_GL_ALPHA_SIZE       = 11, /* number of alpha component bits */
  GDK_GL_DEPTH_SIZE       = 12, /* number of depth bits */
  GDK_GL_STENCIL_SIZE     = 13, /* number of stencil bits */
  GDK_GL_ACCUM_RED_SIZE   = 14, /* number of red accum bits */
  GDK_GL_ACCUM_GREEN_SIZE = 15, /* number of green accum bits */
  GDK_GL_ACCUM_BLUE_SIZE  = 16, /* number of blue accum bits */
  GDK_GL_ACCUM_ALPHA_SIZE = 17  /* number of alpha accum bits */
} GdkGLVisualConfigAttribute;
</ENUM>
<ENUM>
<NAME>GdkGLFbConfigAttribute</NAME>
typedef enum
{
  GDK_GL_X_VISUAL_TYPE           = 0x22,
  GDK_GL_CONFIG_CAVEAT           = 0x20, /* Like visual_info VISUAL_CAVEAT_EXT */
  GDK_GL_TRANSPARENT_TYPE        = 0x23,
  GDK_GL_TRANSPARENT_INDEX_VALUE = 0x24,
  GDK_GL_TRANSPARENT_RED_VALUE   = 0x25,
  GDK_GL_TRANSPARENT_GREEN_VALUE = 0x26,
  GDK_GL_TRANSPARENT_BLUE_VALUE  = 0x27,
  GDK_GL_TRANSPARENT_ALPHA_VALUE = 0x28,
  GDK_GL_DRAWABLE_TYPE           = 0x8010,
  GDK_GL_RENDER_TYPE             = 0x8011,
  GDK_GL_X_RENDERABLE            = 0x8012,
  GDK_GL_FBCONFIG_ID             = 0x8013,
  GDK_GL_MAX_PBUFFER_WIDTH       = 0x8016,
  GDK_GL_MAX_PBUFFER_HEIGHT      = 0x8017,
  GDK_GL_MAX_PBUFFER_PIXELS      = 0x8018,
  GDK_GL_VISUAL_ID               = 0x800B
} GdkGLFbConfigAttribute;
</ENUM>
<ENUM>
<NAME>GdkGLMultisampleConfigAttribute</NAME>
typedef enum
{
  GDK_GL_SAMPLE_BUFFERS = 100000,
  GDK_GL_SAMPLES        = 100001
} GdkGLMultisampleConfigAttribute;
</ENUM>
<ENUM>
<NAME>GdkGLConfigError</NAME>
typedef enum
{
  GDK_GL_BAD_SCREEN    = 1, /* screen # is bad */
  GDK_GL_BAD_ATTRIBUTE = 2, /* attribute to get is bad */
  GDK_GL_NO_EXTENSION  = 3, /* no glx extension on server */
  GDK_GL_BAD_VISUAL    = 4, /* visual # not known by GLX */
  GDK_GL_BAD_CONTEXT   = 5, /* returned only by import_context EXT? */
  GDK_GL_BAD_VALUE     = 6, /* returned only by glXSwapIntervalSGI? */
  GDK_GL_BAD_ENUM      = 7  /* unused? */
} GdkGLConfigError;
</ENUM>
<ENUM>
<NAME>GdkGLGenericValue</NAME>
typedef enum
{
  GDK_GL_DONT_CARE              = 0xFFFFFFFF,

  /* GLX_RENDER_TYPE bits */
  GDK_GL_RGBA_BIT               = 0x00000001,
  GDK_GL_COLOR_INDEX_BIT        = 0x00000002,

  /* GLX_DRAWABLE_TYPE bits */
  GDK_GL_WINDOW_BIT             = 0x00000001,
  GDK_GL_PIXMAP_BIT             = 0x00000002,
  GDK_GL_PBUFFER_BIT            = 0x00000004,

  /* GLX_CONFIG_CAVEAT attribute values */
  GDK_GL_NONE                   = 0x8000,
  GDK_GL_SLOW_CONFIG            = 0x8001,
  GDK_GL_NON_CONFORMANT_CONFIG  = 0x800D,

  /* GLX_X_VISUAL_TYPE attribute values */
  GDK_GL_TRUE_COLOR             = 0x8002,
  GDK_GL_DIRECT_COLOR           = 0x8003,
  GDK_GL_PSEUDO_COLOR           = 0x8004,
  GDK_GL_STATIC_COLOR           = 0x8005,
  GDK_GL_GRAY_SCALE             = 0x8006,
  GDK_GL_STATIC_GRAY            = 0x8007,

  /* GLX_TRANSPARENT_TYPE attribute values */
  /* GDK_GL_NONE                   = 0x8000, */
  GDK_GL_TRANSPARENT_RGB        = 0x8008,
  GDK_GL_TRANSPARENT_INDEX      = 0x8009,

  /* glXCreateGLXPbuffer attributes */
  GDK_GL_PRESERVED_CONTENTS     = 0x801B,
  GDK_GL_LARGEST_PBUFFER        = 0x801C,
  GDK_GL_PBUFFER_HEIGHT         = 0x8040, /* New for GLX 1.3 */
  GDK_GL_PBUFFER_WIDTH          = 0x8041, /* New for GLX 1.3 */

  /* glXQueryGLXPBuffer attributes */
  GDK_GL_WIDTH                  = 0x801D,
  GDK_GL_HEIGHT                 = 0x801E,
  GDK_GL_EVENT_MASK             = 0x801F,

  /* glXCreateNewContext render_type attribute values */
  GDK_GL_RGBA_TYPE              = 0x8014,
  GDK_GL_COLOR_INDEX_TYPE       = 0x8015,

  /* glXQueryContext attributes */
  /* GDK_GL_FBCONFIG_ID            = 0x8013, */
  /* GDK_GL_RENDER_TYPE            = 0x8011, */
  GDK_GL_SCREEN                 = 0x800C,

  /* glXSelectEvent event mask bits */
  GDK_GL_PBUFFER_CLOBBER_MASK   = 0x08000000,

  /* GLXPbufferClobberEvent event_type values */
  GDK_GL_DAMAGED                = 0x8020,
  GDK_GL_SAVED                  = 0x8021,

  /* GLXPbufferClobberEvent draw_type values */
  GDK_GL_WINDOW                 = 0x8022,
  GDK_GL_PBUFFER                = 0x8023,

  /* GLXPbufferClobberEvent buffer_mask bits */
  GDK_GL_FRONT_LEFT_BUFFER_BIT  = 0x00000001,
  GDK_GL_FRONT_RIGHT_BUFFER_BIT = 0x00000002,
  GDK_GL_BACK_LEFT_BUFFER_BIT   = 0x00000004,
  GDK_GL_BACK_RIGHT_BUFFER_BIT  = 0x00000008,
  GDK_GL_AUX_BUFFERS_BIT        = 0x00000010,
  GDK_GL_DEPTH_BUFFER_BIT       = 0x00000020,
  GDK_GL_STENCIL_BUFFER_BIT     = 0x00000040,
  GDK_GL_ACCUM_BUFFER_BIT       = 0x00000080
} GdkGLGenericValue;
</ENUM>
<ENUM>
<NAME>GdkGLExtensionValue</NAME>
typedef enum
{
  /* [ GLX_EXT_visual_info extension ] */

  GDK_GL_X_VISUAL_TYPE_EXT           = 0x22, /* visual_info extension type */
  GDK_GL_TRANSPARENT_TYPE_EXT        = 0x23, /* visual_info extension */
  GDK_GL_TRANSPARENT_INDEX_VALUE_EXT = 0x24, /* visual_info extension */
  GDK_GL_TRANSPARENT_RED_VALUE_EXT   = 0x25, /* visual_info extension */
  GDK_GL_TRANSPARENT_GREEN_VALUE_EXT = 0x26, /* visual_info extension */
  GDK_GL_TRANSPARENT_BLUE_VALUE_EXT  = 0x27, /* visual_info extension */
  GDK_GL_TRANSPARENT_ALPHA_VALUE_EXT = 0x28, /* visual_info extension */

  /* Property values for visual_type */
  GDK_GL_TRUE_COLOR_EXT              = 0x8002,
  GDK_GL_DIRECT_COLOR_EXT            = 0x8003,
  GDK_GL_PSEUDO_COLOR_EXT            = 0x8004,
  GDK_GL_STATIC_COLOR_EXT            = 0x8005,
  GDK_GL_GRAY_SCALE_EXT              = 0x8006,
  GDK_GL_STATIC_GRAY_EXT             = 0x8007,

  /* Property values for transparent pixel */
  GDK_GL_NONE_EXT                    = 0x8000,
  GDK_GL_TRANSPARENT_RGB_EXT         = 0x8008,
  GDK_GL_TRANSPARENT_INDEX_EXT       = 0x8009,

  /* [ GLX_EXT_visual_rating extension ] */

  /* Property values for visual_rating */
  GDK_GL_VISUAL_CAVEAT_EXT           = 0x20,   /* visual_rating extension type */
  GDK_GL_SLOW_VISUAL_EXT             = 0x8001,
  GDK_GL_NON_CONFORMANT_VISUAL_EXT   = 0x800D
} GdkGLExtensionValue;
</ENUM>
<ENUM>
<NAME>GdkGLClientStringAttribute</NAME>
typedef enum
{
  GDK_GL_VENDOR     = 0x1,
  GDK_GL_VERSION    = 0x2,
  GDK_GL_EXTENSIONS = 0x3
} GdkGLClientStringAttribute;
</ENUM>
<ENUM>
<NAME>GdkGLContextInfoExtensionAttribute</NAME>
typedef enum
{
  GDK_GL_SHARE_CONTEXT_EXT = 0x800A, /* id of share context */
  GDK_GL_VISUAL_ID_EXT     = 0x800B, /* id of context's visual */
  GDK_GL_SCREEN_EXT        = 0x800C  /* screen number */
} GdkGLContextInfoExtensionAttribute;
</ENUM>
<STRUCT>
<NAME>GdkGLConfig</NAME>
</STRUCT>
<STRUCT>
<NAME>GdkGLContext</NAME>
</STRUCT>
<STRUCT>
<NAME>GdkGLDrawable</NAME>
</STRUCT>
<STRUCT>
<NAME>GdkGLPixmap</NAME>
</STRUCT>
<STRUCT>
<NAME>GdkGLWindow</NAME>
</STRUCT>
<STRUCT>
<NAME>GdkGLWindowClass</NAME>
</STRUCT>
<MACRO>
<NAME>GDK_TYPE_GL_WINDOW</NAME>
#define GDK_TYPE_GL_WINDOW              (gdk_gl_window_get_type ())
</MACRO>
<MACRO>
<NAME>GDK_GL_WINDOW</NAME>
#define GDK_GL_WINDOW(object)           (G_TYPE_CHECK_INSTANCE_CAST ((object), GDK_TYPE_GL_WINDOW, GdkGLWindow))
</MACRO>
<MACRO>
<NAME>GDK_GL_WINDOW_CLASS</NAME>
#define GDK_GL_WINDOW_CLASS(klass)      (G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_GL_WINDOW, GdkGLWindowClass))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_WINDOW</NAME>
#define GDK_IS_GL_WINDOW(object)        (G_TYPE_CHECK_INSTANCE_TYPE ((object), GDK_TYPE_GL_WINDOW))
</MACRO>
<MACRO>
<NAME>GDK_IS_GL_WINDOW_CLASS</NAME>
#define GDK_IS_GL_WINDOW_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_GL_WINDOW))
</MACRO>
<MACRO>
<NAME>GDK_GL_WINDOW_GET_CLASS</NAME>
#define GDK_GL_WINDOW_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_GL_WINDOW, GdkGLWindowClass))
</MACRO>
<STRUCT>
<NAME>GdkGLWindow</NAME>
struct GdkGLWindow
{
  GdkDrawable parent_instance;

  GdkGLConfig *glconfig;

  GdkDrawable *drawable;        /* Associated GdkWindow */
};
</STRUCT>
<FUNCTION>
<NAME>gdk_gl_window_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_window_new</NAME>
<RETURNS>GdkGLWindow  *</RETURNS>
GdkGLConfig *glconfig,GdkWindow   *window,const int   *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_gl_window_get_window</NAME>
<RETURNS>GdkWindow    *</RETURNS>
GdkGLWindow *glwindow
</FUNCTION>
<FUNCTION>
<NAME>gdk_window_set_gl_capability</NAME>
<RETURNS>GdkGLWindow  *</RETURNS>
GdkWindow   *window,GdkGLConfig *glconfig,const int   *attrib_list
</FUNCTION>
<FUNCTION>
<NAME>gdk_window_unset_gl_capability</NAME>
<RETURNS>void  </RETURNS>
GdkWindow   *window
</FUNCTION>
<FUNCTION>
<NAME>gdk_window_is_gl_capable</NAME>
<RETURNS>gboolean  </RETURNS>
GdkWindow   *window
</FUNCTION>
<FUNCTION>
<NAME>gdk_window_get_gl_window</NAME>
<RETURNS>GdkGLWindow  *</RETURNS>
GdkWindow   *window
</FUNCTION>
<MACRO>
<NAME>gdk_window_get_gl_drawable</NAME>
#define      gdk_window_get_gl_drawable(window)         \
  GDK_GL_DRAWABLE (gdk_window_get_gl_window (window))
</MACRO>
<MACRO>
<NAME>GDKGLEXT_MAJOR_VERSION</NAME>
#define GDKGLEXT_MAJOR_VERSION (0)
</MACRO>
<MACRO>
<NAME>GDKGLEXT_MINOR_VERSION</NAME>
#define GDKGLEXT_MINOR_VERSION (5)
</MACRO>
<MACRO>
<NAME>GDKGLEXT_MICRO_VERSION</NAME>
#define GDKGLEXT_MICRO_VERSION (1)
</MACRO>
<MACRO>
<NAME>GDKGLEXT_INTERFACE_AGE</NAME>
#define GDKGLEXT_INTERFACE_AGE (0)
</MACRO>
<MACRO>
<NAME>GDKGLEXT_BINARY_AGE</NAME>
#define GDKGLEXT_BINARY_AGE    (0)
</MACRO>
<MACRO>
<NAME>GDKGLEXT_CHECK_VERSION</NAME>
#define	GDKGLEXT_CHECK_VERSION(major, minor, micro)                          \
  (GDKGLEXT_MAJOR_VERSION > (major) ||                                       \
  (GDKGLEXT_MAJOR_VERSION == (major) && GDKGLEXT_MINOR_VERSION > (minor)) || \
  (GDKGLEXT_MAJOR_VERSION == (major) && GDKGLEXT_MINOR_VERSION == (minor) && \
   GDKGLEXT_MICRO_VERSION >= (micro)))
</MACRO>
<VARIABLE>
<NAME>gdkglext_major_version</NAME>
extern const guint gdkglext_major_version;
</VARIABLE>
<VARIABLE>
<NAME>gdkglext_minor_version</NAME>
extern const guint gdkglext_minor_version;
</VARIABLE>
<VARIABLE>
<NAME>gdkglext_micro_version</NAME>
extern const guint gdkglext_micro_version;
</VARIABLE>
<VARIABLE>
<NAME>gdkglext_interface_age</NAME>
extern const guint gdkglext_interface_age;
</VARIABLE>
<VARIABLE>
<NAME>gdkglext_binary_age</NAME>
extern const guint gdkglext_binary_age;
</VARIABLE>
<FUNCTION>
<NAME>gdk_gl_success_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_SUCCESS</NAME>
#define GDK_TYPE_GL_SUCCESS (gdk_gl_success_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_attrib_list_none_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_ATTRIB_LIST_NONE</NAME>
#define GDK_TYPE_GL_ATTRIB_LIST_NONE (gdk_gl_attrib_list_none_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_visual_config_attribute_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_VISUAL_CONFIG_ATTRIBUTE</NAME>
#define GDK_TYPE_GL_VISUAL_CONFIG_ATTRIBUTE (gdk_gl_visual_config_attribute_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_fb_config_attribute_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_FB_CONFIG_ATTRIBUTE</NAME>
#define GDK_TYPE_GL_FB_CONFIG_ATTRIBUTE (gdk_gl_fb_config_attribute_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_multisample_config_attribute_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_MULTISAMPLE_CONFIG_ATTRIBUTE</NAME>
#define GDK_TYPE_GL_MULTISAMPLE_CONFIG_ATTRIBUTE (gdk_gl_multisample_config_attribute_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_config_error_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_CONFIG_ERROR</NAME>
#define GDK_TYPE_GL_CONFIG_ERROR (gdk_gl_config_error_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_generic_value_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_GENERIC_VALUE</NAME>
#define GDK_TYPE_GL_GENERIC_VALUE (gdk_gl_generic_value_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_extension_value_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_EXTENSION_VALUE</NAME>
#define GDK_TYPE_GL_EXTENSION_VALUE (gdk_gl_extension_value_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_client_string_attribute_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_CLIENT_STRING_ATTRIBUTE</NAME>
#define GDK_TYPE_GL_CLIENT_STRING_ATTRIBUTE (gdk_gl_client_string_attribute_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_context_info_extension_attribute_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_CONTEXT_INFO_EXTENSION_ATTRIBUTE</NAME>
#define GDK_TYPE_GL_CONTEXT_INFO_EXTENSION_ATTRIBUTE (gdk_gl_context_info_extension_attribute_get_type())
</MACRO>
<FUNCTION>
<NAME>gdk_gl_config_mode_get_type</NAME>
<RETURNS>GType  </RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>GDK_TYPE_GL_CONFIG_MODE</NAME>
#define GDK_TYPE_GL_CONFIG_MODE (gdk_gl_config_mode_get_type())
</MACRO>
<MACRO>
<NAME>WIN32_LEAN_AND_MEAN</NAME>
#define WIN32_LEAN_AND_MEAN 1
</MACRO>
<MACRO>
<NAME>APIENTRY</NAME>
#define APIENTRY
</MACRO>
<MACRO>
<NAME>GLAPI</NAME>
#define GLAPI extern
</MACRO>
<MACRO>
<NAME>GLX_GLXEXT_VERSION</NAME>
#define GLX_GLXEXT_VERSION 5
</MACRO>
<MACRO>
<NAME>GLX_WINDOW_BIT</NAME>
#define GLX_WINDOW_BIT                     0x00000001
</MACRO>
<MACRO>
<NAME>GLX_PIXMAP_BIT</NAME>
#define GLX_PIXMAP_BIT                     0x00000002
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_BIT</NAME>
#define GLX_PBUFFER_BIT                    0x00000004
</MACRO>
<MACRO>
<NAME>GLX_RGBA_BIT</NAME>
#define GLX_RGBA_BIT                       0x00000001
</MACRO>
<MACRO>
<NAME>GLX_COLOR_INDEX_BIT</NAME>
#define GLX_COLOR_INDEX_BIT                0x00000002
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_CLOBBER_MASK</NAME>
#define GLX_PBUFFER_CLOBBER_MASK           0x08000000
</MACRO>
<MACRO>
<NAME>GLX_FRONT_LEFT_BUFFER_BIT</NAME>
#define GLX_FRONT_LEFT_BUFFER_BIT          0x00000001
</MACRO>
<MACRO>
<NAME>GLX_FRONT_RIGHT_BUFFER_BIT</NAME>
#define GLX_FRONT_RIGHT_BUFFER_BIT         0x00000002
</MACRO>
<MACRO>
<NAME>GLX_BACK_LEFT_BUFFER_BIT</NAME>
#define GLX_BACK_LEFT_BUFFER_BIT           0x00000004
</MACRO>
<MACRO>
<NAME>GLX_BACK_RIGHT_BUFFER_BIT</NAME>
#define GLX_BACK_RIGHT_BUFFER_BIT          0x00000008
</MACRO>
<MACRO>
<NAME>GLX_AUX_BUFFERS_BIT</NAME>
#define GLX_AUX_BUFFERS_BIT                0x00000010
</MACRO>
<MACRO>
<NAME>GLX_DEPTH_BUFFER_BIT</NAME>
#define GLX_DEPTH_BUFFER_BIT               0x00000020
</MACRO>
<MACRO>
<NAME>GLX_STENCIL_BUFFER_BIT</NAME>
#define GLX_STENCIL_BUFFER_BIT             0x00000040
</MACRO>
<MACRO>
<NAME>GLX_ACCUM_BUFFER_BIT</NAME>
#define GLX_ACCUM_BUFFER_BIT               0x00000080
</MACRO>
<MACRO>
<NAME>GLX_CONFIG_CAVEAT</NAME>
#define GLX_CONFIG_CAVEAT                  0x20
</MACRO>
<MACRO>
<NAME>GLX_X_VISUAL_TYPE</NAME>
#define GLX_X_VISUAL_TYPE                  0x22
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_TYPE</NAME>
#define GLX_TRANSPARENT_TYPE               0x23
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_INDEX_VALUE</NAME>
#define GLX_TRANSPARENT_INDEX_VALUE        0x24
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_RED_VALUE</NAME>
#define GLX_TRANSPARENT_RED_VALUE          0x25
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_GREEN_VALUE</NAME>
#define GLX_TRANSPARENT_GREEN_VALUE        0x26
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_BLUE_VALUE</NAME>
#define GLX_TRANSPARENT_BLUE_VALUE         0x27
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_ALPHA_VALUE</NAME>
#define GLX_TRANSPARENT_ALPHA_VALUE        0x28
</MACRO>
<MACRO>
<NAME>GLX_DONT_CARE</NAME>
#define GLX_DONT_CARE                      0xFFFFFFFF
</MACRO>
<MACRO>
<NAME>GLX_NONE</NAME>
#define GLX_NONE                           0x8000
</MACRO>
<MACRO>
<NAME>GLX_SLOW_CONFIG</NAME>
#define GLX_SLOW_CONFIG                    0x8001
</MACRO>
<MACRO>
<NAME>GLX_TRUE_COLOR</NAME>
#define GLX_TRUE_COLOR                     0x8002
</MACRO>
<MACRO>
<NAME>GLX_DIRECT_COLOR</NAME>
#define GLX_DIRECT_COLOR                   0x8003
</MACRO>
<MACRO>
<NAME>GLX_PSEUDO_COLOR</NAME>
#define GLX_PSEUDO_COLOR                   0x8004
</MACRO>
<MACRO>
<NAME>GLX_STATIC_COLOR</NAME>
#define GLX_STATIC_COLOR                   0x8005
</MACRO>
<MACRO>
<NAME>GLX_GRAY_SCALE</NAME>
#define GLX_GRAY_SCALE                     0x8006
</MACRO>
<MACRO>
<NAME>GLX_STATIC_GRAY</NAME>
#define GLX_STATIC_GRAY                    0x8007
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_RGB</NAME>
#define GLX_TRANSPARENT_RGB                0x8008
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_INDEX</NAME>
#define GLX_TRANSPARENT_INDEX              0x8009
</MACRO>
<MACRO>
<NAME>GLX_VISUAL_ID</NAME>
#define GLX_VISUAL_ID                      0x800B
</MACRO>
<MACRO>
<NAME>GLX_SCREEN</NAME>
#define GLX_SCREEN                         0x800C
</MACRO>
<MACRO>
<NAME>GLX_NON_CONFORMANT_CONFIG</NAME>
#define GLX_NON_CONFORMANT_CONFIG          0x800D
</MACRO>
<MACRO>
<NAME>GLX_DRAWABLE_TYPE</NAME>
#define GLX_DRAWABLE_TYPE                  0x8010
</MACRO>
<MACRO>
<NAME>GLX_RENDER_TYPE</NAME>
#define GLX_RENDER_TYPE                    0x8011
</MACRO>
<MACRO>
<NAME>GLX_X_RENDERABLE</NAME>
#define GLX_X_RENDERABLE                   0x8012
</MACRO>
<MACRO>
<NAME>GLX_FBCONFIG_ID</NAME>
#define GLX_FBCONFIG_ID                    0x8013
</MACRO>
<MACRO>
<NAME>GLX_RGBA_TYPE</NAME>
#define GLX_RGBA_TYPE                      0x8014
</MACRO>
<MACRO>
<NAME>GLX_COLOR_INDEX_TYPE</NAME>
#define GLX_COLOR_INDEX_TYPE               0x8015
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_WIDTH</NAME>
#define GLX_MAX_PBUFFER_WIDTH              0x8016
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_HEIGHT</NAME>
#define GLX_MAX_PBUFFER_HEIGHT             0x8017
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_PIXELS</NAME>
#define GLX_MAX_PBUFFER_PIXELS             0x8018
</MACRO>
<MACRO>
<NAME>GLX_PRESERVED_CONTENTS</NAME>
#define GLX_PRESERVED_CONTENTS             0x801B
</MACRO>
<MACRO>
<NAME>GLX_LARGEST_PBUFFER</NAME>
#define GLX_LARGEST_PBUFFER                0x801C
</MACRO>
<MACRO>
<NAME>GLX_WIDTH</NAME>
#define GLX_WIDTH                          0x801D
</MACRO>
<MACRO>
<NAME>GLX_HEIGHT</NAME>
#define GLX_HEIGHT                         0x801E
</MACRO>
<MACRO>
<NAME>GLX_EVENT_MASK</NAME>
#define GLX_EVENT_MASK                     0x801F
</MACRO>
<MACRO>
<NAME>GLX_DAMAGED</NAME>
#define GLX_DAMAGED                        0x8020
</MACRO>
<MACRO>
<NAME>GLX_SAVED</NAME>
#define GLX_SAVED                          0x8021
</MACRO>
<MACRO>
<NAME>GLX_WINDOW</NAME>
#define GLX_WINDOW                         0x8022
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER</NAME>
#define GLX_PBUFFER                        0x8023
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_HEIGHT</NAME>
#define GLX_PBUFFER_HEIGHT                 0x8040
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_WIDTH</NAME>
#define GLX_PBUFFER_WIDTH                  0x8041
</MACRO>
<MACRO>
<NAME>GLX_SAMPLE_BUFFERS</NAME>
#define GLX_SAMPLE_BUFFERS                 100000
</MACRO>
<MACRO>
<NAME>GLX_SAMPLES</NAME>
#define GLX_SAMPLES                        100001
</MACRO>
<MACRO>
<NAME>GLX_SAMPLE_BUFFERS_ARB</NAME>
#define GLX_SAMPLE_BUFFERS_ARB             100000
</MACRO>
<MACRO>
<NAME>GLX_SAMPLES_ARB</NAME>
#define GLX_SAMPLES_ARB                    100001
</MACRO>
<MACRO>
<NAME>GLX_SAMPLE_BUFFERS_SGIS</NAME>
#define GLX_SAMPLE_BUFFERS_SGIS            100000
</MACRO>
<MACRO>
<NAME>GLX_SAMPLES_SGIS</NAME>
#define GLX_SAMPLES_SGIS                   100001
</MACRO>
<MACRO>
<NAME>GLX_X_VISUAL_TYPE_EXT</NAME>
#define GLX_X_VISUAL_TYPE_EXT              0x22
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_TYPE_EXT</NAME>
#define GLX_TRANSPARENT_TYPE_EXT           0x23
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_INDEX_VALUE_EXT</NAME>
#define GLX_TRANSPARENT_INDEX_VALUE_EXT    0x24
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_RED_VALUE_EXT</NAME>
#define GLX_TRANSPARENT_RED_VALUE_EXT      0x25
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_GREEN_VALUE_EXT</NAME>
#define GLX_TRANSPARENT_GREEN_VALUE_EXT    0x26
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_BLUE_VALUE_EXT</NAME>
#define GLX_TRANSPARENT_BLUE_VALUE_EXT     0x27
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_ALPHA_VALUE_EXT</NAME>
#define GLX_TRANSPARENT_ALPHA_VALUE_EXT    0x28
</MACRO>
<MACRO>
<NAME>GLX_NONE_EXT</NAME>
#define GLX_NONE_EXT                       0x8000
</MACRO>
<MACRO>
<NAME>GLX_TRUE_COLOR_EXT</NAME>
#define GLX_TRUE_COLOR_EXT                 0x8002
</MACRO>
<MACRO>
<NAME>GLX_DIRECT_COLOR_EXT</NAME>
#define GLX_DIRECT_COLOR_EXT               0x8003
</MACRO>
<MACRO>
<NAME>GLX_PSEUDO_COLOR_EXT</NAME>
#define GLX_PSEUDO_COLOR_EXT               0x8004
</MACRO>
<MACRO>
<NAME>GLX_STATIC_COLOR_EXT</NAME>
#define GLX_STATIC_COLOR_EXT               0x8005
</MACRO>
<MACRO>
<NAME>GLX_GRAY_SCALE_EXT</NAME>
#define GLX_GRAY_SCALE_EXT                 0x8006
</MACRO>
<MACRO>
<NAME>GLX_STATIC_GRAY_EXT</NAME>
#define GLX_STATIC_GRAY_EXT                0x8007
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_RGB_EXT</NAME>
#define GLX_TRANSPARENT_RGB_EXT            0x8008
</MACRO>
<MACRO>
<NAME>GLX_TRANSPARENT_INDEX_EXT</NAME>
#define GLX_TRANSPARENT_INDEX_EXT          0x8009
</MACRO>
<MACRO>
<NAME>GLX_VISUAL_CAVEAT_EXT</NAME>
#define GLX_VISUAL_CAVEAT_EXT              0x20
</MACRO>
<MACRO>
<NAME>GLX_SLOW_VISUAL_EXT</NAME>
#define GLX_SLOW_VISUAL_EXT                0x8001
</MACRO>
<MACRO>
<NAME>GLX_NON_CONFORMANT_VISUAL_EXT</NAME>
#define GLX_NON_CONFORMANT_VISUAL_EXT      0x800D
</MACRO>
<MACRO>
<NAME>GLX_SHARE_CONTEXT_EXT</NAME>
#define GLX_SHARE_CONTEXT_EXT              0x800A
</MACRO>
<MACRO>
<NAME>GLX_VISUAL_ID_EXT</NAME>
#define GLX_VISUAL_ID_EXT                  0x800B
</MACRO>
<MACRO>
<NAME>GLX_SCREEN_EXT</NAME>
#define GLX_SCREEN_EXT                     0x800C
</MACRO>
<MACRO>
<NAME>GLX_WINDOW_BIT_SGIX</NAME>
#define GLX_WINDOW_BIT_SGIX                0x00000001
</MACRO>
<MACRO>
<NAME>GLX_PIXMAP_BIT_SGIX</NAME>
#define GLX_PIXMAP_BIT_SGIX                0x00000002
</MACRO>
<MACRO>
<NAME>GLX_RGBA_BIT_SGIX</NAME>
#define GLX_RGBA_BIT_SGIX                  0x00000001
</MACRO>
<MACRO>
<NAME>GLX_COLOR_INDEX_BIT_SGIX</NAME>
#define GLX_COLOR_INDEX_BIT_SGIX           0x00000002
</MACRO>
<MACRO>
<NAME>GLX_DRAWABLE_TYPE_SGIX</NAME>
#define GLX_DRAWABLE_TYPE_SGIX             0x8010
</MACRO>
<MACRO>
<NAME>GLX_RENDER_TYPE_SGIX</NAME>
#define GLX_RENDER_TYPE_SGIX               0x8011
</MACRO>
<MACRO>
<NAME>GLX_X_RENDERABLE_SGIX</NAME>
#define GLX_X_RENDERABLE_SGIX              0x8012
</MACRO>
<MACRO>
<NAME>GLX_FBCONFIG_ID_SGIX</NAME>
#define GLX_FBCONFIG_ID_SGIX               0x8013
</MACRO>
<MACRO>
<NAME>GLX_RGBA_TYPE_SGIX</NAME>
#define GLX_RGBA_TYPE_SGIX                 0x8014
</MACRO>
<MACRO>
<NAME>GLX_COLOR_INDEX_TYPE_SGIX</NAME>
#define GLX_COLOR_INDEX_TYPE_SGIX          0x8015
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_BIT_SGIX</NAME>
#define GLX_PBUFFER_BIT_SGIX               0x00000004
</MACRO>
<MACRO>
<NAME>GLX_BUFFER_CLOBBER_MASK_SGIX</NAME>
#define GLX_BUFFER_CLOBBER_MASK_SGIX       0x08000000
</MACRO>
<MACRO>
<NAME>GLX_FRONT_LEFT_BUFFER_BIT_SGIX</NAME>
#define GLX_FRONT_LEFT_BUFFER_BIT_SGIX     0x00000001
</MACRO>
<MACRO>
<NAME>GLX_FRONT_RIGHT_BUFFER_BIT_SGIX</NAME>
#define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX    0x00000002
</MACRO>
<MACRO>
<NAME>GLX_BACK_LEFT_BUFFER_BIT_SGIX</NAME>
#define GLX_BACK_LEFT_BUFFER_BIT_SGIX      0x00000004
</MACRO>
<MACRO>
<NAME>GLX_BACK_RIGHT_BUFFER_BIT_SGIX</NAME>
#define GLX_BACK_RIGHT_BUFFER_BIT_SGIX     0x00000008
</MACRO>
<MACRO>
<NAME>GLX_AUX_BUFFERS_BIT_SGIX</NAME>
#define GLX_AUX_BUFFERS_BIT_SGIX           0x00000010
</MACRO>
<MACRO>
<NAME>GLX_DEPTH_BUFFER_BIT_SGIX</NAME>
#define GLX_DEPTH_BUFFER_BIT_SGIX          0x00000020
</MACRO>
<MACRO>
<NAME>GLX_STENCIL_BUFFER_BIT_SGIX</NAME>
#define GLX_STENCIL_BUFFER_BIT_SGIX        0x00000040
</MACRO>
<MACRO>
<NAME>GLX_ACCUM_BUFFER_BIT_SGIX</NAME>
#define GLX_ACCUM_BUFFER_BIT_SGIX          0x00000080
</MACRO>
<MACRO>
<NAME>GLX_SAMPLE_BUFFERS_BIT_SGIX</NAME>
#define GLX_SAMPLE_BUFFERS_BIT_SGIX        0x00000100
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_WIDTH_SGIX</NAME>
#define GLX_MAX_PBUFFER_WIDTH_SGIX         0x8016
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_HEIGHT_SGIX</NAME>
#define GLX_MAX_PBUFFER_HEIGHT_SGIX        0x8017
</MACRO>
<MACRO>
<NAME>GLX_MAX_PBUFFER_PIXELS_SGIX</NAME>
#define GLX_MAX_PBUFFER_PIXELS_SGIX        0x8018
</MACRO>
<MACRO>
<NAME>GLX_OPTIMAL_PBUFFER_WIDTH_SGIX</NAME>
#define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX     0x8019
</MACRO>
<MACRO>
<NAME>GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX</NAME>
#define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX    0x801A
</MACRO>
<MACRO>
<NAME>GLX_PRESERVED_CONTENTS_SGIX</NAME>
#define GLX_PRESERVED_CONTENTS_SGIX        0x801B
</MACRO>
<MACRO>
<NAME>GLX_LARGEST_PBUFFER_SGIX</NAME>
#define GLX_LARGEST_PBUFFER_SGIX           0x801C
</MACRO>
<MACRO>
<NAME>GLX_WIDTH_SGIX</NAME>
#define GLX_WIDTH_SGIX                     0x801D
</MACRO>
<MACRO>
<NAME>GLX_HEIGHT_SGIX</NAME>
#define GLX_HEIGHT_SGIX                    0x801E
</MACRO>
<MACRO>
<NAME>GLX_EVENT_MASK_SGIX</NAME>
#define GLX_EVENT_MASK_SGIX                0x801F
</MACRO>
<MACRO>
<NAME>GLX_DAMAGED_SGIX</NAME>
#define GLX_DAMAGED_SGIX                   0x8020
</MACRO>
<MACRO>
<NAME>GLX_SAVED_SGIX</NAME>
#define GLX_SAVED_SGIX                     0x8021
</MACRO>
<MACRO>
<NAME>GLX_WINDOW_SGIX</NAME>
#define GLX_WINDOW_SGIX                    0x8022
</MACRO>
<MACRO>
<NAME>GLX_PBUFFER_SGIX</NAME>
#define GLX_PBUFFER_SGIX                   0x8023
</MACRO>
<MACRO>
<NAME>GLX_SYNC_FRAME_SGIX</NAME>
#define GLX_SYNC_FRAME_SGIX                0x00000000
</MACRO>
<MACRO>
<NAME>GLX_SYNC_SWAP_SGIX</NAME>
#define GLX_SYNC_SWAP_SGIX                 0x00000001
</MACRO>
<MACRO>
<NAME>GLX_DIGITAL_MEDIA_PBUFFER_SGIX</NAME>
#define GLX_DIGITAL_MEDIA_PBUFFER_SGIX     0x8024
</MACRO>
<MACRO>
<NAME>GLX_BLENDED_RGBA_SGIS</NAME>
#define GLX_BLENDED_RGBA_SGIS              0x8025
</MACRO>
<MACRO>
<NAME>GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS</NAME>
#define GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS 0x8026
</MACRO>
<MACRO>
<NAME>GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS</NAME>
#define GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS 0x8027
</MACRO>
<MACRO>
<NAME>GLX_SAMPLE_BUFFERS_3DFX</NAME>
#define GLX_SAMPLE_BUFFERS_3DFX            0x8050
</MACRO>
<MACRO>
<NAME>GLX_SAMPLES_3DFX</NAME>
#define GLX_SAMPLES_3DFX                   0x8051
</MACRO>
<MACRO>
<NAME>GLX_3DFX_WINDOW_MODE_MESA</NAME>
#define GLX_3DFX_WINDOW_MODE_MESA          0x1
</MACRO>
<MACRO>
<NAME>GLX_3DFX_FULLSCREEN_MODE_MESA</NAME>
#define GLX_3DFX_FULLSCREEN_MODE_MESA      0x2
</MACRO>
<MACRO>
<NAME>GLX_VISUAL_SELECT_GROUP_SGIX</NAME>
#define GLX_VISUAL_SELECT_GROUP_SGIX       0x8028
</MACRO>
<MACRO>
<NAME>GLX_SWAP_METHOD_OML</NAME>
#define GLX_SWAP_METHOD_OML                0x8060
</MACRO>
<MACRO>
<NAME>GLX_SWAP_EXCHANGE_OML</NAME>
#define GLX_SWAP_EXCHANGE_OML              0x8061
</MACRO>
<MACRO>
<NAME>GLX_SWAP_COPY_OML</NAME>
#define GLX_SWAP_COPY_OML                  0x8062
</MACRO>
<MACRO>
<NAME>GLX_SWAP_UNDEFINED_OML</NAME>
#define GLX_SWAP_UNDEFINED_OML             0x8063
</MACRO>
<USER_FUNCTION>
<NAME>__GLXextFuncPtr</NAME>
<RETURNS>void </RETURNS>
void
</USER_FUNCTION>
<TYPEDEF>
<NAME>GLXVideoSourceSGIX</NAME>
typedef XID GLXVideoSourceSGIX;
</TYPEDEF>
<TYPEDEF>
<NAME>GLXFBConfigIDSGIX</NAME>
typedef XID GLXFBConfigIDSGIX;
</TYPEDEF>
<TYPEDEF>
<NAME>GLXPbufferSGIX</NAME>
typedef XID GLXPbufferSGIX;
</TYPEDEF>
<TYPEDEF>
<NAME>GLXBufferClobberEventSGIX</NAME>
typedef struct {
    int type;
    unsigned long serial;	  /* # of last request processed by server */
    Bool send_event;		  /* true if this came for SendEvent request */
    Display *display;		  /* display the event was read from */
    GLXDrawable drawable;	  /* i.d. of Drawable */
    int event_type;		  /* GLX_DAMAGED_SGIX or GLX_SAVED_SGIX */
    int draw_type;		  /* GLX_WINDOW_SGIX or GLX_PBUFFER_SGIX */
    unsigned int mask;	  /* mask indicating which buffers are affected*/
    int x, y;
    int width, height;
    int count;		  /* if nonzero, at least this many more */
} GLXBufferClobberEventSGIX;
</TYPEDEF>
<MACRO>
<NAME>GLX_VERSION_1_3</NAME>
#define GLX_VERSION_1_3 1
</MACRO>
<FUNCTION>
<NAME>glXGetFBConfigs</NAME>
<RETURNS>GLXFBConfig  *</RETURNS>
Display *, int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXChooseFBConfig</NAME>
<RETURNS>GLXFBConfig  *</RETURNS>
Display *, int, const int *, int *
</FUNCTION>
<FUNCTION>
<NAME>glXGetFBConfigAttrib</NAME>
<RETURNS>int  </RETURNS>
Display *, GLXFBConfig, int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXGetVisualFromFBConfig</NAME>
<RETURNS>XVisualInfo  *</RETURNS>
Display *, GLXFBConfig
</FUNCTION>
<FUNCTION>
<NAME>glXCreateWindow</NAME>
<RETURNS>GLXWindow  </RETURNS>
Display *, GLXFBConfig, Window, const int *
</FUNCTION>
<FUNCTION>
<NAME>glXDestroyWindow</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXWindow
</FUNCTION>
<FUNCTION>
<NAME>glXCreatePixmap</NAME>
<RETURNS>GLXPixmap  </RETURNS>
Display *, GLXFBConfig, Pixmap, const int *
</FUNCTION>
<FUNCTION>
<NAME>glXDestroyPixmap</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXPixmap
</FUNCTION>
<FUNCTION>
<NAME>glXCreatePbuffer</NAME>
<RETURNS>GLXPbuffer  </RETURNS>
Display *, GLXFBConfig, const int *
</FUNCTION>
<FUNCTION>
<NAME>glXDestroyPbuffer</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXPbuffer
</FUNCTION>
<FUNCTION>
<NAME>glXQueryDrawable</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, int, unsigned int *
</FUNCTION>
<FUNCTION>
<NAME>glXCreateNewContext</NAME>
<RETURNS>GLXContext  </RETURNS>
Display *, GLXFBConfig, int, GLXContext, Bool
</FUNCTION>
<FUNCTION>
<NAME>glXMakeContextCurrent</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, GLXDrawable, GLXContext
</FUNCTION>
<FUNCTION>
<NAME>glXGetCurrentReadDrawable</NAME>
<RETURNS>GLXDrawable  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>glXGetCurrentDisplay</NAME>
<RETURNS>Display  *</RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>glXQueryContext</NAME>
<RETURNS>int  </RETURNS>
Display *, GLXContext, int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXSelectEvent</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, unsigned long
</FUNCTION>
<FUNCTION>
<NAME>glXGetSelectedEvent</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, unsigned long *
</FUNCTION>
<TYPEDEF>
<NAME>nelements)</NAME>
typedef GLXFBConfig * ( * PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements);
</TYPEDEF>
<TYPEDEF>
<NAME>nelements)</NAME>
typedef GLXFBConfig * ( * PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef int ( * PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>config)</NAME>
typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config);
</TYPEDEF>
<TYPEDEF>
<NAME>attrib_list)</NAME>
typedef GLXWindow ( * PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list);
</TYPEDEF>
<TYPEDEF>
<NAME>win)</NAME>
typedef void ( * PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win);
</TYPEDEF>
<TYPEDEF>
<NAME>attrib_list)</NAME>
typedef GLXPixmap ( * PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list);
</TYPEDEF>
<TYPEDEF>
<NAME>pixmap)</NAME>
typedef void ( * PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap);
</TYPEDEF>
<TYPEDEF>
<NAME>attrib_list)</NAME>
typedef GLXPbuffer ( * PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *attrib_list);
</TYPEDEF>
<TYPEDEF>
<NAME>pbuf)</NAME>
typedef void ( * PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef void ( * PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>direct)</NAME>
typedef GLXContext ( * PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);
</TYPEDEF>
<TYPEDEF>
<NAME>ctx)</NAME>
typedef Bool ( * PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef int ( * PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>event_mask)</NAME>
typedef void ( * PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask);
</TYPEDEF>
<TYPEDEF>
<NAME>event_mask)</NAME>
typedef void ( * PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask);
</TYPEDEF>
<MACRO>
<NAME>GLX_VERSION_1_4</NAME>
#define GLX_VERSION_1_4 1
</MACRO>
<FUNCTION>
<NAME>glXGetProcAddress</NAME>
<RETURNS>__GLXextFuncPtr  </RETURNS>
const GLubyte *
</FUNCTION>
<TYPEDEF>
<NAME>procName)</NAME>
typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSPROC) (const GLubyte *procName);
</TYPEDEF>
<MACRO>
<NAME>GLX_ARB_get_proc_address</NAME>
#define GLX_ARB_get_proc_address 1
</MACRO>
<FUNCTION>
<NAME>glXGetProcAddressARB</NAME>
<RETURNS>__GLXextFuncPtr  </RETURNS>
const GLubyte *
</FUNCTION>
<TYPEDEF>
<NAME>procName)</NAME>
typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);
</TYPEDEF>
<MACRO>
<NAME>GLX_ARB_multisample</NAME>
#define GLX_ARB_multisample 1
</MACRO>
<MACRO>
<NAME>GLX_SGIS_multisample</NAME>
#define GLX_SGIS_multisample 1
</MACRO>
<MACRO>
<NAME>GLX_EXT_visual_info</NAME>
#define GLX_EXT_visual_info 1
</MACRO>
<MACRO>
<NAME>GLX_SGI_swap_control</NAME>
#define GLX_SGI_swap_control 1
</MACRO>
<FUNCTION>
<NAME>glXSwapIntervalSGI</NAME>
<RETURNS>int  </RETURNS>
int
</FUNCTION>
<TYPEDEF>
<NAME>interval)</NAME>
typedef int ( * PFNGLXSWAPINTERVALSGIPROC) (int interval);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGI_video_sync</NAME>
#define GLX_SGI_video_sync 1
</MACRO>
<FUNCTION>
<NAME>glXGetVideoSyncSGI</NAME>
<RETURNS>int  </RETURNS>
unsigned int *
</FUNCTION>
<FUNCTION>
<NAME>glXWaitVideoSyncSGI</NAME>
<RETURNS>int  </RETURNS>
int, int, unsigned int *
</FUNCTION>
<TYPEDEF>
<NAME>count)</NAME>
typedef int ( * PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int *count);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef int ( * PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int *count);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGI_make_current_read</NAME>
#define GLX_SGI_make_current_read 1
</MACRO>
<FUNCTION>
<NAME>glXMakeCurrentReadSGI</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, GLXDrawable, GLXContext
</FUNCTION>
<FUNCTION>
<NAME>glXGetCurrentReadDrawableSGI</NAME>
<RETURNS>GLXDrawable  </RETURNS>
void
</FUNCTION>
<TYPEDEF>
<NAME>ctx)</NAME>
typedef Bool ( * PFNGLXMAKECURRENTREADSGIPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_video_source</NAME>
#define GLX_SGIX_video_source 1
</MACRO>
<FUNCTION>
<NAME>glXCreateGLXVideoSourceSGIX</NAME>
<RETURNS>GLXVideoSourceSGIX  </RETURNS>
Display *, int, VLServer, VLPath, int, VLNode
</FUNCTION>
<FUNCTION>
<NAME>glXDestroyGLXVideoSourceSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXVideoSourceSGIX
</FUNCTION>
<TYPEDEF>
<NAME>drainNode)</NAME>
typedef GLXVideoSourceSGIX ( * PFNGLXCREATEGLXVIDEOSOURCESGIXPROC) (Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode);
</TYPEDEF>
<TYPEDEF>
<NAME>glxvideosource)</NAME>
typedef void ( * PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC) (Display *dpy, GLXVideoSourceSGIX glxvideosource);
</TYPEDEF>
<MACRO>
<NAME>GLX_EXT_visual_rating</NAME>
#define GLX_EXT_visual_rating 1
</MACRO>
<MACRO>
<NAME>GLX_EXT_import_context</NAME>
#define GLX_EXT_import_context 1
</MACRO>
<FUNCTION>
<NAME>glXGetCurrentDisplayEXT</NAME>
<RETURNS>Display  *</RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>glXQueryContextInfoEXT</NAME>
<RETURNS>int  </RETURNS>
Display *, GLXContext, int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXGetContextIDEXT</NAME>
<RETURNS>GLXContextID  </RETURNS>
const GLXContext
</FUNCTION>
<FUNCTION>
<NAME>glXImportContextEXT</NAME>
<RETURNS>GLXContext  </RETURNS>
Display *, GLXContextID
</FUNCTION>
<FUNCTION>
<NAME>glXFreeContextEXT</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXContext
</FUNCTION>
<TYPEDEF>
<NAME>value)</NAME>
typedef int ( * PFNGLXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>context)</NAME>
typedef GLXContextID ( * PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context);
</TYPEDEF>
<TYPEDEF>
<NAME>contextID)</NAME>
typedef GLXContext ( * PFNGLXIMPORTCONTEXTEXTPROC) (Display *dpy, GLXContextID contextID);
</TYPEDEF>
<TYPEDEF>
<NAME>context)</NAME>
typedef void ( * PFNGLXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_fbconfig</NAME>
#define GLX_SGIX_fbconfig 1
</MACRO>
<FUNCTION>
<NAME>glXGetFBConfigAttribSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, GLXFBConfigSGIX, int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXChooseFBConfigSGIX</NAME>
<RETURNS>GLXFBConfigSGIX  *</RETURNS>
Display *, int, int *, int *
</FUNCTION>
<FUNCTION>
<NAME>glXCreateGLXPixmapWithConfigSGIX</NAME>
<RETURNS>GLXPixmap  </RETURNS>
Display *, GLXFBConfigSGIX, Pixmap
</FUNCTION>
<FUNCTION>
<NAME>glXCreateContextWithConfigSGIX</NAME>
<RETURNS>GLXContext  </RETURNS>
Display *, GLXFBConfigSGIX, int, GLXContext, Bool
</FUNCTION>
<FUNCTION>
<NAME>glXGetVisualFromFBConfigSGIX</NAME>
<RETURNS>XVisualInfo  *</RETURNS>
Display *, GLXFBConfigSGIX
</FUNCTION>
<FUNCTION>
<NAME>glXGetFBConfigFromVisualSGIX</NAME>
<RETURNS>GLXFBConfigSGIX  </RETURNS>
Display *, XVisualInfo *
</FUNCTION>
<TYPEDEF>
<NAME>value)</NAME>
typedef int ( * PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int attribute, int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>nelements)</NAME>
typedef GLXFBConfigSGIX * ( * PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display *dpy, int screen, int *attrib_list, int *nelements);
</TYPEDEF>
<TYPEDEF>
<NAME>pixmap)</NAME>
typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, Pixmap pixmap);
</TYPEDEF>
<TYPEDEF>
<NAME>direct)</NAME>
typedef GLXContext ( * PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct);
</TYPEDEF>
<TYPEDEF>
<NAME>config)</NAME>
typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config);
</TYPEDEF>
<TYPEDEF>
<NAME>vis)</NAME>
typedef GLXFBConfigSGIX ( * PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display *dpy, XVisualInfo *vis);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_pbuffer</NAME>
#define GLX_SGIX_pbuffer 1
</MACRO>
<FUNCTION>
<NAME>glXCreateGLXPbufferSGIX</NAME>
<RETURNS>GLXPbufferSGIX  </RETURNS>
Display *, GLXFBConfigSGIX, unsigned int, unsigned int, int *
</FUNCTION>
<FUNCTION>
<NAME>glXDestroyGLXPbufferSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXPbufferSGIX
</FUNCTION>
<FUNCTION>
<NAME>glXQueryGLXPbufferSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, GLXPbufferSGIX, int, unsigned int *
</FUNCTION>
<FUNCTION>
<NAME>glXSelectEventSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, unsigned long
</FUNCTION>
<FUNCTION>
<NAME>glXGetSelectedEventSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, unsigned long *
</FUNCTION>
<TYPEDEF>
<NAME>attrib_list)</NAME>
typedef GLXPbufferSGIX ( * PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
</TYPEDEF>
<TYPEDEF>
<NAME>pbuf)</NAME>
typedef void ( * PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef int ( * PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
</TYPEDEF>
<TYPEDEF>
<NAME>mask)</NAME>
typedef void ( * PFNGLXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
</TYPEDEF>
<TYPEDEF>
<NAME>mask)</NAME>
typedef void ( * PFNGLXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGI_cushion</NAME>
#define GLX_SGI_cushion 1
</MACRO>
<FUNCTION>
<NAME>glXCushionSGI</NAME>
<RETURNS>void  </RETURNS>
Display *, Window, float
</FUNCTION>
<TYPEDEF>
<NAME>cushion)</NAME>
typedef void ( * PFNGLXCUSHIONSGIPROC) (Display *dpy, Window window, float cushion);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_video_resize</NAME>
#define GLX_SGIX_video_resize 1
</MACRO>
<FUNCTION>
<NAME>glXBindChannelToWindowSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, int, int, Window
</FUNCTION>
<FUNCTION>
<NAME>glXChannelRectSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, int, int, int, int, int, int
</FUNCTION>
<FUNCTION>
<NAME>glXQueryChannelRectSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, int, int, int *, int *, int *, int *
</FUNCTION>
<FUNCTION>
<NAME>glXQueryChannelDeltasSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, int, int, int *, int *, int *, int *
</FUNCTION>
<FUNCTION>
<NAME>glXChannelRectSyncSGIX</NAME>
<RETURNS>int  </RETURNS>
Display *, int, int, GLenum
</FUNCTION>
<TYPEDEF>
<NAME>window)</NAME>
typedef int ( * PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display *display, int screen, int channel, Window window);
</TYPEDEF>
<TYPEDEF>
<NAME>h)</NAME>
typedef int ( * PFNGLXCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int x, int y, int w, int h);
</TYPEDEF>
<TYPEDEF>
<NAME>dh)</NAME>
typedef int ( * PFNGLXQUERYCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh);
</TYPEDEF>
<TYPEDEF>
<NAME>h)</NAME>
typedef int ( * PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display *display, int screen, int channel, int *x, int *y, int *w, int *h);
</TYPEDEF>
<TYPEDEF>
<NAME>synctype)</NAME>
typedef int ( * PFNGLXCHANNELRECTSYNCSGIXPROC) (Display *display, int screen, int channel, GLenum synctype);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_dmbuffer</NAME>
#define GLX_SGIX_dmbuffer 1
</MACRO>
<FUNCTION>
<NAME>glXAssociateDMPbufferSGIX</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXPbufferSGIX, DMparams *, DMbuffer
</FUNCTION>
<TYPEDEF>
<NAME>dmbuffer)</NAME>
typedef Bool ( * PFNGLXASSOCIATEDMPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_swap_group</NAME>
#define GLX_SGIX_swap_group 1
</MACRO>
<FUNCTION>
<NAME>glXJoinSwapGroupSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, GLXDrawable
</FUNCTION>
<TYPEDEF>
<NAME>member)</NAME>
typedef void ( * PFNGLXJOINSWAPGROUPSGIXPROC) (Display *dpy, GLXDrawable drawable, GLXDrawable member);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_swap_barrier</NAME>
#define GLX_SGIX_swap_barrier 1
</MACRO>
<FUNCTION>
<NAME>glXBindSwapBarrierSGIX</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, int
</FUNCTION>
<FUNCTION>
<NAME>glXQueryMaxSwapBarriersSGIX</NAME>
<RETURNS>Bool  </RETURNS>
Display *, int, int *
</FUNCTION>
<TYPEDEF>
<NAME>barrier)</NAME>
typedef void ( * PFNGLXBINDSWAPBARRIERSGIXPROC) (Display *dpy, GLXDrawable drawable, int barrier);
</TYPEDEF>
<TYPEDEF>
<NAME>max)</NAME>
typedef Bool ( * PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display *dpy, int screen, int *max);
</TYPEDEF>
<MACRO>
<NAME>GLX_SUN_get_transparent_index</NAME>
#define GLX_SUN_get_transparent_index 1
</MACRO>
<FUNCTION>
<NAME>glXGetTransparentIndexSUN</NAME>
<RETURNS>Status  </RETURNS>
Display *, Window, Window, long *
</FUNCTION>
<TYPEDEF>
<NAME>pTransparentIndex)</NAME>
typedef Status ( * PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex);
</TYPEDEF>
<MACRO>
<NAME>GLX_MESA_copy_sub_buffer</NAME>
#define GLX_MESA_copy_sub_buffer 1
</MACRO>
<FUNCTION>
<NAME>glXCopySubBufferMESA</NAME>
<RETURNS>void  </RETURNS>
Display *, GLXDrawable, int, int, int, int
</FUNCTION>
<TYPEDEF>
<NAME>height)</NAME>
typedef void ( * PFNGLXCOPYSUBBUFFERMESAPROC) (Display *dpy, GLXDrawable drawable, int x, int y, int width, int height);
</TYPEDEF>
<MACRO>
<NAME>GLX_MESA_pixmap_colormap</NAME>
#define GLX_MESA_pixmap_colormap 1
</MACRO>
<FUNCTION>
<NAME>glXCreateGLXPixmapMESA</NAME>
<RETURNS>GLXPixmap  </RETURNS>
Display *, XVisualInfo *, Pixmap, Colormap
</FUNCTION>
<TYPEDEF>
<NAME>cmap)</NAME>
typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPMESAPROC) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap);
</TYPEDEF>
<MACRO>
<NAME>GLX_MESA_release_buffers</NAME>
#define GLX_MESA_release_buffers 1
</MACRO>
<FUNCTION>
<NAME>glXReleaseBuffersMESA</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable
</FUNCTION>
<TYPEDEF>
<NAME>drawable)</NAME>
typedef Bool ( * PFNGLXRELEASEBUFFERSMESAPROC) (Display *dpy, GLXDrawable drawable);
</TYPEDEF>
<MACRO>
<NAME>GLX_MESA_set_3dfx_mode</NAME>
#define GLX_MESA_set_3dfx_mode 1
</MACRO>
<FUNCTION>
<NAME>glXSet3DfxModeMESA</NAME>
<RETURNS>Bool  </RETURNS>
int
</FUNCTION>
<TYPEDEF>
<NAME>mode)</NAME>
typedef Bool ( * PFNGLXSET3DFXMODEMESAPROC) (int mode);
</TYPEDEF>
<MACRO>
<NAME>GLX_SGIX_visual_select_group</NAME>
#define GLX_SGIX_visual_select_group 1
</MACRO>
<MACRO>
<NAME>GLX_OML_swap_method</NAME>
#define GLX_OML_swap_method 1
</MACRO>
<MACRO>
<NAME>GLX_OML_sync_control</NAME>
#define GLX_OML_sync_control 1
</MACRO>
<FUNCTION>
<NAME>glXGetSyncValuesOML</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, int64_t *, int64_t *, int64_t *
</FUNCTION>
<FUNCTION>
<NAME>glXGetMscRateOML</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, int32_t *, int32_t *
</FUNCTION>
<FUNCTION>
<NAME>glXSwapBuffersMscOML</NAME>
<RETURNS>int64_t  </RETURNS>
Display *, GLXDrawable, int64_t, int64_t, int64_t
</FUNCTION>
<FUNCTION>
<NAME>glXWaitForMscOML</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, int64_t, int64_t, int64_t, int64_t *, int64_t *, int64_t *
</FUNCTION>
<FUNCTION>
<NAME>glXWaitForSbcOML</NAME>
<RETURNS>Bool  </RETURNS>
Display *, GLXDrawable, int64_t, int64_t *, int64_t *, int64_t *
</FUNCTION>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef Bool ( * PFNGLXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc);
</TYPEDEF>
<TYPEDEF>
<NAME>denominator)</NAME>
typedef Bool ( * PFNGLXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator);
</TYPEDEF>
<TYPEDEF>
<NAME>remainder)</NAME>
typedef int64_t ( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);
</TYPEDEF>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef Bool ( * PFNGLXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc);
</TYPEDEF>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef Bool ( * PFNGLXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc);
</TYPEDEF>
<MACRO>
<NAME>WIN32_LEAN_AND_MEAN</NAME>
#define WIN32_LEAN_AND_MEAN 1
</MACRO>
<MACRO>
<NAME>APIENTRY</NAME>
#define APIENTRY
</MACRO>
<MACRO>
<NAME>GLAPI</NAME>
#define GLAPI extern
</MACRO>
<MACRO>
<NAME>GL_GLEXT_VERSION</NAME>
#define GL_GLEXT_VERSION 17
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_BYTE_3_3_2</NAME>
#define GL_UNSIGNED_BYTE_3_3_2            0x8032
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_4_4_4_4</NAME>
#define GL_UNSIGNED_SHORT_4_4_4_4         0x8033
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_5_5_5_1</NAME>
#define GL_UNSIGNED_SHORT_5_5_5_1         0x8034
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_8_8_8_8</NAME>
#define GL_UNSIGNED_INT_8_8_8_8           0x8035
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_10_10_10_2</NAME>
#define GL_UNSIGNED_INT_10_10_10_2        0x8036
</MACRO>
<MACRO>
<NAME>GL_RESCALE_NORMAL</NAME>
#define GL_RESCALE_NORMAL                 0x803A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BINDING_3D</NAME>
#define GL_TEXTURE_BINDING_3D             0x806A
</MACRO>
<MACRO>
<NAME>GL_PACK_SKIP_IMAGES</NAME>
#define GL_PACK_SKIP_IMAGES               0x806B
</MACRO>
<MACRO>
<NAME>GL_PACK_IMAGE_HEIGHT</NAME>
#define GL_PACK_IMAGE_HEIGHT              0x806C
</MACRO>
<MACRO>
<NAME>GL_UNPACK_SKIP_IMAGES</NAME>
#define GL_UNPACK_SKIP_IMAGES             0x806D
</MACRO>
<MACRO>
<NAME>GL_UNPACK_IMAGE_HEIGHT</NAME>
#define GL_UNPACK_IMAGE_HEIGHT            0x806E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_3D</NAME>
#define GL_TEXTURE_3D                     0x806F
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_3D</NAME>
#define GL_PROXY_TEXTURE_3D               0x8070
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEPTH</NAME>
#define GL_TEXTURE_DEPTH                  0x8071
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_WRAP_R</NAME>
#define GL_TEXTURE_WRAP_R                 0x8072
</MACRO>
<MACRO>
<NAME>GL_MAX_3D_TEXTURE_SIZE</NAME>
#define GL_MAX_3D_TEXTURE_SIZE            0x8073
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_BYTE_2_3_3_REV</NAME>
#define GL_UNSIGNED_BYTE_2_3_3_REV        0x8362
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_5_6_5</NAME>
#define GL_UNSIGNED_SHORT_5_6_5           0x8363
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_5_6_5_REV</NAME>
#define GL_UNSIGNED_SHORT_5_6_5_REV       0x8364
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_4_4_4_4_REV</NAME>
#define GL_UNSIGNED_SHORT_4_4_4_4_REV     0x8365
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_1_5_5_5_REV</NAME>
#define GL_UNSIGNED_SHORT_1_5_5_5_REV     0x8366
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_8_8_8_8_REV</NAME>
#define GL_UNSIGNED_INT_8_8_8_8_REV       0x8367
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_2_10_10_10_REV</NAME>
#define GL_UNSIGNED_INT_2_10_10_10_REV    0x8368
</MACRO>
<MACRO>
<NAME>GL_BGR</NAME>
#define GL_BGR                            0x80E0
</MACRO>
<MACRO>
<NAME>GL_BGRA</NAME>
#define GL_BGRA                           0x80E1
</MACRO>
<MACRO>
<NAME>GL_MAX_ELEMENTS_VERTICES</NAME>
#define GL_MAX_ELEMENTS_VERTICES          0x80E8
</MACRO>
<MACRO>
<NAME>GL_MAX_ELEMENTS_INDICES</NAME>
#define GL_MAX_ELEMENTS_INDICES           0x80E9
</MACRO>
<MACRO>
<NAME>GL_CLAMP_TO_EDGE</NAME>
#define GL_CLAMP_TO_EDGE                  0x812F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MIN_LOD</NAME>
#define GL_TEXTURE_MIN_LOD                0x813A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_LOD</NAME>
#define GL_TEXTURE_MAX_LOD                0x813B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BASE_LEVEL</NAME>
#define GL_TEXTURE_BASE_LEVEL             0x813C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_LEVEL</NAME>
#define GL_TEXTURE_MAX_LEVEL              0x813D
</MACRO>
<MACRO>
<NAME>GL_LIGHT_MODEL_COLOR_CONTROL</NAME>
#define GL_LIGHT_MODEL_COLOR_CONTROL      0x81F8
</MACRO>
<MACRO>
<NAME>GL_SINGLE_COLOR</NAME>
#define GL_SINGLE_COLOR                   0x81F9
</MACRO>
<MACRO>
<NAME>GL_SEPARATE_SPECULAR_COLOR</NAME>
#define GL_SEPARATE_SPECULAR_COLOR        0x81FA
</MACRO>
<MACRO>
<NAME>GL_SMOOTH_POINT_SIZE_RANGE</NAME>
#define GL_SMOOTH_POINT_SIZE_RANGE        0x0B12
</MACRO>
<MACRO>
<NAME>GL_SMOOTH_POINT_SIZE_GRANULARITY</NAME>
#define GL_SMOOTH_POINT_SIZE_GRANULARITY  0x0B13
</MACRO>
<MACRO>
<NAME>GL_SMOOTH_LINE_WIDTH_RANGE</NAME>
#define GL_SMOOTH_LINE_WIDTH_RANGE        0x0B22
</MACRO>
<MACRO>
<NAME>GL_SMOOTH_LINE_WIDTH_GRANULARITY</NAME>
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY  0x0B23
</MACRO>
<MACRO>
<NAME>GL_ALIASED_POINT_SIZE_RANGE</NAME>
#define GL_ALIASED_POINT_SIZE_RANGE       0x846D
</MACRO>
<MACRO>
<NAME>GL_ALIASED_LINE_WIDTH_RANGE</NAME>
#define GL_ALIASED_LINE_WIDTH_RANGE       0x846E
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_COLOR</NAME>
#define GL_CONSTANT_COLOR                 0x8001
</MACRO>
<MACRO>
<NAME>GL_ONE_MINUS_CONSTANT_COLOR</NAME>
#define GL_ONE_MINUS_CONSTANT_COLOR       0x8002
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_ALPHA</NAME>
#define GL_CONSTANT_ALPHA                 0x8003
</MACRO>
<MACRO>
<NAME>GL_ONE_MINUS_CONSTANT_ALPHA</NAME>
#define GL_ONE_MINUS_CONSTANT_ALPHA       0x8004
</MACRO>
<MACRO>
<NAME>GL_BLEND_COLOR</NAME>
#define GL_BLEND_COLOR                    0x8005
</MACRO>
<MACRO>
<NAME>GL_FUNC_ADD</NAME>
#define GL_FUNC_ADD                       0x8006
</MACRO>
<MACRO>
<NAME>GL_MIN</NAME>
#define GL_MIN                            0x8007
</MACRO>
<MACRO>
<NAME>GL_MAX</NAME>
#define GL_MAX                            0x8008
</MACRO>
<MACRO>
<NAME>GL_BLEND_EQUATION</NAME>
#define GL_BLEND_EQUATION                 0x8009
</MACRO>
<MACRO>
<NAME>GL_FUNC_SUBTRACT</NAME>
#define GL_FUNC_SUBTRACT                  0x800A
</MACRO>
<MACRO>
<NAME>GL_FUNC_REVERSE_SUBTRACT</NAME>
#define GL_FUNC_REVERSE_SUBTRACT          0x800B
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_1D</NAME>
#define GL_CONVOLUTION_1D                 0x8010
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_2D</NAME>
#define GL_CONVOLUTION_2D                 0x8011
</MACRO>
<MACRO>
<NAME>GL_SEPARABLE_2D</NAME>
#define GL_SEPARABLE_2D                   0x8012
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_BORDER_MODE</NAME>
#define GL_CONVOLUTION_BORDER_MODE        0x8013
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FILTER_SCALE</NAME>
#define GL_CONVOLUTION_FILTER_SCALE       0x8014
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FILTER_BIAS</NAME>
#define GL_CONVOLUTION_FILTER_BIAS        0x8015
</MACRO>
<MACRO>
<NAME>GL_REDUCE</NAME>
#define GL_REDUCE                         0x8016
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FORMAT</NAME>
#define GL_CONVOLUTION_FORMAT             0x8017
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_WIDTH</NAME>
#define GL_CONVOLUTION_WIDTH              0x8018
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_HEIGHT</NAME>
#define GL_CONVOLUTION_HEIGHT             0x8019
</MACRO>
<MACRO>
<NAME>GL_MAX_CONVOLUTION_WIDTH</NAME>
#define GL_MAX_CONVOLUTION_WIDTH          0x801A
</MACRO>
<MACRO>
<NAME>GL_MAX_CONVOLUTION_HEIGHT</NAME>
#define GL_MAX_CONVOLUTION_HEIGHT         0x801B
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_RED_SCALE</NAME>
#define GL_POST_CONVOLUTION_RED_SCALE     0x801C
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_GREEN_SCALE</NAME>
#define GL_POST_CONVOLUTION_GREEN_SCALE   0x801D
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_BLUE_SCALE</NAME>
#define GL_POST_CONVOLUTION_BLUE_SCALE    0x801E
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_ALPHA_SCALE</NAME>
#define GL_POST_CONVOLUTION_ALPHA_SCALE   0x801F
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_RED_BIAS</NAME>
#define GL_POST_CONVOLUTION_RED_BIAS      0x8020
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_GREEN_BIAS</NAME>
#define GL_POST_CONVOLUTION_GREEN_BIAS    0x8021
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_BLUE_BIAS</NAME>
#define GL_POST_CONVOLUTION_BLUE_BIAS     0x8022
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_ALPHA_BIAS</NAME>
#define GL_POST_CONVOLUTION_ALPHA_BIAS    0x8023
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM</NAME>
#define GL_HISTOGRAM                      0x8024
</MACRO>
<MACRO>
<NAME>GL_PROXY_HISTOGRAM</NAME>
#define GL_PROXY_HISTOGRAM                0x8025
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_WIDTH</NAME>
#define GL_HISTOGRAM_WIDTH                0x8026
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_FORMAT</NAME>
#define GL_HISTOGRAM_FORMAT               0x8027
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_RED_SIZE</NAME>
#define GL_HISTOGRAM_RED_SIZE             0x8028
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_GREEN_SIZE</NAME>
#define GL_HISTOGRAM_GREEN_SIZE           0x8029
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_BLUE_SIZE</NAME>
#define GL_HISTOGRAM_BLUE_SIZE            0x802A
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_ALPHA_SIZE</NAME>
#define GL_HISTOGRAM_ALPHA_SIZE           0x802B
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_LUMINANCE_SIZE</NAME>
#define GL_HISTOGRAM_LUMINANCE_SIZE       0x802C
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_SINK</NAME>
#define GL_HISTOGRAM_SINK                 0x802D
</MACRO>
<MACRO>
<NAME>GL_MINMAX</NAME>
#define GL_MINMAX                         0x802E
</MACRO>
<MACRO>
<NAME>GL_MINMAX_FORMAT</NAME>
#define GL_MINMAX_FORMAT                  0x802F
</MACRO>
<MACRO>
<NAME>GL_MINMAX_SINK</NAME>
#define GL_MINMAX_SINK                    0x8030
</MACRO>
<MACRO>
<NAME>GL_TABLE_TOO_LARGE</NAME>
#define GL_TABLE_TOO_LARGE                0x8031
</MACRO>
<MACRO>
<NAME>GL_COLOR_MATRIX</NAME>
#define GL_COLOR_MATRIX                   0x80B1
</MACRO>
<MACRO>
<NAME>GL_COLOR_MATRIX_STACK_DEPTH</NAME>
#define GL_COLOR_MATRIX_STACK_DEPTH       0x80B2
</MACRO>
<MACRO>
<NAME>GL_MAX_COLOR_MATRIX_STACK_DEPTH</NAME>
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH   0x80B3
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_RED_SCALE</NAME>
#define GL_POST_COLOR_MATRIX_RED_SCALE    0x80B4
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_GREEN_SCALE</NAME>
#define GL_POST_COLOR_MATRIX_GREEN_SCALE  0x80B5
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_BLUE_SCALE</NAME>
#define GL_POST_COLOR_MATRIX_BLUE_SCALE   0x80B6
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_ALPHA_SCALE</NAME>
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE  0x80B7
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_RED_BIAS</NAME>
#define GL_POST_COLOR_MATRIX_RED_BIAS     0x80B8
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_GREEN_BIAS</NAME>
#define GL_POST_COLOR_MATRIX_GREEN_BIAS   0x80B9
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_BLUE_BIAS</NAME>
#define GL_POST_COLOR_MATRIX_BLUE_BIAS    0x80BA
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_ALPHA_BIAS</NAME>
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS   0x80BB
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE</NAME>
#define GL_COLOR_TABLE                    0x80D0
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_COLOR_TABLE</NAME>
#define GL_POST_CONVOLUTION_COLOR_TABLE   0x80D1
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_COLOR_TABLE</NAME>
#define GL_POST_COLOR_MATRIX_COLOR_TABLE  0x80D2
</MACRO>
<MACRO>
<NAME>GL_PROXY_COLOR_TABLE</NAME>
#define GL_PROXY_COLOR_TABLE              0x80D3
</MACRO>
<MACRO>
<NAME>GL_PROXY_POST_CONVOLUTION_COLOR_TABLE</NAME>
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
</MACRO>
<MACRO>
<NAME>GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE</NAME>
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_SCALE</NAME>
#define GL_COLOR_TABLE_SCALE              0x80D6
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_BIAS</NAME>
#define GL_COLOR_TABLE_BIAS               0x80D7
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_FORMAT</NAME>
#define GL_COLOR_TABLE_FORMAT             0x80D8
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_WIDTH</NAME>
#define GL_COLOR_TABLE_WIDTH              0x80D9
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_RED_SIZE</NAME>
#define GL_COLOR_TABLE_RED_SIZE           0x80DA
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_GREEN_SIZE</NAME>
#define GL_COLOR_TABLE_GREEN_SIZE         0x80DB
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_BLUE_SIZE</NAME>
#define GL_COLOR_TABLE_BLUE_SIZE          0x80DC
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_ALPHA_SIZE</NAME>
#define GL_COLOR_TABLE_ALPHA_SIZE         0x80DD
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_LUMINANCE_SIZE</NAME>
#define GL_COLOR_TABLE_LUMINANCE_SIZE     0x80DE
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_INTENSITY_SIZE</NAME>
#define GL_COLOR_TABLE_INTENSITY_SIZE     0x80DF
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_BORDER</NAME>
#define GL_CONSTANT_BORDER                0x8151
</MACRO>
<MACRO>
<NAME>GL_REPLICATE_BORDER</NAME>
#define GL_REPLICATE_BORDER               0x8153
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_BORDER_COLOR</NAME>
#define GL_CONVOLUTION_BORDER_COLOR       0x8154
</MACRO>
<MACRO>
<NAME>GL_TEXTURE0</NAME>
#define GL_TEXTURE0                       0x84C0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE1</NAME>
#define GL_TEXTURE1                       0x84C1
</MACRO>
<MACRO>
<NAME>GL_TEXTURE2</NAME>
#define GL_TEXTURE2                       0x84C2
</MACRO>
<MACRO>
<NAME>GL_TEXTURE3</NAME>
#define GL_TEXTURE3                       0x84C3
</MACRO>
<MACRO>
<NAME>GL_TEXTURE4</NAME>
#define GL_TEXTURE4                       0x84C4
</MACRO>
<MACRO>
<NAME>GL_TEXTURE5</NAME>
#define GL_TEXTURE5                       0x84C5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE6</NAME>
#define GL_TEXTURE6                       0x84C6
</MACRO>
<MACRO>
<NAME>GL_TEXTURE7</NAME>
#define GL_TEXTURE7                       0x84C7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE8</NAME>
#define GL_TEXTURE8                       0x84C8
</MACRO>
<MACRO>
<NAME>GL_TEXTURE9</NAME>
#define GL_TEXTURE9                       0x84C9
</MACRO>
<MACRO>
<NAME>GL_TEXTURE10</NAME>
#define GL_TEXTURE10                      0x84CA
</MACRO>
<MACRO>
<NAME>GL_TEXTURE11</NAME>
#define GL_TEXTURE11                      0x84CB
</MACRO>
<MACRO>
<NAME>GL_TEXTURE12</NAME>
#define GL_TEXTURE12                      0x84CC
</MACRO>
<MACRO>
<NAME>GL_TEXTURE13</NAME>
#define GL_TEXTURE13                      0x84CD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE14</NAME>
#define GL_TEXTURE14                      0x84CE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE15</NAME>
#define GL_TEXTURE15                      0x84CF
</MACRO>
<MACRO>
<NAME>GL_TEXTURE16</NAME>
#define GL_TEXTURE16                      0x84D0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE17</NAME>
#define GL_TEXTURE17                      0x84D1
</MACRO>
<MACRO>
<NAME>GL_TEXTURE18</NAME>
#define GL_TEXTURE18                      0x84D2
</MACRO>
<MACRO>
<NAME>GL_TEXTURE19</NAME>
#define GL_TEXTURE19                      0x84D3
</MACRO>
<MACRO>
<NAME>GL_TEXTURE20</NAME>
#define GL_TEXTURE20                      0x84D4
</MACRO>
<MACRO>
<NAME>GL_TEXTURE21</NAME>
#define GL_TEXTURE21                      0x84D5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE22</NAME>
#define GL_TEXTURE22                      0x84D6
</MACRO>
<MACRO>
<NAME>GL_TEXTURE23</NAME>
#define GL_TEXTURE23                      0x84D7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE24</NAME>
#define GL_TEXTURE24                      0x84D8
</MACRO>
<MACRO>
<NAME>GL_TEXTURE25</NAME>
#define GL_TEXTURE25                      0x84D9
</MACRO>
<MACRO>
<NAME>GL_TEXTURE26</NAME>
#define GL_TEXTURE26                      0x84DA
</MACRO>
<MACRO>
<NAME>GL_TEXTURE27</NAME>
#define GL_TEXTURE27                      0x84DB
</MACRO>
<MACRO>
<NAME>GL_TEXTURE28</NAME>
#define GL_TEXTURE28                      0x84DC
</MACRO>
<MACRO>
<NAME>GL_TEXTURE29</NAME>
#define GL_TEXTURE29                      0x84DD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE30</NAME>
#define GL_TEXTURE30                      0x84DE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE31</NAME>
#define GL_TEXTURE31                      0x84DF
</MACRO>
<MACRO>
<NAME>GL_ACTIVE_TEXTURE</NAME>
#define GL_ACTIVE_TEXTURE                 0x84E0
</MACRO>
<MACRO>
<NAME>GL_CLIENT_ACTIVE_TEXTURE</NAME>
#define GL_CLIENT_ACTIVE_TEXTURE          0x84E1
</MACRO>
<MACRO>
<NAME>GL_MAX_TEXTURE_UNITS</NAME>
#define GL_MAX_TEXTURE_UNITS              0x84E2
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_MODELVIEW_MATRIX</NAME>
#define GL_TRANSPOSE_MODELVIEW_MATRIX     0x84E3
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_PROJECTION_MATRIX</NAME>
#define GL_TRANSPOSE_PROJECTION_MATRIX    0x84E4
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_TEXTURE_MATRIX</NAME>
#define GL_TRANSPOSE_TEXTURE_MATRIX       0x84E5
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_COLOR_MATRIX</NAME>
#define GL_TRANSPOSE_COLOR_MATRIX         0x84E6
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE</NAME>
#define GL_MULTISAMPLE                    0x809D
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_COVERAGE</NAME>
#define GL_SAMPLE_ALPHA_TO_COVERAGE       0x809E
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_ONE</NAME>
#define GL_SAMPLE_ALPHA_TO_ONE            0x809F
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE</NAME>
#define GL_SAMPLE_COVERAGE                0x80A0
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_BUFFERS</NAME>
#define GL_SAMPLE_BUFFERS                 0x80A8
</MACRO>
<MACRO>
<NAME>GL_SAMPLES</NAME>
#define GL_SAMPLES                        0x80A9
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE_VALUE</NAME>
#define GL_SAMPLE_COVERAGE_VALUE          0x80AA
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE_INVERT</NAME>
#define GL_SAMPLE_COVERAGE_INVERT         0x80AB
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_BIT</NAME>
#define GL_MULTISAMPLE_BIT                0x20000000
</MACRO>
<MACRO>
<NAME>GL_NORMAL_MAP</NAME>
#define GL_NORMAL_MAP                     0x8511
</MACRO>
<MACRO>
<NAME>GL_REFLECTION_MAP</NAME>
#define GL_REFLECTION_MAP                 0x8512
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP</NAME>
#define GL_TEXTURE_CUBE_MAP               0x8513
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BINDING_CUBE_MAP</NAME>
#define GL_TEXTURE_BINDING_CUBE_MAP       0x8514
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_X</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X    0x8515
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_X</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X    0x8516
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Y</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y    0x8517
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    0x8518
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Z</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z    0x8519
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    0x851A
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_CUBE_MAP</NAME>
#define GL_PROXY_TEXTURE_CUBE_MAP         0x851B
</MACRO>
<MACRO>
<NAME>GL_MAX_CUBE_MAP_TEXTURE_SIZE</NAME>
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE      0x851C
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_ALPHA</NAME>
#define GL_COMPRESSED_ALPHA               0x84E9
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_LUMINANCE</NAME>
#define GL_COMPRESSED_LUMINANCE           0x84EA
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_LUMINANCE_ALPHA</NAME>
#define GL_COMPRESSED_LUMINANCE_ALPHA     0x84EB
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_INTENSITY</NAME>
#define GL_COMPRESSED_INTENSITY           0x84EC
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGB</NAME>
#define GL_COMPRESSED_RGB                 0x84ED
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA</NAME>
#define GL_COMPRESSED_RGBA                0x84EE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSION_HINT</NAME>
#define GL_TEXTURE_COMPRESSION_HINT       0x84EF
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSED_IMAGE_SIZE</NAME>
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE  0x86A0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSED</NAME>
#define GL_TEXTURE_COMPRESSED             0x86A1
</MACRO>
<MACRO>
<NAME>GL_NUM_COMPRESSED_TEXTURE_FORMATS</NAME>
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_TEXTURE_FORMATS</NAME>
#define GL_COMPRESSED_TEXTURE_FORMATS     0x86A3
</MACRO>
<MACRO>
<NAME>GL_CLAMP_TO_BORDER</NAME>
#define GL_CLAMP_TO_BORDER                0x812D
</MACRO>
<MACRO>
<NAME>GL_CLAMP_TO_BORDER_SGIS</NAME>
#define GL_CLAMP_TO_BORDER_SGIS           0x812D
</MACRO>
<MACRO>
<NAME>GL_COMBINE</NAME>
#define GL_COMBINE                        0x8570
</MACRO>
<MACRO>
<NAME>GL_COMBINE_RGB</NAME>
#define GL_COMBINE_RGB                    0x8571
</MACRO>
<MACRO>
<NAME>GL_COMBINE_ALPHA</NAME>
#define GL_COMBINE_ALPHA                  0x8572
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_RGB</NAME>
#define GL_SOURCE0_RGB                    0x8580
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_RGB</NAME>
#define GL_SOURCE1_RGB                    0x8581
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_RGB</NAME>
#define GL_SOURCE2_RGB                    0x8582
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_ALPHA</NAME>
#define GL_SOURCE0_ALPHA                  0x8588
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_ALPHA</NAME>
#define GL_SOURCE1_ALPHA                  0x8589
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_ALPHA</NAME>
#define GL_SOURCE2_ALPHA                  0x858A
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_RGB</NAME>
#define GL_OPERAND0_RGB                   0x8590
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_RGB</NAME>
#define GL_OPERAND1_RGB                   0x8591
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_RGB</NAME>
#define GL_OPERAND2_RGB                   0x8592
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_ALPHA</NAME>
#define GL_OPERAND0_ALPHA                 0x8598
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_ALPHA</NAME>
#define GL_OPERAND1_ALPHA                 0x8599
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_ALPHA</NAME>
#define GL_OPERAND2_ALPHA                 0x859A
</MACRO>
<MACRO>
<NAME>GL_RGB_SCALE</NAME>
#define GL_RGB_SCALE                      0x8573
</MACRO>
<MACRO>
<NAME>GL_ADD_SIGNED</NAME>
#define GL_ADD_SIGNED                     0x8574
</MACRO>
<MACRO>
<NAME>GL_INTERPOLATE</NAME>
#define GL_INTERPOLATE                    0x8575
</MACRO>
<MACRO>
<NAME>GL_SUBTRACT</NAME>
#define GL_SUBTRACT                       0x84E7
</MACRO>
<MACRO>
<NAME>GL_CONSTANT</NAME>
#define GL_CONSTANT                       0x8576
</MACRO>
<MACRO>
<NAME>GL_PRIMARY_COLOR</NAME>
#define GL_PRIMARY_COLOR                  0x8577
</MACRO>
<MACRO>
<NAME>GL_PREVIOUS</NAME>
#define GL_PREVIOUS                       0x8578
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGB</NAME>
#define GL_DOT3_RGB                       0x86AE
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGBA</NAME>
#define GL_DOT3_RGBA                      0x86AF
</MACRO>
<MACRO>
<NAME>GL_BLEND_DST_RGB</NAME>
#define GL_BLEND_DST_RGB                  0x80C8
</MACRO>
<MACRO>
<NAME>GL_BLEND_SRC_RGB</NAME>
#define GL_BLEND_SRC_RGB                  0x80C9
</MACRO>
<MACRO>
<NAME>GL_BLEND_DST_ALPHA</NAME>
#define GL_BLEND_DST_ALPHA                0x80CA
</MACRO>
<MACRO>
<NAME>GL_BLEND_SRC_ALPHA</NAME>
#define GL_BLEND_SRC_ALPHA                0x80CB
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MIN</NAME>
#define GL_POINT_SIZE_MIN                 0x8126
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MAX</NAME>
#define GL_POINT_SIZE_MAX                 0x8127
</MACRO>
<MACRO>
<NAME>GL_POINT_FADE_THRESHOLD_SIZE</NAME>
#define GL_POINT_FADE_THRESHOLD_SIZE      0x8128
</MACRO>
<MACRO>
<NAME>GL_POINT_DISTANCE_ATTENUATION</NAME>
#define GL_POINT_DISTANCE_ATTENUATION     0x8129
</MACRO>
<MACRO>
<NAME>GL_GENERATE_MIPMAP</NAME>
#define GL_GENERATE_MIPMAP                0x8191
</MACRO>
<MACRO>
<NAME>GL_GENERATE_MIPMAP_HINT</NAME>
#define GL_GENERATE_MIPMAP_HINT           0x8192
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT16</NAME>
#define GL_DEPTH_COMPONENT16              0x81A5
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT24</NAME>
#define GL_DEPTH_COMPONENT24              0x81A6
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT32</NAME>
#define GL_DEPTH_COMPONENT32              0x81A7
</MACRO>
<MACRO>
<NAME>GL_MIRRORED_REPEAT</NAME>
#define GL_MIRRORED_REPEAT                0x8370
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_SOURCE</NAME>
#define GL_FOG_COORDINATE_SOURCE          0x8450
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE</NAME>
#define GL_FOG_COORDINATE                 0x8451
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_DEPTH</NAME>
#define GL_FRAGMENT_DEPTH                 0x8452
</MACRO>
<MACRO>
<NAME>GL_CURRENT_FOG_COORDINATE</NAME>
#define GL_CURRENT_FOG_COORDINATE         0x8453
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_TYPE</NAME>
#define GL_FOG_COORDINATE_ARRAY_TYPE      0x8454
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_STRIDE</NAME>
#define GL_FOG_COORDINATE_ARRAY_STRIDE    0x8455
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_POINTER</NAME>
#define GL_FOG_COORDINATE_ARRAY_POINTER   0x8456
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY</NAME>
#define GL_FOG_COORDINATE_ARRAY           0x8457
</MACRO>
<MACRO>
<NAME>GL_COLOR_SUM</NAME>
#define GL_COLOR_SUM                      0x8458
</MACRO>
<MACRO>
<NAME>GL_CURRENT_SECONDARY_COLOR</NAME>
#define GL_CURRENT_SECONDARY_COLOR        0x8459
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_SIZE</NAME>
#define GL_SECONDARY_COLOR_ARRAY_SIZE     0x845A
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_TYPE</NAME>
#define GL_SECONDARY_COLOR_ARRAY_TYPE     0x845B
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_STRIDE</NAME>
#define GL_SECONDARY_COLOR_ARRAY_STRIDE   0x845C
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_POINTER</NAME>
#define GL_SECONDARY_COLOR_ARRAY_POINTER  0x845D
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY</NAME>
#define GL_SECONDARY_COLOR_ARRAY          0x845E
</MACRO>
<MACRO>
<NAME>GL_MAX_TEXTURE_LOD_BIAS</NAME>
#define GL_MAX_TEXTURE_LOD_BIAS           0x84FD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_FILTER_CONTROL</NAME>
#define GL_TEXTURE_FILTER_CONTROL         0x8500
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LOD_BIAS</NAME>
#define GL_TEXTURE_LOD_BIAS               0x8501
</MACRO>
<MACRO>
<NAME>GL_INCR_WRAP</NAME>
#define GL_INCR_WRAP                      0x8507
</MACRO>
<MACRO>
<NAME>GL_DECR_WRAP</NAME>
#define GL_DECR_WRAP                      0x8508
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEPTH_SIZE</NAME>
#define GL_TEXTURE_DEPTH_SIZE             0x884A
</MACRO>
<MACRO>
<NAME>GL_DEPTH_TEXTURE_MODE</NAME>
#define GL_DEPTH_TEXTURE_MODE             0x884B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_MODE</NAME>
#define GL_TEXTURE_COMPARE_MODE           0x884C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_FUNC</NAME>
#define GL_TEXTURE_COMPARE_FUNC           0x884D
</MACRO>
<MACRO>
<NAME>GL_COMPARE_R_TO_TEXTURE</NAME>
#define GL_COMPARE_R_TO_TEXTURE           0x884E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE0_ARB</NAME>
#define GL_TEXTURE0_ARB                   0x84C0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE1_ARB</NAME>
#define GL_TEXTURE1_ARB                   0x84C1
</MACRO>
<MACRO>
<NAME>GL_TEXTURE2_ARB</NAME>
#define GL_TEXTURE2_ARB                   0x84C2
</MACRO>
<MACRO>
<NAME>GL_TEXTURE3_ARB</NAME>
#define GL_TEXTURE3_ARB                   0x84C3
</MACRO>
<MACRO>
<NAME>GL_TEXTURE4_ARB</NAME>
#define GL_TEXTURE4_ARB                   0x84C4
</MACRO>
<MACRO>
<NAME>GL_TEXTURE5_ARB</NAME>
#define GL_TEXTURE5_ARB                   0x84C5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE6_ARB</NAME>
#define GL_TEXTURE6_ARB                   0x84C6
</MACRO>
<MACRO>
<NAME>GL_TEXTURE7_ARB</NAME>
#define GL_TEXTURE7_ARB                   0x84C7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE8_ARB</NAME>
#define GL_TEXTURE8_ARB                   0x84C8
</MACRO>
<MACRO>
<NAME>GL_TEXTURE9_ARB</NAME>
#define GL_TEXTURE9_ARB                   0x84C9
</MACRO>
<MACRO>
<NAME>GL_TEXTURE10_ARB</NAME>
#define GL_TEXTURE10_ARB                  0x84CA
</MACRO>
<MACRO>
<NAME>GL_TEXTURE11_ARB</NAME>
#define GL_TEXTURE11_ARB                  0x84CB
</MACRO>
<MACRO>
<NAME>GL_TEXTURE12_ARB</NAME>
#define GL_TEXTURE12_ARB                  0x84CC
</MACRO>
<MACRO>
<NAME>GL_TEXTURE13_ARB</NAME>
#define GL_TEXTURE13_ARB                  0x84CD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE14_ARB</NAME>
#define GL_TEXTURE14_ARB                  0x84CE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE15_ARB</NAME>
#define GL_TEXTURE15_ARB                  0x84CF
</MACRO>
<MACRO>
<NAME>GL_TEXTURE16_ARB</NAME>
#define GL_TEXTURE16_ARB                  0x84D0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE17_ARB</NAME>
#define GL_TEXTURE17_ARB                  0x84D1
</MACRO>
<MACRO>
<NAME>GL_TEXTURE18_ARB</NAME>
#define GL_TEXTURE18_ARB                  0x84D2
</MACRO>
<MACRO>
<NAME>GL_TEXTURE19_ARB</NAME>
#define GL_TEXTURE19_ARB                  0x84D3
</MACRO>
<MACRO>
<NAME>GL_TEXTURE20_ARB</NAME>
#define GL_TEXTURE20_ARB                  0x84D4
</MACRO>
<MACRO>
<NAME>GL_TEXTURE21_ARB</NAME>
#define GL_TEXTURE21_ARB                  0x84D5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE22_ARB</NAME>
#define GL_TEXTURE22_ARB                  0x84D6
</MACRO>
<MACRO>
<NAME>GL_TEXTURE23_ARB</NAME>
#define GL_TEXTURE23_ARB                  0x84D7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE24_ARB</NAME>
#define GL_TEXTURE24_ARB                  0x84D8
</MACRO>
<MACRO>
<NAME>GL_TEXTURE25_ARB</NAME>
#define GL_TEXTURE25_ARB                  0x84D9
</MACRO>
<MACRO>
<NAME>GL_TEXTURE26_ARB</NAME>
#define GL_TEXTURE26_ARB                  0x84DA
</MACRO>
<MACRO>
<NAME>GL_TEXTURE27_ARB</NAME>
#define GL_TEXTURE27_ARB                  0x84DB
</MACRO>
<MACRO>
<NAME>GL_TEXTURE28_ARB</NAME>
#define GL_TEXTURE28_ARB                  0x84DC
</MACRO>
<MACRO>
<NAME>GL_TEXTURE29_ARB</NAME>
#define GL_TEXTURE29_ARB                  0x84DD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE30_ARB</NAME>
#define GL_TEXTURE30_ARB                  0x84DE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE31_ARB</NAME>
#define GL_TEXTURE31_ARB                  0x84DF
</MACRO>
<MACRO>
<NAME>GL_ACTIVE_TEXTURE_ARB</NAME>
#define GL_ACTIVE_TEXTURE_ARB             0x84E0
</MACRO>
<MACRO>
<NAME>GL_CLIENT_ACTIVE_TEXTURE_ARB</NAME>
#define GL_CLIENT_ACTIVE_TEXTURE_ARB      0x84E1
</MACRO>
<MACRO>
<NAME>GL_MAX_TEXTURE_UNITS_ARB</NAME>
#define GL_MAX_TEXTURE_UNITS_ARB          0x84E2
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_MODELVIEW_MATRIX_ARB</NAME>
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_PROJECTION_MATRIX_ARB</NAME>
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_TEXTURE_MATRIX_ARB</NAME>
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB   0x84E5
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_COLOR_MATRIX_ARB</NAME>
#define GL_TRANSPOSE_COLOR_MATRIX_ARB     0x84E6
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_ARB</NAME>
#define GL_MULTISAMPLE_ARB                0x809D
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_COVERAGE_ARB</NAME>
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB   0x809E
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_ONE_ARB</NAME>
#define GL_SAMPLE_ALPHA_TO_ONE_ARB        0x809F
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE_ARB</NAME>
#define GL_SAMPLE_COVERAGE_ARB            0x80A0
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_BUFFERS_ARB</NAME>
#define GL_SAMPLE_BUFFERS_ARB             0x80A8
</MACRO>
<MACRO>
<NAME>GL_SAMPLES_ARB</NAME>
#define GL_SAMPLES_ARB                    0x80A9
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE_VALUE_ARB</NAME>
#define GL_SAMPLE_COVERAGE_VALUE_ARB      0x80AA
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_COVERAGE_INVERT_ARB</NAME>
#define GL_SAMPLE_COVERAGE_INVERT_ARB     0x80AB
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_BIT_ARB</NAME>
#define GL_MULTISAMPLE_BIT_ARB            0x20000000
</MACRO>
<MACRO>
<NAME>GL_NORMAL_MAP_ARB</NAME>
#define GL_NORMAL_MAP_ARB                 0x8511
</MACRO>
<MACRO>
<NAME>GL_REFLECTION_MAP_ARB</NAME>
#define GL_REFLECTION_MAP_ARB             0x8512
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_ARB           0x8513
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BINDING_CUBE_MAP_ARB</NAME>
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB   0x8514
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_CUBE_MAP_ARB</NAME>
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB     0x851B
</MACRO>
<MACRO>
<NAME>GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB</NAME>
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB  0x851C
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_ALPHA_ARB</NAME>
#define GL_COMPRESSED_ALPHA_ARB           0x84E9
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_LUMINANCE_ARB</NAME>
#define GL_COMPRESSED_LUMINANCE_ARB       0x84EA
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_LUMINANCE_ALPHA_ARB</NAME>
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_INTENSITY_ARB</NAME>
#define GL_COMPRESSED_INTENSITY_ARB       0x84EC
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGB_ARB</NAME>
#define GL_COMPRESSED_RGB_ARB             0x84ED
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA_ARB</NAME>
#define GL_COMPRESSED_RGBA_ARB            0x84EE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSION_HINT_ARB</NAME>
#define GL_TEXTURE_COMPRESSION_HINT_ARB   0x84EF
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB</NAME>
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPRESSED_ARB</NAME>
#define GL_TEXTURE_COMPRESSED_ARB         0x86A1
</MACRO>
<MACRO>
<NAME>GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB</NAME>
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_TEXTURE_FORMATS_ARB</NAME>
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
</MACRO>
<MACRO>
<NAME>GL_CLAMP_TO_BORDER_ARB</NAME>
#define GL_CLAMP_TO_BORDER_ARB            0x812D
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MIN_ARB</NAME>
#define GL_POINT_SIZE_MIN_ARB             0x8126
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MAX_ARB</NAME>
#define GL_POINT_SIZE_MAX_ARB             0x8127
</MACRO>
<MACRO>
<NAME>GL_POINT_FADE_THRESHOLD_SIZE_ARB</NAME>
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB  0x8128
</MACRO>
<MACRO>
<NAME>GL_POINT_DISTANCE_ATTENUATION_ARB</NAME>
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_UNITS_ARB</NAME>
#define GL_MAX_VERTEX_UNITS_ARB           0x86A4
</MACRO>
<MACRO>
<NAME>GL_ACTIVE_VERTEX_UNITS_ARB</NAME>
#define GL_ACTIVE_VERTEX_UNITS_ARB        0x86A5
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_SUM_UNITY_ARB</NAME>
#define GL_WEIGHT_SUM_UNITY_ARB           0x86A6
</MACRO>
<MACRO>
<NAME>GL_VERTEX_BLEND_ARB</NAME>
#define GL_VERTEX_BLEND_ARB               0x86A7
</MACRO>
<MACRO>
<NAME>GL_CURRENT_WEIGHT_ARB</NAME>
#define GL_CURRENT_WEIGHT_ARB             0x86A8
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_ARRAY_TYPE_ARB</NAME>
#define GL_WEIGHT_ARRAY_TYPE_ARB          0x86A9
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_ARRAY_STRIDE_ARB</NAME>
#define GL_WEIGHT_ARRAY_STRIDE_ARB        0x86AA
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_ARRAY_SIZE_ARB</NAME>
#define GL_WEIGHT_ARRAY_SIZE_ARB          0x86AB
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_ARRAY_POINTER_ARB</NAME>
#define GL_WEIGHT_ARRAY_POINTER_ARB       0x86AC
</MACRO>
<MACRO>
<NAME>GL_WEIGHT_ARRAY_ARB</NAME>
#define GL_WEIGHT_ARRAY_ARB               0x86AD
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW0_ARB</NAME>
#define GL_MODELVIEW0_ARB                 0x1700
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW1_ARB</NAME>
#define GL_MODELVIEW1_ARB                 0x850A
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW2_ARB</NAME>
#define GL_MODELVIEW2_ARB                 0x8722
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW3_ARB</NAME>
#define GL_MODELVIEW3_ARB                 0x8723
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW4_ARB</NAME>
#define GL_MODELVIEW4_ARB                 0x8724
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW5_ARB</NAME>
#define GL_MODELVIEW5_ARB                 0x8725
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW6_ARB</NAME>
#define GL_MODELVIEW6_ARB                 0x8726
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW7_ARB</NAME>
#define GL_MODELVIEW7_ARB                 0x8727
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW8_ARB</NAME>
#define GL_MODELVIEW8_ARB                 0x8728
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW9_ARB</NAME>
#define GL_MODELVIEW9_ARB                 0x8729
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW10_ARB</NAME>
#define GL_MODELVIEW10_ARB                0x872A
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW11_ARB</NAME>
#define GL_MODELVIEW11_ARB                0x872B
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW12_ARB</NAME>
#define GL_MODELVIEW12_ARB                0x872C
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW13_ARB</NAME>
#define GL_MODELVIEW13_ARB                0x872D
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW14_ARB</NAME>
#define GL_MODELVIEW14_ARB                0x872E
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW15_ARB</NAME>
#define GL_MODELVIEW15_ARB                0x872F
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW16_ARB</NAME>
#define GL_MODELVIEW16_ARB                0x8730
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW17_ARB</NAME>
#define GL_MODELVIEW17_ARB                0x8731
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW18_ARB</NAME>
#define GL_MODELVIEW18_ARB                0x8732
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW19_ARB</NAME>
#define GL_MODELVIEW19_ARB                0x8733
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW20_ARB</NAME>
#define GL_MODELVIEW20_ARB                0x8734
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW21_ARB</NAME>
#define GL_MODELVIEW21_ARB                0x8735
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW22_ARB</NAME>
#define GL_MODELVIEW22_ARB                0x8736
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW23_ARB</NAME>
#define GL_MODELVIEW23_ARB                0x8737
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW24_ARB</NAME>
#define GL_MODELVIEW24_ARB                0x8738
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW25_ARB</NAME>
#define GL_MODELVIEW25_ARB                0x8739
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW26_ARB</NAME>
#define GL_MODELVIEW26_ARB                0x873A
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW27_ARB</NAME>
#define GL_MODELVIEW27_ARB                0x873B
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW28_ARB</NAME>
#define GL_MODELVIEW28_ARB                0x873C
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW29_ARB</NAME>
#define GL_MODELVIEW29_ARB                0x873D
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW30_ARB</NAME>
#define GL_MODELVIEW30_ARB                0x873E
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW31_ARB</NAME>
#define GL_MODELVIEW31_ARB                0x873F
</MACRO>
<MACRO>
<NAME>GL_MATRIX_PALETTE_ARB</NAME>
#define GL_MATRIX_PALETTE_ARB             0x8840
</MACRO>
<MACRO>
<NAME>GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB</NAME>
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
</MACRO>
<MACRO>
<NAME>GL_MAX_PALETTE_MATRICES_ARB</NAME>
#define GL_MAX_PALETTE_MATRICES_ARB       0x8842
</MACRO>
<MACRO>
<NAME>GL_CURRENT_PALETTE_MATRIX_ARB</NAME>
#define GL_CURRENT_PALETTE_MATRIX_ARB     0x8843
</MACRO>
<MACRO>
<NAME>GL_MATRIX_INDEX_ARRAY_ARB</NAME>
#define GL_MATRIX_INDEX_ARRAY_ARB         0x8844
</MACRO>
<MACRO>
<NAME>GL_CURRENT_MATRIX_INDEX_ARB</NAME>
#define GL_CURRENT_MATRIX_INDEX_ARB       0x8845
</MACRO>
<MACRO>
<NAME>GL_MATRIX_INDEX_ARRAY_SIZE_ARB</NAME>
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB    0x8846
</MACRO>
<MACRO>
<NAME>GL_MATRIX_INDEX_ARRAY_TYPE_ARB</NAME>
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB    0x8847
</MACRO>
<MACRO>
<NAME>GL_MATRIX_INDEX_ARRAY_STRIDE_ARB</NAME>
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB  0x8848
</MACRO>
<MACRO>
<NAME>GL_MATRIX_INDEX_ARRAY_POINTER_ARB</NAME>
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
</MACRO>
<MACRO>
<NAME>GL_COMBINE_ARB</NAME>
#define GL_COMBINE_ARB                    0x8570
</MACRO>
<MACRO>
<NAME>GL_COMBINE_RGB_ARB</NAME>
#define GL_COMBINE_RGB_ARB                0x8571
</MACRO>
<MACRO>
<NAME>GL_COMBINE_ALPHA_ARB</NAME>
#define GL_COMBINE_ALPHA_ARB              0x8572
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_RGB_ARB</NAME>
#define GL_SOURCE0_RGB_ARB                0x8580
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_RGB_ARB</NAME>
#define GL_SOURCE1_RGB_ARB                0x8581
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_RGB_ARB</NAME>
#define GL_SOURCE2_RGB_ARB                0x8582
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_ALPHA_ARB</NAME>
#define GL_SOURCE0_ALPHA_ARB              0x8588
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_ALPHA_ARB</NAME>
#define GL_SOURCE1_ALPHA_ARB              0x8589
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_ALPHA_ARB</NAME>
#define GL_SOURCE2_ALPHA_ARB              0x858A
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_RGB_ARB</NAME>
#define GL_OPERAND0_RGB_ARB               0x8590
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_RGB_ARB</NAME>
#define GL_OPERAND1_RGB_ARB               0x8591
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_RGB_ARB</NAME>
#define GL_OPERAND2_RGB_ARB               0x8592
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_ALPHA_ARB</NAME>
#define GL_OPERAND0_ALPHA_ARB             0x8598
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_ALPHA_ARB</NAME>
#define GL_OPERAND1_ALPHA_ARB             0x8599
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_ALPHA_ARB</NAME>
#define GL_OPERAND2_ALPHA_ARB             0x859A
</MACRO>
<MACRO>
<NAME>GL_RGB_SCALE_ARB</NAME>
#define GL_RGB_SCALE_ARB                  0x8573
</MACRO>
<MACRO>
<NAME>GL_ADD_SIGNED_ARB</NAME>
#define GL_ADD_SIGNED_ARB                 0x8574
</MACRO>
<MACRO>
<NAME>GL_INTERPOLATE_ARB</NAME>
#define GL_INTERPOLATE_ARB                0x8575
</MACRO>
<MACRO>
<NAME>GL_SUBTRACT_ARB</NAME>
#define GL_SUBTRACT_ARB                   0x84E7
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_ARB</NAME>
#define GL_CONSTANT_ARB                   0x8576
</MACRO>
<MACRO>
<NAME>GL_PRIMARY_COLOR_ARB</NAME>
#define GL_PRIMARY_COLOR_ARB              0x8577
</MACRO>
<MACRO>
<NAME>GL_PREVIOUS_ARB</NAME>
#define GL_PREVIOUS_ARB                   0x8578
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGB_ARB</NAME>
#define GL_DOT3_RGB_ARB                   0x86AE
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGBA_ARB</NAME>
#define GL_DOT3_RGBA_ARB                  0x86AF
</MACRO>
<MACRO>
<NAME>GL_MIRRORED_REPEAT_ARB</NAME>
#define GL_MIRRORED_REPEAT_ARB            0x8370
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT16_ARB</NAME>
#define GL_DEPTH_COMPONENT16_ARB          0x81A5
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT24_ARB</NAME>
#define GL_DEPTH_COMPONENT24_ARB          0x81A6
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT32_ARB</NAME>
#define GL_DEPTH_COMPONENT32_ARB          0x81A7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEPTH_SIZE_ARB</NAME>
#define GL_TEXTURE_DEPTH_SIZE_ARB         0x884A
</MACRO>
<MACRO>
<NAME>GL_DEPTH_TEXTURE_MODE_ARB</NAME>
#define GL_DEPTH_TEXTURE_MODE_ARB         0x884B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_MODE_ARB</NAME>
#define GL_TEXTURE_COMPARE_MODE_ARB       0x884C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_FUNC_ARB</NAME>
#define GL_TEXTURE_COMPARE_FUNC_ARB       0x884D
</MACRO>
<MACRO>
<NAME>GL_COMPARE_R_TO_TEXTURE_ARB</NAME>
#define GL_COMPARE_R_TO_TEXTURE_ARB       0x884E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_FAIL_VALUE_ARB</NAME>
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_ARB</NAME>
#define GL_VERTEX_PROGRAM_ARB             0x8620
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_POINT_SIZE_ARB</NAME>
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB  0x8642
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_TWO_SIDE_ARB</NAME>
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB    0x8643
</MACRO>
<MACRO>
<NAME>GL_COLOR_SUM_ARB</NAME>
#define GL_COLOR_SUM_ARB                  0x8458
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_FORMAT_ASCII_ARB</NAME>
#define GL_PROGRAM_FORMAT_ASCII_ARB       0x8875
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB   0x8623
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB   0x8625
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
</MACRO>
<MACRO>
<NAME>GL_CURRENT_VERTEX_ATTRIB_ARB</NAME>
#define GL_CURRENT_VERTEX_ATTRIB_ARB      0x8626
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB</NAME>
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_LENGTH_ARB</NAME>
#define GL_PROGRAM_LENGTH_ARB             0x8627
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_FORMAT_ARB</NAME>
#define GL_PROGRAM_FORMAT_ARB             0x8876
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_BINDING_ARB</NAME>
#define GL_PROGRAM_BINDING_ARB            0x8677
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_INSTRUCTIONS_ARB</NAME>
#define GL_PROGRAM_INSTRUCTIONS_ARB       0x88A0
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_INSTRUCTIONS_ARB</NAME>
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB   0x88A1
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB</NAME>
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB</NAME>
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_TEMPORARIES_ARB</NAME>
#define GL_PROGRAM_TEMPORARIES_ARB        0x88A4
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_TEMPORARIES_ARB</NAME>
#define GL_MAX_PROGRAM_TEMPORARIES_ARB    0x88A5
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_NATIVE_TEMPORARIES_ARB</NAME>
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB</NAME>
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_PARAMETERS_ARB</NAME>
#define GL_PROGRAM_PARAMETERS_ARB         0x88A8
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_PARAMETERS_ARB</NAME>
#define GL_MAX_PROGRAM_PARAMETERS_ARB     0x88A9
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_NATIVE_PARAMETERS_ARB</NAME>
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB  0x88AA
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB</NAME>
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_ATTRIBS_ARB</NAME>
#define GL_PROGRAM_ATTRIBS_ARB            0x88AC
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_ATTRIBS_ARB</NAME>
#define GL_MAX_PROGRAM_ATTRIBS_ARB        0x88AD
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_NATIVE_ATTRIBS_ARB</NAME>
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB     0x88AE
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB</NAME>
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_ADDRESS_REGISTERS_ARB</NAME>
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB  0x88B0
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB</NAME>
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB</NAME>
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB</NAME>
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB</NAME>
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_ENV_PARAMETERS_ARB</NAME>
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB</NAME>
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_STRING_ARB</NAME>
#define GL_PROGRAM_STRING_ARB             0x8628
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_ERROR_POSITION_ARB</NAME>
#define GL_PROGRAM_ERROR_POSITION_ARB     0x864B
</MACRO>
<MACRO>
<NAME>GL_CURRENT_MATRIX_ARB</NAME>
#define GL_CURRENT_MATRIX_ARB             0x8641
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_CURRENT_MATRIX_ARB</NAME>
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB   0x88B7
</MACRO>
<MACRO>
<NAME>GL_CURRENT_MATRIX_STACK_DEPTH_ARB</NAME>
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_ATTRIBS_ARB</NAME>
#define GL_MAX_VERTEX_ATTRIBS_ARB         0x8869
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_MATRICES_ARB</NAME>
#define GL_MAX_PROGRAM_MATRICES_ARB       0x862F
</MACRO>
<MACRO>
<NAME>GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB</NAME>
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_ERROR_STRING_ARB</NAME>
#define GL_PROGRAM_ERROR_STRING_ARB       0x8874
</MACRO>
<MACRO>
<NAME>GL_MATRIX0_ARB</NAME>
#define GL_MATRIX0_ARB                    0x88C0
</MACRO>
<MACRO>
<NAME>GL_MATRIX1_ARB</NAME>
#define GL_MATRIX1_ARB                    0x88C1
</MACRO>
<MACRO>
<NAME>GL_MATRIX2_ARB</NAME>
#define GL_MATRIX2_ARB                    0x88C2
</MACRO>
<MACRO>
<NAME>GL_MATRIX3_ARB</NAME>
#define GL_MATRIX3_ARB                    0x88C3
</MACRO>
<MACRO>
<NAME>GL_MATRIX4_ARB</NAME>
#define GL_MATRIX4_ARB                    0x88C4
</MACRO>
<MACRO>
<NAME>GL_MATRIX5_ARB</NAME>
#define GL_MATRIX5_ARB                    0x88C5
</MACRO>
<MACRO>
<NAME>GL_MATRIX6_ARB</NAME>
#define GL_MATRIX6_ARB                    0x88C6
</MACRO>
<MACRO>
<NAME>GL_MATRIX7_ARB</NAME>
#define GL_MATRIX7_ARB                    0x88C7
</MACRO>
<MACRO>
<NAME>GL_MATRIX8_ARB</NAME>
#define GL_MATRIX8_ARB                    0x88C8
</MACRO>
<MACRO>
<NAME>GL_MATRIX9_ARB</NAME>
#define GL_MATRIX9_ARB                    0x88C9
</MACRO>
<MACRO>
<NAME>GL_MATRIX10_ARB</NAME>
#define GL_MATRIX10_ARB                   0x88CA
</MACRO>
<MACRO>
<NAME>GL_MATRIX11_ARB</NAME>
#define GL_MATRIX11_ARB                   0x88CB
</MACRO>
<MACRO>
<NAME>GL_MATRIX12_ARB</NAME>
#define GL_MATRIX12_ARB                   0x88CC
</MACRO>
<MACRO>
<NAME>GL_MATRIX13_ARB</NAME>
#define GL_MATRIX13_ARB                   0x88CD
</MACRO>
<MACRO>
<NAME>GL_MATRIX14_ARB</NAME>
#define GL_MATRIX14_ARB                   0x88CE
</MACRO>
<MACRO>
<NAME>GL_MATRIX15_ARB</NAME>
#define GL_MATRIX15_ARB                   0x88CF
</MACRO>
<MACRO>
<NAME>GL_MATRIX16_ARB</NAME>
#define GL_MATRIX16_ARB                   0x88D0
</MACRO>
<MACRO>
<NAME>GL_MATRIX17_ARB</NAME>
#define GL_MATRIX17_ARB                   0x88D1
</MACRO>
<MACRO>
<NAME>GL_MATRIX18_ARB</NAME>
#define GL_MATRIX18_ARB                   0x88D2
</MACRO>
<MACRO>
<NAME>GL_MATRIX19_ARB</NAME>
#define GL_MATRIX19_ARB                   0x88D3
</MACRO>
<MACRO>
<NAME>GL_MATRIX20_ARB</NAME>
#define GL_MATRIX20_ARB                   0x88D4
</MACRO>
<MACRO>
<NAME>GL_MATRIX21_ARB</NAME>
#define GL_MATRIX21_ARB                   0x88D5
</MACRO>
<MACRO>
<NAME>GL_MATRIX22_ARB</NAME>
#define GL_MATRIX22_ARB                   0x88D6
</MACRO>
<MACRO>
<NAME>GL_MATRIX23_ARB</NAME>
#define GL_MATRIX23_ARB                   0x88D7
</MACRO>
<MACRO>
<NAME>GL_MATRIX24_ARB</NAME>
#define GL_MATRIX24_ARB                   0x88D8
</MACRO>
<MACRO>
<NAME>GL_MATRIX25_ARB</NAME>
#define GL_MATRIX25_ARB                   0x88D9
</MACRO>
<MACRO>
<NAME>GL_MATRIX26_ARB</NAME>
#define GL_MATRIX26_ARB                   0x88DA
</MACRO>
<MACRO>
<NAME>GL_MATRIX27_ARB</NAME>
#define GL_MATRIX27_ARB                   0x88DB
</MACRO>
<MACRO>
<NAME>GL_MATRIX28_ARB</NAME>
#define GL_MATRIX28_ARB                   0x88DC
</MACRO>
<MACRO>
<NAME>GL_MATRIX29_ARB</NAME>
#define GL_MATRIX29_ARB                   0x88DD
</MACRO>
<MACRO>
<NAME>GL_MATRIX30_ARB</NAME>
#define GL_MATRIX30_ARB                   0x88DE
</MACRO>
<MACRO>
<NAME>GL_MATRIX31_ARB</NAME>
#define GL_MATRIX31_ARB                   0x88DF
</MACRO>
<MACRO>
<NAME>GL_ABGR_EXT</NAME>
#define GL_ABGR_EXT                       0x8000
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_COLOR_EXT</NAME>
#define GL_CONSTANT_COLOR_EXT             0x8001
</MACRO>
<MACRO>
<NAME>GL_ONE_MINUS_CONSTANT_COLOR_EXT</NAME>
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT   0x8002
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_ALPHA_EXT</NAME>
#define GL_CONSTANT_ALPHA_EXT             0x8003
</MACRO>
<MACRO>
<NAME>GL_ONE_MINUS_CONSTANT_ALPHA_EXT</NAME>
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT   0x8004
</MACRO>
<MACRO>
<NAME>GL_BLEND_COLOR_EXT</NAME>
#define GL_BLEND_COLOR_EXT                0x8005
</MACRO>
<MACRO>
<NAME>GL_POLYGON_OFFSET_EXT</NAME>
#define GL_POLYGON_OFFSET_EXT             0x8037
</MACRO>
<MACRO>
<NAME>GL_POLYGON_OFFSET_FACTOR_EXT</NAME>
#define GL_POLYGON_OFFSET_FACTOR_EXT      0x8038
</MACRO>
<MACRO>
<NAME>GL_POLYGON_OFFSET_BIAS_EXT</NAME>
#define GL_POLYGON_OFFSET_BIAS_EXT        0x8039
</MACRO>
<MACRO>
<NAME>GL_ALPHA4_EXT</NAME>
#define GL_ALPHA4_EXT                     0x803B
</MACRO>
<MACRO>
<NAME>GL_ALPHA8_EXT</NAME>
#define GL_ALPHA8_EXT                     0x803C
</MACRO>
<MACRO>
<NAME>GL_ALPHA12_EXT</NAME>
#define GL_ALPHA12_EXT                    0x803D
</MACRO>
<MACRO>
<NAME>GL_ALPHA16_EXT</NAME>
#define GL_ALPHA16_EXT                    0x803E
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE4_EXT</NAME>
#define GL_LUMINANCE4_EXT                 0x803F
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE8_EXT</NAME>
#define GL_LUMINANCE8_EXT                 0x8040
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE12_EXT</NAME>
#define GL_LUMINANCE12_EXT                0x8041
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE16_EXT</NAME>
#define GL_LUMINANCE16_EXT                0x8042
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE4_ALPHA4_EXT</NAME>
#define GL_LUMINANCE4_ALPHA4_EXT          0x8043
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE6_ALPHA2_EXT</NAME>
#define GL_LUMINANCE6_ALPHA2_EXT          0x8044
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE8_ALPHA8_EXT</NAME>
#define GL_LUMINANCE8_ALPHA8_EXT          0x8045
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE12_ALPHA4_EXT</NAME>
#define GL_LUMINANCE12_ALPHA4_EXT         0x8046
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE12_ALPHA12_EXT</NAME>
#define GL_LUMINANCE12_ALPHA12_EXT        0x8047
</MACRO>
<MACRO>
<NAME>GL_LUMINANCE16_ALPHA16_EXT</NAME>
#define GL_LUMINANCE16_ALPHA16_EXT        0x8048
</MACRO>
<MACRO>
<NAME>GL_INTENSITY_EXT</NAME>
#define GL_INTENSITY_EXT                  0x8049
</MACRO>
<MACRO>
<NAME>GL_INTENSITY4_EXT</NAME>
#define GL_INTENSITY4_EXT                 0x804A
</MACRO>
<MACRO>
<NAME>GL_INTENSITY8_EXT</NAME>
#define GL_INTENSITY8_EXT                 0x804B
</MACRO>
<MACRO>
<NAME>GL_INTENSITY12_EXT</NAME>
#define GL_INTENSITY12_EXT                0x804C
</MACRO>
<MACRO>
<NAME>GL_INTENSITY16_EXT</NAME>
#define GL_INTENSITY16_EXT                0x804D
</MACRO>
<MACRO>
<NAME>GL_RGB2_EXT</NAME>
#define GL_RGB2_EXT                       0x804E
</MACRO>
<MACRO>
<NAME>GL_RGB4_EXT</NAME>
#define GL_RGB4_EXT                       0x804F
</MACRO>
<MACRO>
<NAME>GL_RGB5_EXT</NAME>
#define GL_RGB5_EXT                       0x8050
</MACRO>
<MACRO>
<NAME>GL_RGB8_EXT</NAME>
#define GL_RGB8_EXT                       0x8051
</MACRO>
<MACRO>
<NAME>GL_RGB10_EXT</NAME>
#define GL_RGB10_EXT                      0x8052
</MACRO>
<MACRO>
<NAME>GL_RGB12_EXT</NAME>
#define GL_RGB12_EXT                      0x8053
</MACRO>
<MACRO>
<NAME>GL_RGB16_EXT</NAME>
#define GL_RGB16_EXT                      0x8054
</MACRO>
<MACRO>
<NAME>GL_RGBA2_EXT</NAME>
#define GL_RGBA2_EXT                      0x8055
</MACRO>
<MACRO>
<NAME>GL_RGBA4_EXT</NAME>
#define GL_RGBA4_EXT                      0x8056
</MACRO>
<MACRO>
<NAME>GL_RGB5_A1_EXT</NAME>
#define GL_RGB5_A1_EXT                    0x8057
</MACRO>
<MACRO>
<NAME>GL_RGBA8_EXT</NAME>
#define GL_RGBA8_EXT                      0x8058
</MACRO>
<MACRO>
<NAME>GL_RGB10_A2_EXT</NAME>
#define GL_RGB10_A2_EXT                   0x8059
</MACRO>
<MACRO>
<NAME>GL_RGBA12_EXT</NAME>
#define GL_RGBA12_EXT                     0x805A
</MACRO>
<MACRO>
<NAME>GL_RGBA16_EXT</NAME>
#define GL_RGBA16_EXT                     0x805B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_RED_SIZE_EXT</NAME>
#define GL_TEXTURE_RED_SIZE_EXT           0x805C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_GREEN_SIZE_EXT</NAME>
#define GL_TEXTURE_GREEN_SIZE_EXT         0x805D
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BLUE_SIZE_EXT</NAME>
#define GL_TEXTURE_BLUE_SIZE_EXT          0x805E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_ALPHA_SIZE_EXT</NAME>
#define GL_TEXTURE_ALPHA_SIZE_EXT         0x805F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LUMINANCE_SIZE_EXT</NAME>
#define GL_TEXTURE_LUMINANCE_SIZE_EXT     0x8060
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_INTENSITY_SIZE_EXT</NAME>
#define GL_TEXTURE_INTENSITY_SIZE_EXT     0x8061
</MACRO>
<MACRO>
<NAME>GL_REPLACE_EXT</NAME>
#define GL_REPLACE_EXT                    0x8062
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_1D_EXT</NAME>
#define GL_PROXY_TEXTURE_1D_EXT           0x8063
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_2D_EXT</NAME>
#define GL_PROXY_TEXTURE_2D_EXT           0x8064
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_TOO_LARGE_EXT</NAME>
#define GL_TEXTURE_TOO_LARGE_EXT          0x8065
</MACRO>
<MACRO>
<NAME>GL_PACK_SKIP_IMAGES_EXT</NAME>
#define GL_PACK_SKIP_IMAGES_EXT           0x806B
</MACRO>
<MACRO>
<NAME>GL_PACK_IMAGE_HEIGHT_EXT</NAME>
#define GL_PACK_IMAGE_HEIGHT_EXT          0x806C
</MACRO>
<MACRO>
<NAME>GL_UNPACK_SKIP_IMAGES_EXT</NAME>
#define GL_UNPACK_SKIP_IMAGES_EXT         0x806D
</MACRO>
<MACRO>
<NAME>GL_UNPACK_IMAGE_HEIGHT_EXT</NAME>
#define GL_UNPACK_IMAGE_HEIGHT_EXT        0x806E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_3D_EXT</NAME>
#define GL_TEXTURE_3D_EXT                 0x806F
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_3D_EXT</NAME>
#define GL_PROXY_TEXTURE_3D_EXT           0x8070
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEPTH_EXT</NAME>
#define GL_TEXTURE_DEPTH_EXT              0x8071
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_WRAP_R_EXT</NAME>
#define GL_TEXTURE_WRAP_R_EXT             0x8072
</MACRO>
<MACRO>
<NAME>GL_MAX_3D_TEXTURE_SIZE_EXT</NAME>
#define GL_MAX_3D_TEXTURE_SIZE_EXT        0x8073
</MACRO>
<MACRO>
<NAME>GL_FILTER4_SGIS</NAME>
#define GL_FILTER4_SGIS                   0x8146
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_FILTER4_SIZE_SGIS</NAME>
#define GL_TEXTURE_FILTER4_SIZE_SGIS      0x8147
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_EXT</NAME>
#define GL_HISTOGRAM_EXT                  0x8024
</MACRO>
<MACRO>
<NAME>GL_PROXY_HISTOGRAM_EXT</NAME>
#define GL_PROXY_HISTOGRAM_EXT            0x8025
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_WIDTH_EXT</NAME>
#define GL_HISTOGRAM_WIDTH_EXT            0x8026
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_FORMAT_EXT</NAME>
#define GL_HISTOGRAM_FORMAT_EXT           0x8027
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_RED_SIZE_EXT</NAME>
#define GL_HISTOGRAM_RED_SIZE_EXT         0x8028
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_GREEN_SIZE_EXT</NAME>
#define GL_HISTOGRAM_GREEN_SIZE_EXT       0x8029
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_BLUE_SIZE_EXT</NAME>
#define GL_HISTOGRAM_BLUE_SIZE_EXT        0x802A
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_ALPHA_SIZE_EXT</NAME>
#define GL_HISTOGRAM_ALPHA_SIZE_EXT       0x802B
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_LUMINANCE_SIZE_EXT</NAME>
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT   0x802C
</MACRO>
<MACRO>
<NAME>GL_HISTOGRAM_SINK_EXT</NAME>
#define GL_HISTOGRAM_SINK_EXT             0x802D
</MACRO>
<MACRO>
<NAME>GL_MINMAX_EXT</NAME>
#define GL_MINMAX_EXT                     0x802E
</MACRO>
<MACRO>
<NAME>GL_MINMAX_FORMAT_EXT</NAME>
#define GL_MINMAX_FORMAT_EXT              0x802F
</MACRO>
<MACRO>
<NAME>GL_MINMAX_SINK_EXT</NAME>
#define GL_MINMAX_SINK_EXT                0x8030
</MACRO>
<MACRO>
<NAME>GL_TABLE_TOO_LARGE_EXT</NAME>
#define GL_TABLE_TOO_LARGE_EXT            0x8031
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_1D_EXT</NAME>
#define GL_CONVOLUTION_1D_EXT             0x8010
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_2D_EXT</NAME>
#define GL_CONVOLUTION_2D_EXT             0x8011
</MACRO>
<MACRO>
<NAME>GL_SEPARABLE_2D_EXT</NAME>
#define GL_SEPARABLE_2D_EXT               0x8012
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_BORDER_MODE_EXT</NAME>
#define GL_CONVOLUTION_BORDER_MODE_EXT    0x8013
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FILTER_SCALE_EXT</NAME>
#define GL_CONVOLUTION_FILTER_SCALE_EXT   0x8014
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FILTER_BIAS_EXT</NAME>
#define GL_CONVOLUTION_FILTER_BIAS_EXT    0x8015
</MACRO>
<MACRO>
<NAME>GL_REDUCE_EXT</NAME>
#define GL_REDUCE_EXT                     0x8016
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_FORMAT_EXT</NAME>
#define GL_CONVOLUTION_FORMAT_EXT         0x8017
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_WIDTH_EXT</NAME>
#define GL_CONVOLUTION_WIDTH_EXT          0x8018
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_HEIGHT_EXT</NAME>
#define GL_CONVOLUTION_HEIGHT_EXT         0x8019
</MACRO>
<MACRO>
<NAME>GL_MAX_CONVOLUTION_WIDTH_EXT</NAME>
#define GL_MAX_CONVOLUTION_WIDTH_EXT      0x801A
</MACRO>
<MACRO>
<NAME>GL_MAX_CONVOLUTION_HEIGHT_EXT</NAME>
#define GL_MAX_CONVOLUTION_HEIGHT_EXT     0x801B
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_RED_SCALE_EXT</NAME>
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_GREEN_SCALE_EXT</NAME>
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_BLUE_SCALE_EXT</NAME>
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_ALPHA_SCALE_EXT</NAME>
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_RED_BIAS_EXT</NAME>
#define GL_POST_CONVOLUTION_RED_BIAS_EXT  0x8020
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_GREEN_BIAS_EXT</NAME>
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_BLUE_BIAS_EXT</NAME>
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_ALPHA_BIAS_EXT</NAME>
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
</MACRO>
<MACRO>
<NAME>GL_COLOR_MATRIX_SGI</NAME>
#define GL_COLOR_MATRIX_SGI               0x80B1
</MACRO>
<MACRO>
<NAME>GL_COLOR_MATRIX_STACK_DEPTH_SGI</NAME>
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI   0x80B2
</MACRO>
<MACRO>
<NAME>GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI</NAME>
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_RED_SCALE_SGI</NAME>
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI</NAME>
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI</NAME>
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI</NAME>
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_RED_BIAS_SGI</NAME>
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI</NAME>
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI</NAME>
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI</NAME>
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_SGI</NAME>
#define GL_COLOR_TABLE_SGI                0x80D0
</MACRO>
<MACRO>
<NAME>GL_POST_CONVOLUTION_COLOR_TABLE_SGI</NAME>
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
</MACRO>
<MACRO>
<NAME>GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI</NAME>
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
</MACRO>
<MACRO>
<NAME>GL_PROXY_COLOR_TABLE_SGI</NAME>
#define GL_PROXY_COLOR_TABLE_SGI          0x80D3
</MACRO>
<MACRO>
<NAME>GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI</NAME>
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
</MACRO>
<MACRO>
<NAME>GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI</NAME>
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_SCALE_SGI</NAME>
#define GL_COLOR_TABLE_SCALE_SGI          0x80D6
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_BIAS_SGI</NAME>
#define GL_COLOR_TABLE_BIAS_SGI           0x80D7
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_FORMAT_SGI</NAME>
#define GL_COLOR_TABLE_FORMAT_SGI         0x80D8
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_WIDTH_SGI</NAME>
#define GL_COLOR_TABLE_WIDTH_SGI          0x80D9
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_RED_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_RED_SIZE_SGI       0x80DA
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_GREEN_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_GREEN_SIZE_SGI     0x80DB
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_BLUE_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_BLUE_SIZE_SGI      0x80DC
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_ALPHA_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI     0x80DD
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_LUMINANCE_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
</MACRO>
<MACRO>
<NAME>GL_COLOR_TABLE_INTENSITY_SIZE_SGI</NAME>
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEXTURE_SGIS</NAME>
#define GL_PIXEL_TEXTURE_SGIS             0x8353
</MACRO>
<MACRO>
<NAME>GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS</NAME>
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
</MACRO>
<MACRO>
<NAME>GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS</NAME>
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
</MACRO>
<MACRO>
<NAME>GL_PIXEL_GROUP_COLOR_SGIS</NAME>
#define GL_PIXEL_GROUP_COLOR_SGIS         0x8356
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_SGIX             0x8139
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_MODE_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_MODE_SGIX        0x832B
</MACRO>
<MACRO>
<NAME>GL_PACK_SKIP_VOLUMES_SGIS</NAME>
#define GL_PACK_SKIP_VOLUMES_SGIS         0x8130
</MACRO>
<MACRO>
<NAME>GL_PACK_IMAGE_DEPTH_SGIS</NAME>
#define GL_PACK_IMAGE_DEPTH_SGIS          0x8131
</MACRO>
<MACRO>
<NAME>GL_UNPACK_SKIP_VOLUMES_SGIS</NAME>
#define GL_UNPACK_SKIP_VOLUMES_SGIS       0x8132
</MACRO>
<MACRO>
<NAME>GL_UNPACK_IMAGE_DEPTH_SGIS</NAME>
#define GL_UNPACK_IMAGE_DEPTH_SGIS        0x8133
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_4D_SGIS</NAME>
#define GL_TEXTURE_4D_SGIS                0x8134
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_4D_SGIS</NAME>
#define GL_PROXY_TEXTURE_4D_SGIS          0x8135
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_4DSIZE_SGIS</NAME>
#define GL_TEXTURE_4DSIZE_SGIS            0x8136
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_WRAP_Q_SGIS</NAME>
#define GL_TEXTURE_WRAP_Q_SGIS            0x8137
</MACRO>
<MACRO>
<NAME>GL_MAX_4D_TEXTURE_SIZE_SGIS</NAME>
#define GL_MAX_4D_TEXTURE_SIZE_SGIS       0x8138
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_4D_BINDING_SGIS</NAME>
#define GL_TEXTURE_4D_BINDING_SGIS        0x814F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COLOR_TABLE_SGI</NAME>
#define GL_TEXTURE_COLOR_TABLE_SGI        0x80BC
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_COLOR_TABLE_SGI</NAME>
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI  0x80BD
</MACRO>
<MACRO>
<NAME>GL_CMYK_EXT</NAME>
#define GL_CMYK_EXT                       0x800C
</MACRO>
<MACRO>
<NAME>GL_CMYKA_EXT</NAME>
#define GL_CMYKA_EXT                      0x800D
</MACRO>
<MACRO>
<NAME>GL_PACK_CMYK_HINT_EXT</NAME>
#define GL_PACK_CMYK_HINT_EXT             0x800E
</MACRO>
<MACRO>
<NAME>GL_UNPACK_CMYK_HINT_EXT</NAME>
#define GL_UNPACK_CMYK_HINT_EXT           0x800F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_PRIORITY_EXT</NAME>
#define GL_TEXTURE_PRIORITY_EXT           0x8066
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_RESIDENT_EXT</NAME>
#define GL_TEXTURE_RESIDENT_EXT           0x8067
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_1D_BINDING_EXT</NAME>
#define GL_TEXTURE_1D_BINDING_EXT         0x8068
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_2D_BINDING_EXT</NAME>
#define GL_TEXTURE_2D_BINDING_EXT         0x8069
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_3D_BINDING_EXT</NAME>
#define GL_TEXTURE_3D_BINDING_EXT         0x806A
</MACRO>
<MACRO>
<NAME>GL_DETAIL_TEXTURE_2D_SGIS</NAME>
#define GL_DETAIL_TEXTURE_2D_SGIS         0x8095
</MACRO>
<MACRO>
<NAME>GL_DETAIL_TEXTURE_2D_BINDING_SGIS</NAME>
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
</MACRO>
<MACRO>
<NAME>GL_LINEAR_DETAIL_SGIS</NAME>
#define GL_LINEAR_DETAIL_SGIS             0x8097
</MACRO>
<MACRO>
<NAME>GL_LINEAR_DETAIL_ALPHA_SGIS</NAME>
#define GL_LINEAR_DETAIL_ALPHA_SGIS       0x8098
</MACRO>
<MACRO>
<NAME>GL_LINEAR_DETAIL_COLOR_SGIS</NAME>
#define GL_LINEAR_DETAIL_COLOR_SGIS       0x8099
</MACRO>
<MACRO>
<NAME>GL_DETAIL_TEXTURE_LEVEL_SGIS</NAME>
#define GL_DETAIL_TEXTURE_LEVEL_SGIS      0x809A
</MACRO>
<MACRO>
<NAME>GL_DETAIL_TEXTURE_MODE_SGIS</NAME>
#define GL_DETAIL_TEXTURE_MODE_SGIS       0x809B
</MACRO>
<MACRO>
<NAME>GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS</NAME>
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
</MACRO>
<MACRO>
<NAME>GL_LINEAR_SHARPEN_SGIS</NAME>
#define GL_LINEAR_SHARPEN_SGIS            0x80AD
</MACRO>
<MACRO>
<NAME>GL_LINEAR_SHARPEN_ALPHA_SGIS</NAME>
#define GL_LINEAR_SHARPEN_ALPHA_SGIS      0x80AE
</MACRO>
<MACRO>
<NAME>GL_LINEAR_SHARPEN_COLOR_SGIS</NAME>
#define GL_LINEAR_SHARPEN_COLOR_SGIS      0x80AF
</MACRO>
<MACRO>
<NAME>GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS</NAME>
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_BYTE_3_3_2_EXT</NAME>
#define GL_UNSIGNED_BYTE_3_3_2_EXT        0x8032
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_4_4_4_4_EXT</NAME>
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT     0x8033
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_SHORT_5_5_5_1_EXT</NAME>
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT     0x8034
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_8_8_8_8_EXT</NAME>
#define GL_UNSIGNED_INT_8_8_8_8_EXT       0x8035
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_10_10_10_2_EXT</NAME>
#define GL_UNSIGNED_INT_10_10_10_2_EXT    0x8036
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MIN_LOD_SGIS</NAME>
#define GL_TEXTURE_MIN_LOD_SGIS           0x813A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_LOD_SGIS</NAME>
#define GL_TEXTURE_MAX_LOD_SGIS           0x813B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BASE_LEVEL_SGIS</NAME>
#define GL_TEXTURE_BASE_LEVEL_SGIS        0x813C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_LEVEL_SGIS</NAME>
#define GL_TEXTURE_MAX_LEVEL_SGIS         0x813D
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_SGIS</NAME>
#define GL_MULTISAMPLE_SGIS               0x809D
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_MASK_SGIS</NAME>
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS      0x809E
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_ONE_SGIS</NAME>
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS       0x809F
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_SGIS</NAME>
#define GL_SAMPLE_MASK_SGIS               0x80A0
</MACRO>
<MACRO>
<NAME>GL_1PASS_SGIS</NAME>
#define GL_1PASS_SGIS                     0x80A1
</MACRO>
<MACRO>
<NAME>GL_2PASS_0_SGIS</NAME>
#define GL_2PASS_0_SGIS                   0x80A2
</MACRO>
<MACRO>
<NAME>GL_2PASS_1_SGIS</NAME>
#define GL_2PASS_1_SGIS                   0x80A3
</MACRO>
<MACRO>
<NAME>GL_4PASS_0_SGIS</NAME>
#define GL_4PASS_0_SGIS                   0x80A4
</MACRO>
<MACRO>
<NAME>GL_4PASS_1_SGIS</NAME>
#define GL_4PASS_1_SGIS                   0x80A5
</MACRO>
<MACRO>
<NAME>GL_4PASS_2_SGIS</NAME>
#define GL_4PASS_2_SGIS                   0x80A6
</MACRO>
<MACRO>
<NAME>GL_4PASS_3_SGIS</NAME>
#define GL_4PASS_3_SGIS                   0x80A7
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_BUFFERS_SGIS</NAME>
#define GL_SAMPLE_BUFFERS_SGIS            0x80A8
</MACRO>
<MACRO>
<NAME>GL_SAMPLES_SGIS</NAME>
#define GL_SAMPLES_SGIS                   0x80A9
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_VALUE_SGIS</NAME>
#define GL_SAMPLE_MASK_VALUE_SGIS         0x80AA
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_INVERT_SGIS</NAME>
#define GL_SAMPLE_MASK_INVERT_SGIS        0x80AB
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_PATTERN_SGIS</NAME>
#define GL_SAMPLE_PATTERN_SGIS            0x80AC
</MACRO>
<MACRO>
<NAME>GL_RESCALE_NORMAL_EXT</NAME>
#define GL_RESCALE_NORMAL_EXT             0x803A
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_EXT</NAME>
#define GL_VERTEX_ARRAY_EXT               0x8074
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_EXT</NAME>
#define GL_NORMAL_ARRAY_EXT               0x8075
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_EXT</NAME>
#define GL_COLOR_ARRAY_EXT                0x8076
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_EXT</NAME>
#define GL_INDEX_ARRAY_EXT                0x8077
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_EXT        0x8078
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_EXT</NAME>
#define GL_EDGE_FLAG_ARRAY_EXT            0x8079
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_SIZE_EXT</NAME>
#define GL_VERTEX_ARRAY_SIZE_EXT          0x807A
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_TYPE_EXT</NAME>
#define GL_VERTEX_ARRAY_TYPE_EXT          0x807B
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_STRIDE_EXT</NAME>
#define GL_VERTEX_ARRAY_STRIDE_EXT        0x807C
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_COUNT_EXT</NAME>
#define GL_VERTEX_ARRAY_COUNT_EXT         0x807D
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_TYPE_EXT</NAME>
#define GL_NORMAL_ARRAY_TYPE_EXT          0x807E
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_STRIDE_EXT</NAME>
#define GL_NORMAL_ARRAY_STRIDE_EXT        0x807F
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_COUNT_EXT</NAME>
#define GL_NORMAL_ARRAY_COUNT_EXT         0x8080
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_SIZE_EXT</NAME>
#define GL_COLOR_ARRAY_SIZE_EXT           0x8081
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_TYPE_EXT</NAME>
#define GL_COLOR_ARRAY_TYPE_EXT           0x8082
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_STRIDE_EXT</NAME>
#define GL_COLOR_ARRAY_STRIDE_EXT         0x8083
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_COUNT_EXT</NAME>
#define GL_COLOR_ARRAY_COUNT_EXT          0x8084
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_TYPE_EXT</NAME>
#define GL_INDEX_ARRAY_TYPE_EXT           0x8085
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_STRIDE_EXT</NAME>
#define GL_INDEX_ARRAY_STRIDE_EXT         0x8086
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_COUNT_EXT</NAME>
#define GL_INDEX_ARRAY_COUNT_EXT          0x8087
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_SIZE_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT   0x8088
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_TYPE_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT   0x8089
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_STRIDE_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_COUNT_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT  0x808B
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_STRIDE_EXT</NAME>
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT     0x808C
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_COUNT_EXT</NAME>
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT      0x808D
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_POINTER_EXT</NAME>
#define GL_VERTEX_ARRAY_POINTER_EXT       0x808E
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_POINTER_EXT</NAME>
#define GL_NORMAL_ARRAY_POINTER_EXT       0x808F
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_POINTER_EXT</NAME>
#define GL_COLOR_ARRAY_POINTER_EXT        0x8090
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_POINTER_EXT</NAME>
#define GL_INDEX_ARRAY_POINTER_EXT        0x8091
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_POINTER_EXT</NAME>
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_POINTER_EXT</NAME>
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT    0x8093
</MACRO>
<MACRO>
<NAME>GL_GENERATE_MIPMAP_SGIS</NAME>
#define GL_GENERATE_MIPMAP_SGIS           0x8191
</MACRO>
<MACRO>
<NAME>GL_GENERATE_MIPMAP_HINT_SGIS</NAME>
#define GL_GENERATE_MIPMAP_HINT_SGIS      0x8192
</MACRO>
<MACRO>
<NAME>GL_LINEAR_CLIPMAP_LINEAR_SGIX</NAME>
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX     0x8170
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_CENTER_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX    0x8171
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_FRAME_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX     0x8172
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_OFFSET_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX    0x8173
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CLIPMAP_DEPTH_SGIX</NAME>
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX     0x8176
</MACRO>
<MACRO>
<NAME>GL_MAX_CLIPMAP_DEPTH_SGIX</NAME>
#define GL_MAX_CLIPMAP_DEPTH_SGIX         0x8177
</MACRO>
<MACRO>
<NAME>GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX</NAME>
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
</MACRO>
<MACRO>
<NAME>GL_NEAREST_CLIPMAP_NEAREST_SGIX</NAME>
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX   0x844D
</MACRO>
<MACRO>
<NAME>GL_NEAREST_CLIPMAP_LINEAR_SGIX</NAME>
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX    0x844E
</MACRO>
<MACRO>
<NAME>GL_LINEAR_CLIPMAP_NEAREST_SGIX</NAME>
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX    0x844F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_SGIX</NAME>
#define GL_TEXTURE_COMPARE_SGIX           0x819A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COMPARE_OPERATOR_SGIX</NAME>
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX  0x819B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LEQUAL_R_SGIX</NAME>
#define GL_TEXTURE_LEQUAL_R_SGIX          0x819C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_GEQUAL_R_SGIX</NAME>
#define GL_TEXTURE_GEQUAL_R_SGIX          0x819D
</MACRO>
<MACRO>
<NAME>GL_CLAMP_TO_EDGE_SGIS</NAME>
#define GL_CLAMP_TO_EDGE_SGIS             0x812F
</MACRO>
<MACRO>
<NAME>GL_FUNC_ADD_EXT</NAME>
#define GL_FUNC_ADD_EXT                   0x8006
</MACRO>
<MACRO>
<NAME>GL_MIN_EXT</NAME>
#define GL_MIN_EXT                        0x8007
</MACRO>
<MACRO>
<NAME>GL_MAX_EXT</NAME>
#define GL_MAX_EXT                        0x8008
</MACRO>
<MACRO>
<NAME>GL_BLEND_EQUATION_EXT</NAME>
#define GL_BLEND_EQUATION_EXT             0x8009
</MACRO>
<MACRO>
<NAME>GL_FUNC_SUBTRACT_EXT</NAME>
#define GL_FUNC_SUBTRACT_EXT              0x800A
</MACRO>
<MACRO>
<NAME>GL_FUNC_REVERSE_SUBTRACT_EXT</NAME>
#define GL_FUNC_REVERSE_SUBTRACT_EXT      0x800B
</MACRO>
<MACRO>
<NAME>GL_INTERLACE_SGIX</NAME>
#define GL_INTERLACE_SGIX                 0x8094
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX</NAME>
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_CACHE_INCREMENT_SGIX</NAME>
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_WIDTH_SGIX</NAME>
#define GL_PIXEL_TILE_WIDTH_SGIX          0x8140
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_HEIGHT_SGIX</NAME>
#define GL_PIXEL_TILE_HEIGHT_SGIX         0x8141
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_GRID_WIDTH_SGIX</NAME>
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX     0x8142
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_GRID_HEIGHT_SGIX</NAME>
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX    0x8143
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_GRID_DEPTH_SGIX</NAME>
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX     0x8144
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TILE_CACHE_SIZE_SGIX</NAME>
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX     0x8145
</MACRO>
<MACRO>
<NAME>GL_DUAL_ALPHA4_SGIS</NAME>
#define GL_DUAL_ALPHA4_SGIS               0x8110
</MACRO>
<MACRO>
<NAME>GL_DUAL_ALPHA8_SGIS</NAME>
#define GL_DUAL_ALPHA8_SGIS               0x8111
</MACRO>
<MACRO>
<NAME>GL_DUAL_ALPHA12_SGIS</NAME>
#define GL_DUAL_ALPHA12_SGIS              0x8112
</MACRO>
<MACRO>
<NAME>GL_DUAL_ALPHA16_SGIS</NAME>
#define GL_DUAL_ALPHA16_SGIS              0x8113
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE4_SGIS</NAME>
#define GL_DUAL_LUMINANCE4_SGIS           0x8114
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE8_SGIS</NAME>
#define GL_DUAL_LUMINANCE8_SGIS           0x8115
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE12_SGIS</NAME>
#define GL_DUAL_LUMINANCE12_SGIS          0x8116
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE16_SGIS</NAME>
#define GL_DUAL_LUMINANCE16_SGIS          0x8117
</MACRO>
<MACRO>
<NAME>GL_DUAL_INTENSITY4_SGIS</NAME>
#define GL_DUAL_INTENSITY4_SGIS           0x8118
</MACRO>
<MACRO>
<NAME>GL_DUAL_INTENSITY8_SGIS</NAME>
#define GL_DUAL_INTENSITY8_SGIS           0x8119
</MACRO>
<MACRO>
<NAME>GL_DUAL_INTENSITY12_SGIS</NAME>
#define GL_DUAL_INTENSITY12_SGIS          0x811A
</MACRO>
<MACRO>
<NAME>GL_DUAL_INTENSITY16_SGIS</NAME>
#define GL_DUAL_INTENSITY16_SGIS          0x811B
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE_ALPHA4_SGIS</NAME>
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS     0x811C
</MACRO>
<MACRO>
<NAME>GL_DUAL_LUMINANCE_ALPHA8_SGIS</NAME>
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS     0x811D
</MACRO>
<MACRO>
<NAME>GL_QUAD_ALPHA4_SGIS</NAME>
#define GL_QUAD_ALPHA4_SGIS               0x811E
</MACRO>
<MACRO>
<NAME>GL_QUAD_ALPHA8_SGIS</NAME>
#define GL_QUAD_ALPHA8_SGIS               0x811F
</MACRO>
<MACRO>
<NAME>GL_QUAD_LUMINANCE4_SGIS</NAME>
#define GL_QUAD_LUMINANCE4_SGIS           0x8120
</MACRO>
<MACRO>
<NAME>GL_QUAD_LUMINANCE8_SGIS</NAME>
#define GL_QUAD_LUMINANCE8_SGIS           0x8121
</MACRO>
<MACRO>
<NAME>GL_QUAD_INTENSITY4_SGIS</NAME>
#define GL_QUAD_INTENSITY4_SGIS           0x8122
</MACRO>
<MACRO>
<NAME>GL_QUAD_INTENSITY8_SGIS</NAME>
#define GL_QUAD_INTENSITY8_SGIS           0x8123
</MACRO>
<MACRO>
<NAME>GL_DUAL_TEXTURE_SELECT_SGIS</NAME>
#define GL_DUAL_TEXTURE_SELECT_SGIS       0x8124
</MACRO>
<MACRO>
<NAME>GL_QUAD_TEXTURE_SELECT_SGIS</NAME>
#define GL_QUAD_TEXTURE_SELECT_SGIS       0x8125
</MACRO>
<MACRO>
<NAME>GL_SPRITE_SGIX</NAME>
#define GL_SPRITE_SGIX                    0x8148
</MACRO>
<MACRO>
<NAME>GL_SPRITE_MODE_SGIX</NAME>
#define GL_SPRITE_MODE_SGIX               0x8149
</MACRO>
<MACRO>
<NAME>GL_SPRITE_AXIS_SGIX</NAME>
#define GL_SPRITE_AXIS_SGIX               0x814A
</MACRO>
<MACRO>
<NAME>GL_SPRITE_TRANSLATION_SGIX</NAME>
#define GL_SPRITE_TRANSLATION_SGIX        0x814B
</MACRO>
<MACRO>
<NAME>GL_SPRITE_AXIAL_SGIX</NAME>
#define GL_SPRITE_AXIAL_SGIX              0x814C
</MACRO>
<MACRO>
<NAME>GL_SPRITE_OBJECT_ALIGNED_SGIX</NAME>
#define GL_SPRITE_OBJECT_ALIGNED_SGIX     0x814D
</MACRO>
<MACRO>
<NAME>GL_SPRITE_EYE_ALIGNED_SGIX</NAME>
#define GL_SPRITE_EYE_ALIGNED_SGIX        0x814E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MULTI_BUFFER_HINT_SGIX</NAME>
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MIN_EXT</NAME>
#define GL_POINT_SIZE_MIN_EXT             0x8126
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MAX_EXT</NAME>
#define GL_POINT_SIZE_MAX_EXT             0x8127
</MACRO>
<MACRO>
<NAME>GL_POINT_FADE_THRESHOLD_SIZE_EXT</NAME>
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT  0x8128
</MACRO>
<MACRO>
<NAME>GL_DISTANCE_ATTENUATION_EXT</NAME>
#define GL_DISTANCE_ATTENUATION_EXT       0x8129
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MIN_SGIS</NAME>
#define GL_POINT_SIZE_MIN_SGIS            0x8126
</MACRO>
<MACRO>
<NAME>GL_POINT_SIZE_MAX_SGIS</NAME>
#define GL_POINT_SIZE_MAX_SGIS            0x8127
</MACRO>
<MACRO>
<NAME>GL_POINT_FADE_THRESHOLD_SIZE_SGIS</NAME>
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
</MACRO>
<MACRO>
<NAME>GL_DISTANCE_ATTENUATION_SGIS</NAME>
#define GL_DISTANCE_ATTENUATION_SGIS      0x8129
</MACRO>
<MACRO>
<NAME>GL_INSTRUMENT_BUFFER_POINTER_SGIX</NAME>
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
</MACRO>
<MACRO>
<NAME>GL_INSTRUMENT_MEASUREMENTS_SGIX</NAME>
#define GL_INSTRUMENT_MEASUREMENTS_SGIX   0x8181
</MACRO>
<MACRO>
<NAME>GL_POST_TEXTURE_FILTER_BIAS_SGIX</NAME>
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX  0x8179
</MACRO>
<MACRO>
<NAME>GL_POST_TEXTURE_FILTER_SCALE_SGIX</NAME>
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
</MACRO>
<MACRO>
<NAME>GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX</NAME>
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
</MACRO>
<MACRO>
<NAME>GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX</NAME>
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
</MACRO>
<MACRO>
<NAME>GL_FRAMEZOOM_SGIX</NAME>
#define GL_FRAMEZOOM_SGIX                 0x818B
</MACRO>
<MACRO>
<NAME>GL_FRAMEZOOM_FACTOR_SGIX</NAME>
#define GL_FRAMEZOOM_FACTOR_SGIX          0x818C
</MACRO>
<MACRO>
<NAME>GL_MAX_FRAMEZOOM_FACTOR_SGIX</NAME>
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX      0x818D
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEFORMATION_BIT_SGIX</NAME>
#define GL_TEXTURE_DEFORMATION_BIT_SGIX   0x00000001
</MACRO>
<MACRO>
<NAME>GL_GEOMETRY_DEFORMATION_BIT_SGIX</NAME>
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX  0x00000002
</MACRO>
<MACRO>
<NAME>GL_GEOMETRY_DEFORMATION_SGIX</NAME>
#define GL_GEOMETRY_DEFORMATION_SGIX      0x8194
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DEFORMATION_SGIX</NAME>
#define GL_TEXTURE_DEFORMATION_SGIX       0x8195
</MACRO>
<MACRO>
<NAME>GL_DEFORMATIONS_MASK_SGIX</NAME>
#define GL_DEFORMATIONS_MASK_SGIX         0x8196
</MACRO>
<MACRO>
<NAME>GL_MAX_DEFORMATION_ORDER_SGIX</NAME>
#define GL_MAX_DEFORMATION_ORDER_SGIX     0x8197
</MACRO>
<MACRO>
<NAME>GL_REFERENCE_PLANE_SGIX</NAME>
#define GL_REFERENCE_PLANE_SGIX           0x817D
</MACRO>
<MACRO>
<NAME>GL_REFERENCE_PLANE_EQUATION_SGIX</NAME>
#define GL_REFERENCE_PLANE_EQUATION_SGIX  0x817E
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT16_SGIX</NAME>
#define GL_DEPTH_COMPONENT16_SGIX         0x81A5
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT24_SGIX</NAME>
#define GL_DEPTH_COMPONENT24_SGIX         0x81A6
</MACRO>
<MACRO>
<NAME>GL_DEPTH_COMPONENT32_SGIX</NAME>
#define GL_DEPTH_COMPONENT32_SGIX         0x81A7
</MACRO>
<MACRO>
<NAME>GL_FOG_FUNC_SGIS</NAME>
#define GL_FOG_FUNC_SGIS                  0x812A
</MACRO>
<MACRO>
<NAME>GL_FOG_FUNC_POINTS_SGIS</NAME>
#define GL_FOG_FUNC_POINTS_SGIS           0x812B
</MACRO>
<MACRO>
<NAME>GL_MAX_FOG_FUNC_POINTS_SGIS</NAME>
#define GL_MAX_FOG_FUNC_POINTS_SGIS       0x812C
</MACRO>
<MACRO>
<NAME>GL_FOG_OFFSET_SGIX</NAME>
#define GL_FOG_OFFSET_SGIX                0x8198
</MACRO>
<MACRO>
<NAME>GL_FOG_OFFSET_VALUE_SGIX</NAME>
#define GL_FOG_OFFSET_VALUE_SGIX          0x8199
</MACRO>
<MACRO>
<NAME>GL_IMAGE_SCALE_X_HP</NAME>
#define GL_IMAGE_SCALE_X_HP               0x8155
</MACRO>
<MACRO>
<NAME>GL_IMAGE_SCALE_Y_HP</NAME>
#define GL_IMAGE_SCALE_Y_HP               0x8156
</MACRO>
<MACRO>
<NAME>GL_IMAGE_TRANSLATE_X_HP</NAME>
#define GL_IMAGE_TRANSLATE_X_HP           0x8157
</MACRO>
<MACRO>
<NAME>GL_IMAGE_TRANSLATE_Y_HP</NAME>
#define GL_IMAGE_TRANSLATE_Y_HP           0x8158
</MACRO>
<MACRO>
<NAME>GL_IMAGE_ROTATE_ANGLE_HP</NAME>
#define GL_IMAGE_ROTATE_ANGLE_HP          0x8159
</MACRO>
<MACRO>
<NAME>GL_IMAGE_ROTATE_ORIGIN_X_HP</NAME>
#define GL_IMAGE_ROTATE_ORIGIN_X_HP       0x815A
</MACRO>
<MACRO>
<NAME>GL_IMAGE_ROTATE_ORIGIN_Y_HP</NAME>
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP       0x815B
</MACRO>
<MACRO>
<NAME>GL_IMAGE_MAG_FILTER_HP</NAME>
#define GL_IMAGE_MAG_FILTER_HP            0x815C
</MACRO>
<MACRO>
<NAME>GL_IMAGE_MIN_FILTER_HP</NAME>
#define GL_IMAGE_MIN_FILTER_HP            0x815D
</MACRO>
<MACRO>
<NAME>GL_IMAGE_CUBIC_WEIGHT_HP</NAME>
#define GL_IMAGE_CUBIC_WEIGHT_HP          0x815E
</MACRO>
<MACRO>
<NAME>GL_CUBIC_HP</NAME>
#define GL_CUBIC_HP                       0x815F
</MACRO>
<MACRO>
<NAME>GL_AVERAGE_HP</NAME>
#define GL_AVERAGE_HP                     0x8160
</MACRO>
<MACRO>
<NAME>GL_IMAGE_TRANSFORM_2D_HP</NAME>
#define GL_IMAGE_TRANSFORM_2D_HP          0x8161
</MACRO>
<MACRO>
<NAME>GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP</NAME>
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
</MACRO>
<MACRO>
<NAME>GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP</NAME>
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
</MACRO>
<MACRO>
<NAME>GL_IGNORE_BORDER_HP</NAME>
#define GL_IGNORE_BORDER_HP               0x8150
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_BORDER_HP</NAME>
#define GL_CONSTANT_BORDER_HP             0x8151
</MACRO>
<MACRO>
<NAME>GL_REPLICATE_BORDER_HP</NAME>
#define GL_REPLICATE_BORDER_HP            0x8153
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_BORDER_COLOR_HP</NAME>
#define GL_CONVOLUTION_BORDER_COLOR_HP    0x8154
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_ENV_BIAS_SGIX</NAME>
#define GL_TEXTURE_ENV_BIAS_SGIX          0x80BE
</MACRO>
<MACRO>
<NAME>GL_VERTEX_DATA_HINT_PGI</NAME>
#define GL_VERTEX_DATA_HINT_PGI           0x1A22A
</MACRO>
<MACRO>
<NAME>GL_VERTEX_CONSISTENT_HINT_PGI</NAME>
#define GL_VERTEX_CONSISTENT_HINT_PGI     0x1A22B
</MACRO>
<MACRO>
<NAME>GL_MATERIAL_SIDE_HINT_PGI</NAME>
#define GL_MATERIAL_SIDE_HINT_PGI         0x1A22C
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_HINT_PGI</NAME>
#define GL_MAX_VERTEX_HINT_PGI            0x1A22D
</MACRO>
<MACRO>
<NAME>GL_COLOR3_BIT_PGI</NAME>
#define GL_COLOR3_BIT_PGI                 0x00010000
</MACRO>
<MACRO>
<NAME>GL_COLOR4_BIT_PGI</NAME>
#define GL_COLOR4_BIT_PGI                 0x00020000
</MACRO>
<MACRO>
<NAME>GL_EDGEFLAG_BIT_PGI</NAME>
#define GL_EDGEFLAG_BIT_PGI               0x00040000
</MACRO>
<MACRO>
<NAME>GL_INDEX_BIT_PGI</NAME>
#define GL_INDEX_BIT_PGI                  0x00080000
</MACRO>
<MACRO>
<NAME>GL_MAT_AMBIENT_BIT_PGI</NAME>
#define GL_MAT_AMBIENT_BIT_PGI            0x00100000
</MACRO>
<MACRO>
<NAME>GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI</NAME>
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
</MACRO>
<MACRO>
<NAME>GL_MAT_DIFFUSE_BIT_PGI</NAME>
#define GL_MAT_DIFFUSE_BIT_PGI            0x00400000
</MACRO>
<MACRO>
<NAME>GL_MAT_EMISSION_BIT_PGI</NAME>
#define GL_MAT_EMISSION_BIT_PGI           0x00800000
</MACRO>
<MACRO>
<NAME>GL_MAT_COLOR_INDEXES_BIT_PGI</NAME>
#define GL_MAT_COLOR_INDEXES_BIT_PGI      0x01000000
</MACRO>
<MACRO>
<NAME>GL_MAT_SHININESS_BIT_PGI</NAME>
#define GL_MAT_SHININESS_BIT_PGI          0x02000000
</MACRO>
<MACRO>
<NAME>GL_MAT_SPECULAR_BIT_PGI</NAME>
#define GL_MAT_SPECULAR_BIT_PGI           0x04000000
</MACRO>
<MACRO>
<NAME>GL_NORMAL_BIT_PGI</NAME>
#define GL_NORMAL_BIT_PGI                 0x08000000
</MACRO>
<MACRO>
<NAME>GL_TEXCOORD1_BIT_PGI</NAME>
#define GL_TEXCOORD1_BIT_PGI              0x10000000
</MACRO>
<MACRO>
<NAME>GL_TEXCOORD2_BIT_PGI</NAME>
#define GL_TEXCOORD2_BIT_PGI              0x20000000
</MACRO>
<MACRO>
<NAME>GL_TEXCOORD3_BIT_PGI</NAME>
#define GL_TEXCOORD3_BIT_PGI              0x40000000
</MACRO>
<MACRO>
<NAME>GL_TEXCOORD4_BIT_PGI</NAME>
#define GL_TEXCOORD4_BIT_PGI              0x80000000
</MACRO>
<MACRO>
<NAME>GL_VERTEX23_BIT_PGI</NAME>
#define GL_VERTEX23_BIT_PGI               0x00000004
</MACRO>
<MACRO>
<NAME>GL_VERTEX4_BIT_PGI</NAME>
#define GL_VERTEX4_BIT_PGI                0x00000008
</MACRO>
<MACRO>
<NAME>GL_PREFER_DOUBLEBUFFER_HINT_PGI</NAME>
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI   0x1A1F8
</MACRO>
<MACRO>
<NAME>GL_CONSERVE_MEMORY_HINT_PGI</NAME>
#define GL_CONSERVE_MEMORY_HINT_PGI       0x1A1FD
</MACRO>
<MACRO>
<NAME>GL_RECLAIM_MEMORY_HINT_PGI</NAME>
#define GL_RECLAIM_MEMORY_HINT_PGI        0x1A1FE
</MACRO>
<MACRO>
<NAME>GL_NATIVE_GRAPHICS_HANDLE_PGI</NAME>
#define GL_NATIVE_GRAPHICS_HANDLE_PGI     0x1A202
</MACRO>
<MACRO>
<NAME>GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI</NAME>
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
</MACRO>
<MACRO>
<NAME>GL_NATIVE_GRAPHICS_END_HINT_PGI</NAME>
#define GL_NATIVE_GRAPHICS_END_HINT_PGI   0x1A204
</MACRO>
<MACRO>
<NAME>GL_ALWAYS_FAST_HINT_PGI</NAME>
#define GL_ALWAYS_FAST_HINT_PGI           0x1A20C
</MACRO>
<MACRO>
<NAME>GL_ALWAYS_SOFT_HINT_PGI</NAME>
#define GL_ALWAYS_SOFT_HINT_PGI           0x1A20D
</MACRO>
<MACRO>
<NAME>GL_ALLOW_DRAW_OBJ_HINT_PGI</NAME>
#define GL_ALLOW_DRAW_OBJ_HINT_PGI        0x1A20E
</MACRO>
<MACRO>
<NAME>GL_ALLOW_DRAW_WIN_HINT_PGI</NAME>
#define GL_ALLOW_DRAW_WIN_HINT_PGI        0x1A20F
</MACRO>
<MACRO>
<NAME>GL_ALLOW_DRAW_FRG_HINT_PGI</NAME>
#define GL_ALLOW_DRAW_FRG_HINT_PGI        0x1A210
</MACRO>
<MACRO>
<NAME>GL_ALLOW_DRAW_MEM_HINT_PGI</NAME>
#define GL_ALLOW_DRAW_MEM_HINT_PGI        0x1A211
</MACRO>
<MACRO>
<NAME>GL_STRICT_DEPTHFUNC_HINT_PGI</NAME>
#define GL_STRICT_DEPTHFUNC_HINT_PGI      0x1A216
</MACRO>
<MACRO>
<NAME>GL_STRICT_LIGHTING_HINT_PGI</NAME>
#define GL_STRICT_LIGHTING_HINT_PGI       0x1A217
</MACRO>
<MACRO>
<NAME>GL_STRICT_SCISSOR_HINT_PGI</NAME>
#define GL_STRICT_SCISSOR_HINT_PGI        0x1A218
</MACRO>
<MACRO>
<NAME>GL_FULL_STIPPLE_HINT_PGI</NAME>
#define GL_FULL_STIPPLE_HINT_PGI          0x1A219
</MACRO>
<MACRO>
<NAME>GL_CLIP_NEAR_HINT_PGI</NAME>
#define GL_CLIP_NEAR_HINT_PGI             0x1A220
</MACRO>
<MACRO>
<NAME>GL_CLIP_FAR_HINT_PGI</NAME>
#define GL_CLIP_FAR_HINT_PGI              0x1A221
</MACRO>
<MACRO>
<NAME>GL_WIDE_LINE_HINT_PGI</NAME>
#define GL_WIDE_LINE_HINT_PGI             0x1A222
</MACRO>
<MACRO>
<NAME>GL_BACK_NORMALS_HINT_PGI</NAME>
#define GL_BACK_NORMALS_HINT_PGI          0x1A223
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX1_EXT</NAME>
#define GL_COLOR_INDEX1_EXT               0x80E2
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX2_EXT</NAME>
#define GL_COLOR_INDEX2_EXT               0x80E3
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX4_EXT</NAME>
#define GL_COLOR_INDEX4_EXT               0x80E4
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX8_EXT</NAME>
#define GL_COLOR_INDEX8_EXT               0x80E5
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX12_EXT</NAME>
#define GL_COLOR_INDEX12_EXT              0x80E6
</MACRO>
<MACRO>
<NAME>GL_COLOR_INDEX16_EXT</NAME>
#define GL_COLOR_INDEX16_EXT              0x80E7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_INDEX_SIZE_EXT</NAME>
#define GL_TEXTURE_INDEX_SIZE_EXT         0x80ED
</MACRO>
<MACRO>
<NAME>GL_CLIP_VOLUME_CLIPPING_HINT_EXT</NAME>
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT  0x80F0
</MACRO>
<MACRO>
<NAME>GL_LIST_PRIORITY_SGIX</NAME>
#define GL_LIST_PRIORITY_SGIX             0x8182
</MACRO>
<MACRO>
<NAME>GL_IR_INSTRUMENT1_SGIX</NAME>
#define GL_IR_INSTRUMENT1_SGIX            0x817F
</MACRO>
<MACRO>
<NAME>GL_CALLIGRAPHIC_FRAGMENT_SGIX</NAME>
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX     0x8183
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LOD_BIAS_S_SGIX</NAME>
#define GL_TEXTURE_LOD_BIAS_S_SGIX        0x818E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LOD_BIAS_T_SGIX</NAME>
#define GL_TEXTURE_LOD_BIAS_T_SGIX        0x818F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LOD_BIAS_R_SGIX</NAME>
#define GL_TEXTURE_LOD_BIAS_R_SGIX        0x8190
</MACRO>
<MACRO>
<NAME>GL_SHADOW_AMBIENT_SGIX</NAME>
#define GL_SHADOW_AMBIENT_SGIX            0x80BF
</MACRO>
<MACRO>
<NAME>GL_INDEX_MATERIAL_EXT</NAME>
#define GL_INDEX_MATERIAL_EXT             0x81B8
</MACRO>
<MACRO>
<NAME>GL_INDEX_MATERIAL_PARAMETER_EXT</NAME>
#define GL_INDEX_MATERIAL_PARAMETER_EXT   0x81B9
</MACRO>
<MACRO>
<NAME>GL_INDEX_MATERIAL_FACE_EXT</NAME>
#define GL_INDEX_MATERIAL_FACE_EXT        0x81BA
</MACRO>
<MACRO>
<NAME>GL_INDEX_TEST_EXT</NAME>
#define GL_INDEX_TEST_EXT                 0x81B5
</MACRO>
<MACRO>
<NAME>GL_INDEX_TEST_FUNC_EXT</NAME>
#define GL_INDEX_TEST_FUNC_EXT            0x81B6
</MACRO>
<MACRO>
<NAME>GL_INDEX_TEST_REF_EXT</NAME>
#define GL_INDEX_TEST_REF_EXT             0x81B7
</MACRO>
<MACRO>
<NAME>GL_IUI_V2F_EXT</NAME>
#define GL_IUI_V2F_EXT                    0x81AD
</MACRO>
<MACRO>
<NAME>GL_IUI_V3F_EXT</NAME>
#define GL_IUI_V3F_EXT                    0x81AE
</MACRO>
<MACRO>
<NAME>GL_IUI_N3F_V2F_EXT</NAME>
#define GL_IUI_N3F_V2F_EXT                0x81AF
</MACRO>
<MACRO>
<NAME>GL_IUI_N3F_V3F_EXT</NAME>
#define GL_IUI_N3F_V3F_EXT                0x81B0
</MACRO>
<MACRO>
<NAME>GL_T2F_IUI_V2F_EXT</NAME>
#define GL_T2F_IUI_V2F_EXT                0x81B1
</MACRO>
<MACRO>
<NAME>GL_T2F_IUI_V3F_EXT</NAME>
#define GL_T2F_IUI_V3F_EXT                0x81B2
</MACRO>
<MACRO>
<NAME>GL_T2F_IUI_N3F_V2F_EXT</NAME>
#define GL_T2F_IUI_N3F_V2F_EXT            0x81B3
</MACRO>
<MACRO>
<NAME>GL_T2F_IUI_N3F_V3F_EXT</NAME>
#define GL_T2F_IUI_N3F_V3F_EXT            0x81B4
</MACRO>
<MACRO>
<NAME>GL_ARRAY_ELEMENT_LOCK_FIRST_EXT</NAME>
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT   0x81A8
</MACRO>
<MACRO>
<NAME>GL_ARRAY_ELEMENT_LOCK_COUNT_EXT</NAME>
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT   0x81A9
</MACRO>
<MACRO>
<NAME>GL_CULL_VERTEX_EXT</NAME>
#define GL_CULL_VERTEX_EXT                0x81AA
</MACRO>
<MACRO>
<NAME>GL_CULL_VERTEX_EYE_POSITION_EXT</NAME>
#define GL_CULL_VERTEX_EYE_POSITION_EXT   0x81AB
</MACRO>
<MACRO>
<NAME>GL_CULL_VERTEX_OBJECT_POSITION_EXT</NAME>
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
</MACRO>
<MACRO>
<NAME>GL_YCRCB_422_SGIX</NAME>
#define GL_YCRCB_422_SGIX                 0x81BB
</MACRO>
<MACRO>
<NAME>GL_YCRCB_444_SGIX</NAME>
#define GL_YCRCB_444_SGIX                 0x81BC
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHTING_SGIX</NAME>
#define GL_FRAGMENT_LIGHTING_SGIX         0x8400
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_COLOR_MATERIAL_SGIX</NAME>
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX   0x8401
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX</NAME>
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX</NAME>
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
</MACRO>
<MACRO>
<NAME>GL_MAX_FRAGMENT_LIGHTS_SGIX</NAME>
#define GL_MAX_FRAGMENT_LIGHTS_SGIX       0x8404
</MACRO>
<MACRO>
<NAME>GL_MAX_ACTIVE_LIGHTS_SGIX</NAME>
#define GL_MAX_ACTIVE_LIGHTS_SGIX         0x8405
</MACRO>
<MACRO>
<NAME>GL_CURRENT_RASTER_NORMAL_SGIX</NAME>
#define GL_CURRENT_RASTER_NORMAL_SGIX     0x8406
</MACRO>
<MACRO>
<NAME>GL_LIGHT_ENV_MODE_SGIX</NAME>
#define GL_LIGHT_ENV_MODE_SGIX            0x8407
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX</NAME>
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX</NAME>
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX</NAME>
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX</NAME>
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT0_SGIX</NAME>
#define GL_FRAGMENT_LIGHT0_SGIX           0x840C
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT1_SGIX</NAME>
#define GL_FRAGMENT_LIGHT1_SGIX           0x840D
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT2_SGIX</NAME>
#define GL_FRAGMENT_LIGHT2_SGIX           0x840E
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT3_SGIX</NAME>
#define GL_FRAGMENT_LIGHT3_SGIX           0x840F
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT4_SGIX</NAME>
#define GL_FRAGMENT_LIGHT4_SGIX           0x8410
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT5_SGIX</NAME>
#define GL_FRAGMENT_LIGHT5_SGIX           0x8411
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT6_SGIX</NAME>
#define GL_FRAGMENT_LIGHT6_SGIX           0x8412
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_LIGHT7_SGIX</NAME>
#define GL_FRAGMENT_LIGHT7_SGIX           0x8413
</MACRO>
<MACRO>
<NAME>GL_RASTER_POSITION_UNCLIPPED_IBM</NAME>
#define GL_RASTER_POSITION_UNCLIPPED_IBM  0x19262
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LIGHTING_MODE_HP</NAME>
#define GL_TEXTURE_LIGHTING_MODE_HP       0x8167
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_POST_SPECULAR_HP</NAME>
#define GL_TEXTURE_POST_SPECULAR_HP       0x8168
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_PRE_SPECULAR_HP</NAME>
#define GL_TEXTURE_PRE_SPECULAR_HP        0x8169
</MACRO>
<MACRO>
<NAME>GL_MAX_ELEMENTS_VERTICES_EXT</NAME>
#define GL_MAX_ELEMENTS_VERTICES_EXT      0x80E8
</MACRO>
<MACRO>
<NAME>GL_MAX_ELEMENTS_INDICES_EXT</NAME>
#define GL_MAX_ELEMENTS_INDICES_EXT       0x80E9
</MACRO>
<MACRO>
<NAME>GL_PHONG_WIN</NAME>
#define GL_PHONG_WIN                      0x80EA
</MACRO>
<MACRO>
<NAME>GL_PHONG_HINT_WIN</NAME>
#define GL_PHONG_HINT_WIN                 0x80EB
</MACRO>
<MACRO>
<NAME>GL_FOG_SPECULAR_TEXTURE_WIN</NAME>
#define GL_FOG_SPECULAR_TEXTURE_WIN       0x80EC
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_MATERIAL_EXT</NAME>
#define GL_FRAGMENT_MATERIAL_EXT          0x8349
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_NORMAL_EXT</NAME>
#define GL_FRAGMENT_NORMAL_EXT            0x834A
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_COLOR_EXT</NAME>
#define GL_FRAGMENT_COLOR_EXT             0x834C
</MACRO>
<MACRO>
<NAME>GL_ATTENUATION_EXT</NAME>
#define GL_ATTENUATION_EXT                0x834D
</MACRO>
<MACRO>
<NAME>GL_SHADOW_ATTENUATION_EXT</NAME>
#define GL_SHADOW_ATTENUATION_EXT         0x834E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_APPLICATION_MODE_EXT</NAME>
#define GL_TEXTURE_APPLICATION_MODE_EXT   0x834F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LIGHT_EXT</NAME>
#define GL_TEXTURE_LIGHT_EXT              0x8350
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MATERIAL_FACE_EXT</NAME>
#define GL_TEXTURE_MATERIAL_FACE_EXT      0x8351
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MATERIAL_PARAMETER_EXT</NAME>
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
</MACRO>
<MACRO>
<NAME>GL_ALPHA_MIN_SGIX</NAME>
#define GL_ALPHA_MIN_SGIX                 0x8320
</MACRO>
<MACRO>
<NAME>GL_ALPHA_MAX_SGIX</NAME>
#define GL_ALPHA_MAX_SGIX                 0x8321
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_Q_CEILING_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX   0x8184
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_Q_ROUND_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX     0x8185
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX     0x8186
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX 0x8187
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX 0x8188
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX    0x8189
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX</NAME>
#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX    0x818A
</MACRO>
<MACRO>
<NAME>GL_BGR_EXT</NAME>
#define GL_BGR_EXT                        0x80E0
</MACRO>
<MACRO>
<NAME>GL_BGRA_EXT</NAME>
#define GL_BGRA_EXT                       0x80E1
</MACRO>
<MACRO>
<NAME>GL_ASYNC_MARKER_SGIX</NAME>
#define GL_ASYNC_MARKER_SGIX              0x8329
</MACRO>
<MACRO>
<NAME>GL_ASYNC_TEX_IMAGE_SGIX</NAME>
#define GL_ASYNC_TEX_IMAGE_SGIX           0x835C
</MACRO>
<MACRO>
<NAME>GL_ASYNC_DRAW_PIXELS_SGIX</NAME>
#define GL_ASYNC_DRAW_PIXELS_SGIX         0x835D
</MACRO>
<MACRO>
<NAME>GL_ASYNC_READ_PIXELS_SGIX</NAME>
#define GL_ASYNC_READ_PIXELS_SGIX         0x835E
</MACRO>
<MACRO>
<NAME>GL_MAX_ASYNC_TEX_IMAGE_SGIX</NAME>
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX       0x835F
</MACRO>
<MACRO>
<NAME>GL_MAX_ASYNC_DRAW_PIXELS_SGIX</NAME>
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX     0x8360
</MACRO>
<MACRO>
<NAME>GL_MAX_ASYNC_READ_PIXELS_SGIX</NAME>
#define GL_MAX_ASYNC_READ_PIXELS_SGIX     0x8361
</MACRO>
<MACRO>
<NAME>GL_ASYNC_HISTOGRAM_SGIX</NAME>
#define GL_ASYNC_HISTOGRAM_SGIX           0x832C
</MACRO>
<MACRO>
<NAME>GL_MAX_ASYNC_HISTOGRAM_SGIX</NAME>
#define GL_MAX_ASYNC_HISTOGRAM_SGIX       0x832D
</MACRO>
<MACRO>
<NAME>GL_PARALLEL_ARRAYS_INTEL</NAME>
#define GL_PARALLEL_ARRAYS_INTEL          0x83F4
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL</NAME>
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL</NAME>
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL</NAME>
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL</NAME>
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
</MACRO>
<MACRO>
<NAME>GL_OCCLUSION_TEST_HP</NAME>
#define GL_OCCLUSION_TEST_HP              0x8165
</MACRO>
<MACRO>
<NAME>GL_OCCLUSION_TEST_RESULT_HP</NAME>
#define GL_OCCLUSION_TEST_RESULT_HP       0x8166
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TRANSFORM_2D_EXT</NAME>
#define GL_PIXEL_TRANSFORM_2D_EXT         0x8330
</MACRO>
<MACRO>
<NAME>GL_PIXEL_MAG_FILTER_EXT</NAME>
#define GL_PIXEL_MAG_FILTER_EXT           0x8331
</MACRO>
<MACRO>
<NAME>GL_PIXEL_MIN_FILTER_EXT</NAME>
#define GL_PIXEL_MIN_FILTER_EXT           0x8332
</MACRO>
<MACRO>
<NAME>GL_PIXEL_CUBIC_WEIGHT_EXT</NAME>
#define GL_PIXEL_CUBIC_WEIGHT_EXT         0x8333
</MACRO>
<MACRO>
<NAME>GL_CUBIC_EXT</NAME>
#define GL_CUBIC_EXT                      0x8334
</MACRO>
<MACRO>
<NAME>GL_AVERAGE_EXT</NAME>
#define GL_AVERAGE_EXT                    0x8335
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT</NAME>
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
</MACRO>
<MACRO>
<NAME>GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT</NAME>
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
</MACRO>
<MACRO>
<NAME>GL_PIXEL_TRANSFORM_2D_MATRIX_EXT</NAME>
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT  0x8338
</MACRO>
<MACRO>
<NAME>GL_SHARED_TEXTURE_PALETTE_EXT</NAME>
#define GL_SHARED_TEXTURE_PALETTE_EXT     0x81FB
</MACRO>
<MACRO>
<NAME>GL_LIGHT_MODEL_COLOR_CONTROL_EXT</NAME>
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT  0x81F8
</MACRO>
<MACRO>
<NAME>GL_SINGLE_COLOR_EXT</NAME>
#define GL_SINGLE_COLOR_EXT               0x81F9
</MACRO>
<MACRO>
<NAME>GL_SEPARATE_SPECULAR_COLOR_EXT</NAME>
#define GL_SEPARATE_SPECULAR_COLOR_EXT    0x81FA
</MACRO>
<MACRO>
<NAME>GL_COLOR_SUM_EXT</NAME>
#define GL_COLOR_SUM_EXT                  0x8458
</MACRO>
<MACRO>
<NAME>GL_CURRENT_SECONDARY_COLOR_EXT</NAME>
#define GL_CURRENT_SECONDARY_COLOR_EXT    0x8459
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_SIZE_EXT</NAME>
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_TYPE_EXT</NAME>
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT</NAME>
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_POINTER_EXT</NAME>
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_EXT</NAME>
#define GL_SECONDARY_COLOR_ARRAY_EXT      0x845E
</MACRO>
<MACRO>
<NAME>GL_PERTURB_EXT</NAME>
#define GL_PERTURB_EXT                    0x85AE
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_NORMAL_EXT</NAME>
#define GL_TEXTURE_NORMAL_EXT             0x85AF
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_SOURCE_EXT</NAME>
#define GL_FOG_COORDINATE_SOURCE_EXT      0x8450
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_EXT</NAME>
#define GL_FOG_COORDINATE_EXT             0x8451
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_DEPTH_EXT</NAME>
#define GL_FRAGMENT_DEPTH_EXT             0x8452
</MACRO>
<MACRO>
<NAME>GL_CURRENT_FOG_COORDINATE_EXT</NAME>
#define GL_CURRENT_FOG_COORDINATE_EXT     0x8453
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_TYPE_EXT</NAME>
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT  0x8454
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_STRIDE_EXT</NAME>
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_POINTER_EXT</NAME>
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_EXT</NAME>
#define GL_FOG_COORDINATE_ARRAY_EXT       0x8457
</MACRO>
<MACRO>
<NAME>GL_SCREEN_COORDINATES_REND</NAME>
#define GL_SCREEN_COORDINATES_REND        0x8490
</MACRO>
<MACRO>
<NAME>GL_INVERTED_SCREEN_W_REND</NAME>
#define GL_INVERTED_SCREEN_W_REND         0x8491
</MACRO>
<MACRO>
<NAME>GL_TANGENT_ARRAY_EXT</NAME>
#define GL_TANGENT_ARRAY_EXT              0x8439
</MACRO>
<MACRO>
<NAME>GL_BINORMAL_ARRAY_EXT</NAME>
#define GL_BINORMAL_ARRAY_EXT             0x843A
</MACRO>
<MACRO>
<NAME>GL_CURRENT_TANGENT_EXT</NAME>
#define GL_CURRENT_TANGENT_EXT            0x843B
</MACRO>
<MACRO>
<NAME>GL_CURRENT_BINORMAL_EXT</NAME>
#define GL_CURRENT_BINORMAL_EXT           0x843C
</MACRO>
<MACRO>
<NAME>GL_TANGENT_ARRAY_TYPE_EXT</NAME>
#define GL_TANGENT_ARRAY_TYPE_EXT         0x843E
</MACRO>
<MACRO>
<NAME>GL_TANGENT_ARRAY_STRIDE_EXT</NAME>
#define GL_TANGENT_ARRAY_STRIDE_EXT       0x843F
</MACRO>
<MACRO>
<NAME>GL_BINORMAL_ARRAY_TYPE_EXT</NAME>
#define GL_BINORMAL_ARRAY_TYPE_EXT        0x8440
</MACRO>
<MACRO>
<NAME>GL_BINORMAL_ARRAY_STRIDE_EXT</NAME>
#define GL_BINORMAL_ARRAY_STRIDE_EXT      0x8441
</MACRO>
<MACRO>
<NAME>GL_TANGENT_ARRAY_POINTER_EXT</NAME>
#define GL_TANGENT_ARRAY_POINTER_EXT      0x8442
</MACRO>
<MACRO>
<NAME>GL_BINORMAL_ARRAY_POINTER_EXT</NAME>
#define GL_BINORMAL_ARRAY_POINTER_EXT     0x8443
</MACRO>
<MACRO>
<NAME>GL_MAP1_TANGENT_EXT</NAME>
#define GL_MAP1_TANGENT_EXT               0x8444
</MACRO>
<MACRO>
<NAME>GL_MAP2_TANGENT_EXT</NAME>
#define GL_MAP2_TANGENT_EXT               0x8445
</MACRO>
<MACRO>
<NAME>GL_MAP1_BINORMAL_EXT</NAME>
#define GL_MAP1_BINORMAL_EXT              0x8446
</MACRO>
<MACRO>
<NAME>GL_MAP2_BINORMAL_EXT</NAME>
#define GL_MAP2_BINORMAL_EXT              0x8447
</MACRO>
<MACRO>
<NAME>GL_COMBINE_EXT</NAME>
#define GL_COMBINE_EXT                    0x8570
</MACRO>
<MACRO>
<NAME>GL_COMBINE_RGB_EXT</NAME>
#define GL_COMBINE_RGB_EXT                0x8571
</MACRO>
<MACRO>
<NAME>GL_COMBINE_ALPHA_EXT</NAME>
#define GL_COMBINE_ALPHA_EXT              0x8572
</MACRO>
<MACRO>
<NAME>GL_RGB_SCALE_EXT</NAME>
#define GL_RGB_SCALE_EXT                  0x8573
</MACRO>
<MACRO>
<NAME>GL_ADD_SIGNED_EXT</NAME>
#define GL_ADD_SIGNED_EXT                 0x8574
</MACRO>
<MACRO>
<NAME>GL_INTERPOLATE_EXT</NAME>
#define GL_INTERPOLATE_EXT                0x8575
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_EXT</NAME>
#define GL_CONSTANT_EXT                   0x8576
</MACRO>
<MACRO>
<NAME>GL_PRIMARY_COLOR_EXT</NAME>
#define GL_PRIMARY_COLOR_EXT              0x8577
</MACRO>
<MACRO>
<NAME>GL_PREVIOUS_EXT</NAME>
#define GL_PREVIOUS_EXT                   0x8578
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_RGB_EXT</NAME>
#define GL_SOURCE0_RGB_EXT                0x8580
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_RGB_EXT</NAME>
#define GL_SOURCE1_RGB_EXT                0x8581
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_RGB_EXT</NAME>
#define GL_SOURCE2_RGB_EXT                0x8582
</MACRO>
<MACRO>
<NAME>GL_SOURCE0_ALPHA_EXT</NAME>
#define GL_SOURCE0_ALPHA_EXT              0x8588
</MACRO>
<MACRO>
<NAME>GL_SOURCE1_ALPHA_EXT</NAME>
#define GL_SOURCE1_ALPHA_EXT              0x8589
</MACRO>
<MACRO>
<NAME>GL_SOURCE2_ALPHA_EXT</NAME>
#define GL_SOURCE2_ALPHA_EXT              0x858A
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_RGB_EXT</NAME>
#define GL_OPERAND0_RGB_EXT               0x8590
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_RGB_EXT</NAME>
#define GL_OPERAND1_RGB_EXT               0x8591
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_RGB_EXT</NAME>
#define GL_OPERAND2_RGB_EXT               0x8592
</MACRO>
<MACRO>
<NAME>GL_OPERAND0_ALPHA_EXT</NAME>
#define GL_OPERAND0_ALPHA_EXT             0x8598
</MACRO>
<MACRO>
<NAME>GL_OPERAND1_ALPHA_EXT</NAME>
#define GL_OPERAND1_ALPHA_EXT             0x8599
</MACRO>
<MACRO>
<NAME>GL_OPERAND2_ALPHA_EXT</NAME>
#define GL_OPERAND2_ALPHA_EXT             0x859A
</MACRO>
<MACRO>
<NAME>GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE</NAME>
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
</MACRO>
<MACRO>
<NAME>GL_TRANSFORM_HINT_APPLE</NAME>
#define GL_TRANSFORM_HINT_APPLE           0x85B1
</MACRO>
<MACRO>
<NAME>GL_FOG_SCALE_SGIX</NAME>
#define GL_FOG_SCALE_SGIX                 0x81FC
</MACRO>
<MACRO>
<NAME>GL_FOG_SCALE_VALUE_SGIX</NAME>
#define GL_FOG_SCALE_VALUE_SGIX           0x81FD
</MACRO>
<MACRO>
<NAME>GL_UNPACK_CONSTANT_DATA_SUNX</NAME>
#define GL_UNPACK_CONSTANT_DATA_SUNX      0x81D5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CONSTANT_DATA_SUNX</NAME>
#define GL_TEXTURE_CONSTANT_DATA_SUNX     0x81D6
</MACRO>
<MACRO>
<NAME>GL_GLOBAL_ALPHA_SUN</NAME>
#define GL_GLOBAL_ALPHA_SUN               0x81D9
</MACRO>
<MACRO>
<NAME>GL_GLOBAL_ALPHA_FACTOR_SUN</NAME>
#define GL_GLOBAL_ALPHA_FACTOR_SUN        0x81DA
</MACRO>
<MACRO>
<NAME>GL_RESTART_SUN</NAME>
#define GL_RESTART_SUN                    0x0001
</MACRO>
<MACRO>
<NAME>GL_REPLACE_MIDDLE_SUN</NAME>
#define GL_REPLACE_MIDDLE_SUN             0x0002
</MACRO>
<MACRO>
<NAME>GL_REPLACE_OLDEST_SUN</NAME>
#define GL_REPLACE_OLDEST_SUN             0x0003
</MACRO>
<MACRO>
<NAME>GL_TRIANGLE_LIST_SUN</NAME>
#define GL_TRIANGLE_LIST_SUN              0x81D7
</MACRO>
<MACRO>
<NAME>GL_REPLACEMENT_CODE_SUN</NAME>
#define GL_REPLACEMENT_CODE_SUN           0x81D8
</MACRO>
<MACRO>
<NAME>GL_REPLACEMENT_CODE_ARRAY_SUN</NAME>
#define GL_REPLACEMENT_CODE_ARRAY_SUN     0x85C0
</MACRO>
<MACRO>
<NAME>GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN</NAME>
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
</MACRO>
<MACRO>
<NAME>GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN</NAME>
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
</MACRO>
<MACRO>
<NAME>GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN</NAME>
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
</MACRO>
<MACRO>
<NAME>GL_R1UI_V3F_SUN</NAME>
#define GL_R1UI_V3F_SUN                   0x85C4
</MACRO>
<MACRO>
<NAME>GL_R1UI_C4UB_V3F_SUN</NAME>
#define GL_R1UI_C4UB_V3F_SUN              0x85C5
</MACRO>
<MACRO>
<NAME>GL_R1UI_C3F_V3F_SUN</NAME>
#define GL_R1UI_C3F_V3F_SUN               0x85C6
</MACRO>
<MACRO>
<NAME>GL_R1UI_N3F_V3F_SUN</NAME>
#define GL_R1UI_N3F_V3F_SUN               0x85C7
</MACRO>
<MACRO>
<NAME>GL_R1UI_C4F_N3F_V3F_SUN</NAME>
#define GL_R1UI_C4F_N3F_V3F_SUN           0x85C8
</MACRO>
<MACRO>
<NAME>GL_R1UI_T2F_V3F_SUN</NAME>
#define GL_R1UI_T2F_V3F_SUN               0x85C9
</MACRO>
<MACRO>
<NAME>GL_R1UI_T2F_N3F_V3F_SUN</NAME>
#define GL_R1UI_T2F_N3F_V3F_SUN           0x85CA
</MACRO>
<MACRO>
<NAME>GL_R1UI_T2F_C4F_N3F_V3F_SUN</NAME>
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN       0x85CB
</MACRO>
<MACRO>
<NAME>GL_BLEND_DST_RGB_EXT</NAME>
#define GL_BLEND_DST_RGB_EXT              0x80C8
</MACRO>
<MACRO>
<NAME>GL_BLEND_SRC_RGB_EXT</NAME>
#define GL_BLEND_SRC_RGB_EXT              0x80C9
</MACRO>
<MACRO>
<NAME>GL_BLEND_DST_ALPHA_EXT</NAME>
#define GL_BLEND_DST_ALPHA_EXT            0x80CA
</MACRO>
<MACRO>
<NAME>GL_BLEND_SRC_ALPHA_EXT</NAME>
#define GL_BLEND_SRC_ALPHA_EXT            0x80CB
</MACRO>
<MACRO>
<NAME>GL_RED_MIN_CLAMP_INGR</NAME>
#define GL_RED_MIN_CLAMP_INGR             0x8560
</MACRO>
<MACRO>
<NAME>GL_GREEN_MIN_CLAMP_INGR</NAME>
#define GL_GREEN_MIN_CLAMP_INGR           0x8561
</MACRO>
<MACRO>
<NAME>GL_BLUE_MIN_CLAMP_INGR</NAME>
#define GL_BLUE_MIN_CLAMP_INGR            0x8562
</MACRO>
<MACRO>
<NAME>GL_ALPHA_MIN_CLAMP_INGR</NAME>
#define GL_ALPHA_MIN_CLAMP_INGR           0x8563
</MACRO>
<MACRO>
<NAME>GL_RED_MAX_CLAMP_INGR</NAME>
#define GL_RED_MAX_CLAMP_INGR             0x8564
</MACRO>
<MACRO>
<NAME>GL_GREEN_MAX_CLAMP_INGR</NAME>
#define GL_GREEN_MAX_CLAMP_INGR           0x8565
</MACRO>
<MACRO>
<NAME>GL_BLUE_MAX_CLAMP_INGR</NAME>
#define GL_BLUE_MAX_CLAMP_INGR            0x8566
</MACRO>
<MACRO>
<NAME>GL_ALPHA_MAX_CLAMP_INGR</NAME>
#define GL_ALPHA_MAX_CLAMP_INGR           0x8567
</MACRO>
<MACRO>
<NAME>GL_INTERLACE_READ_INGR</NAME>
#define GL_INTERLACE_READ_INGR            0x8568
</MACRO>
<MACRO>
<NAME>GL_INCR_WRAP_EXT</NAME>
#define GL_INCR_WRAP_EXT                  0x8507
</MACRO>
<MACRO>
<NAME>GL_DECR_WRAP_EXT</NAME>
#define GL_DECR_WRAP_EXT                  0x8508
</MACRO>
<MACRO>
<NAME>GL_422_EXT</NAME>
#define GL_422_EXT                        0x80CC
</MACRO>
<MACRO>
<NAME>GL_422_REV_EXT</NAME>
#define GL_422_REV_EXT                    0x80CD
</MACRO>
<MACRO>
<NAME>GL_422_AVERAGE_EXT</NAME>
#define GL_422_AVERAGE_EXT                0x80CE
</MACRO>
<MACRO>
<NAME>GL_422_REV_AVERAGE_EXT</NAME>
#define GL_422_REV_AVERAGE_EXT            0x80CF
</MACRO>
<MACRO>
<NAME>GL_NORMAL_MAP_NV</NAME>
#define GL_NORMAL_MAP_NV                  0x8511
</MACRO>
<MACRO>
<NAME>GL_REFLECTION_MAP_NV</NAME>
#define GL_REFLECTION_MAP_NV              0x8512
</MACRO>
<MACRO>
<NAME>GL_NORMAL_MAP_EXT</NAME>
#define GL_NORMAL_MAP_EXT                 0x8511
</MACRO>
<MACRO>
<NAME>GL_REFLECTION_MAP_EXT</NAME>
#define GL_REFLECTION_MAP_EXT             0x8512
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_EXT           0x8513
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BINDING_CUBE_MAP_EXT</NAME>
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT   0x8514
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT</NAME>
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_CUBE_MAP_EXT</NAME>
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT     0x851B
</MACRO>
<MACRO>
<NAME>GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT</NAME>
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT  0x851C
</MACRO>
<MACRO>
<NAME>GL_WRAP_BORDER_SUN</NAME>
#define GL_WRAP_BORDER_SUN                0x81D4
</MACRO>
<MACRO>
<NAME>GL_MAX_TEXTURE_LOD_BIAS_EXT</NAME>
#define GL_MAX_TEXTURE_LOD_BIAS_EXT       0x84FD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_FILTER_CONTROL_EXT</NAME>
#define GL_TEXTURE_FILTER_CONTROL_EXT     0x8500
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LOD_BIAS_EXT</NAME>
#define GL_TEXTURE_LOD_BIAS_EXT           0x8501
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_ANISOTROPY_EXT</NAME>
#define GL_TEXTURE_MAX_ANISOTROPY_EXT     0x84FE
</MACRO>
<MACRO>
<NAME>GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT</NAME>
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW0_STACK_DEPTH_EXT</NAME>
#define GL_MODELVIEW0_STACK_DEPTH_EXT     GL_MODELVIEW_STACK_DEPTH
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW1_STACK_DEPTH_EXT</NAME>
#define GL_MODELVIEW1_STACK_DEPTH_EXT     0x8502
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW0_MATRIX_EXT</NAME>
#define GL_MODELVIEW0_MATRIX_EXT          GL_MODELVIEW_MATRIX
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW1_MATRIX_EXT</NAME>
#define GL_MODELVIEW1_MATRIX_EXT          0x8506
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHTING_EXT</NAME>
#define GL_VERTEX_WEIGHTING_EXT           0x8509
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW0_EXT</NAME>
#define GL_MODELVIEW0_EXT                 GL_MODELVIEW
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW1_EXT</NAME>
#define GL_MODELVIEW1_EXT                 0x850A
</MACRO>
<MACRO>
<NAME>GL_CURRENT_VERTEX_WEIGHT_EXT</NAME>
#define GL_CURRENT_VERTEX_WEIGHT_EXT      0x850B
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHT_ARRAY_EXT</NAME>
#define GL_VERTEX_WEIGHT_ARRAY_EXT        0x850C
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT</NAME>
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT   0x850D
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT</NAME>
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT   0x850E
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT</NAME>
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
</MACRO>
<MACRO>
<NAME>GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT</NAME>
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
</MACRO>
<MACRO>
<NAME>GL_MAX_SHININESS_NV</NAME>
#define GL_MAX_SHININESS_NV               0x8504
</MACRO>
<MACRO>
<NAME>GL_MAX_SPOT_EXPONENT_NV</NAME>
#define GL_MAX_SPOT_EXPONENT_NV           0x8505
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_RANGE_NV</NAME>
#define GL_VERTEX_ARRAY_RANGE_NV          0x851D
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_RANGE_LENGTH_NV</NAME>
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV   0x851E
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_RANGE_VALID_NV</NAME>
#define GL_VERTEX_ARRAY_RANGE_VALID_NV    0x851F
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV</NAME>
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_RANGE_POINTER_NV</NAME>
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV  0x8521
</MACRO>
<MACRO>
<NAME>GL_REGISTER_COMBINERS_NV</NAME>
#define GL_REGISTER_COMBINERS_NV          0x8522
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_A_NV</NAME>
#define GL_VARIABLE_A_NV                  0x8523
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_B_NV</NAME>
#define GL_VARIABLE_B_NV                  0x8524
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_C_NV</NAME>
#define GL_VARIABLE_C_NV                  0x8525
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_D_NV</NAME>
#define GL_VARIABLE_D_NV                  0x8526
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_E_NV</NAME>
#define GL_VARIABLE_E_NV                  0x8527
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_F_NV</NAME>
#define GL_VARIABLE_F_NV                  0x8528
</MACRO>
<MACRO>
<NAME>GL_VARIABLE_G_NV</NAME>
#define GL_VARIABLE_G_NV                  0x8529
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_COLOR0_NV</NAME>
#define GL_CONSTANT_COLOR0_NV             0x852A
</MACRO>
<MACRO>
<NAME>GL_CONSTANT_COLOR1_NV</NAME>
#define GL_CONSTANT_COLOR1_NV             0x852B
</MACRO>
<MACRO>
<NAME>GL_PRIMARY_COLOR_NV</NAME>
#define GL_PRIMARY_COLOR_NV               0x852C
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_NV</NAME>
#define GL_SECONDARY_COLOR_NV             0x852D
</MACRO>
<MACRO>
<NAME>GL_SPARE0_NV</NAME>
#define GL_SPARE0_NV                      0x852E
</MACRO>
<MACRO>
<NAME>GL_SPARE1_NV</NAME>
#define GL_SPARE1_NV                      0x852F
</MACRO>
<MACRO>
<NAME>GL_DISCARD_NV</NAME>
#define GL_DISCARD_NV                     0x8530
</MACRO>
<MACRO>
<NAME>GL_E_TIMES_F_NV</NAME>
#define GL_E_TIMES_F_NV                   0x8531
</MACRO>
<MACRO>
<NAME>GL_SPARE0_PLUS_SECONDARY_COLOR_NV</NAME>
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_IDENTITY_NV</NAME>
#define GL_UNSIGNED_IDENTITY_NV           0x8536
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INVERT_NV</NAME>
#define GL_UNSIGNED_INVERT_NV             0x8537
</MACRO>
<MACRO>
<NAME>GL_EXPAND_NORMAL_NV</NAME>
#define GL_EXPAND_NORMAL_NV               0x8538
</MACRO>
<MACRO>
<NAME>GL_EXPAND_NEGATE_NV</NAME>
#define GL_EXPAND_NEGATE_NV               0x8539
</MACRO>
<MACRO>
<NAME>GL_HALF_BIAS_NORMAL_NV</NAME>
#define GL_HALF_BIAS_NORMAL_NV            0x853A
</MACRO>
<MACRO>
<NAME>GL_HALF_BIAS_NEGATE_NV</NAME>
#define GL_HALF_BIAS_NEGATE_NV            0x853B
</MACRO>
<MACRO>
<NAME>GL_SIGNED_IDENTITY_NV</NAME>
#define GL_SIGNED_IDENTITY_NV             0x853C
</MACRO>
<MACRO>
<NAME>GL_SIGNED_NEGATE_NV</NAME>
#define GL_SIGNED_NEGATE_NV               0x853D
</MACRO>
<MACRO>
<NAME>GL_SCALE_BY_TWO_NV</NAME>
#define GL_SCALE_BY_TWO_NV                0x853E
</MACRO>
<MACRO>
<NAME>GL_SCALE_BY_FOUR_NV</NAME>
#define GL_SCALE_BY_FOUR_NV               0x853F
</MACRO>
<MACRO>
<NAME>GL_SCALE_BY_ONE_HALF_NV</NAME>
#define GL_SCALE_BY_ONE_HALF_NV           0x8540
</MACRO>
<MACRO>
<NAME>GL_BIAS_BY_NEGATIVE_ONE_HALF_NV</NAME>
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV   0x8541
</MACRO>
<MACRO>
<NAME>GL_COMBINER_INPUT_NV</NAME>
#define GL_COMBINER_INPUT_NV              0x8542
</MACRO>
<MACRO>
<NAME>GL_COMBINER_MAPPING_NV</NAME>
#define GL_COMBINER_MAPPING_NV            0x8543
</MACRO>
<MACRO>
<NAME>GL_COMBINER_COMPONENT_USAGE_NV</NAME>
#define GL_COMBINER_COMPONENT_USAGE_NV    0x8544
</MACRO>
<MACRO>
<NAME>GL_COMBINER_AB_DOT_PRODUCT_NV</NAME>
#define GL_COMBINER_AB_DOT_PRODUCT_NV     0x8545
</MACRO>
<MACRO>
<NAME>GL_COMBINER_CD_DOT_PRODUCT_NV</NAME>
#define GL_COMBINER_CD_DOT_PRODUCT_NV     0x8546
</MACRO>
<MACRO>
<NAME>GL_COMBINER_MUX_SUM_NV</NAME>
#define GL_COMBINER_MUX_SUM_NV            0x8547
</MACRO>
<MACRO>
<NAME>GL_COMBINER_SCALE_NV</NAME>
#define GL_COMBINER_SCALE_NV              0x8548
</MACRO>
<MACRO>
<NAME>GL_COMBINER_BIAS_NV</NAME>
#define GL_COMBINER_BIAS_NV               0x8549
</MACRO>
<MACRO>
<NAME>GL_COMBINER_AB_OUTPUT_NV</NAME>
#define GL_COMBINER_AB_OUTPUT_NV          0x854A
</MACRO>
<MACRO>
<NAME>GL_COMBINER_CD_OUTPUT_NV</NAME>
#define GL_COMBINER_CD_OUTPUT_NV          0x854B
</MACRO>
<MACRO>
<NAME>GL_COMBINER_SUM_OUTPUT_NV</NAME>
#define GL_COMBINER_SUM_OUTPUT_NV         0x854C
</MACRO>
<MACRO>
<NAME>GL_MAX_GENERAL_COMBINERS_NV</NAME>
#define GL_MAX_GENERAL_COMBINERS_NV       0x854D
</MACRO>
<MACRO>
<NAME>GL_NUM_GENERAL_COMBINERS_NV</NAME>
#define GL_NUM_GENERAL_COMBINERS_NV       0x854E
</MACRO>
<MACRO>
<NAME>GL_COLOR_SUM_CLAMP_NV</NAME>
#define GL_COLOR_SUM_CLAMP_NV             0x854F
</MACRO>
<MACRO>
<NAME>GL_COMBINER0_NV</NAME>
#define GL_COMBINER0_NV                   0x8550
</MACRO>
<MACRO>
<NAME>GL_COMBINER1_NV</NAME>
#define GL_COMBINER1_NV                   0x8551
</MACRO>
<MACRO>
<NAME>GL_COMBINER2_NV</NAME>
#define GL_COMBINER2_NV                   0x8552
</MACRO>
<MACRO>
<NAME>GL_COMBINER3_NV</NAME>
#define GL_COMBINER3_NV                   0x8553
</MACRO>
<MACRO>
<NAME>GL_COMBINER4_NV</NAME>
#define GL_COMBINER4_NV                   0x8554
</MACRO>
<MACRO>
<NAME>GL_COMBINER5_NV</NAME>
#define GL_COMBINER5_NV                   0x8555
</MACRO>
<MACRO>
<NAME>GL_COMBINER6_NV</NAME>
#define GL_COMBINER6_NV                   0x8556
</MACRO>
<MACRO>
<NAME>GL_COMBINER7_NV</NAME>
#define GL_COMBINER7_NV                   0x8557
</MACRO>
<MACRO>
<NAME>GL_FOG_DISTANCE_MODE_NV</NAME>
#define GL_FOG_DISTANCE_MODE_NV           0x855A
</MACRO>
<MACRO>
<NAME>GL_EYE_RADIAL_NV</NAME>
#define GL_EYE_RADIAL_NV                  0x855B
</MACRO>
<MACRO>
<NAME>GL_EYE_PLANE_ABSOLUTE_NV</NAME>
#define GL_EYE_PLANE_ABSOLUTE_NV          0x855C
</MACRO>
<MACRO>
<NAME>GL_EMBOSS_LIGHT_NV</NAME>
#define GL_EMBOSS_LIGHT_NV                0x855D
</MACRO>
<MACRO>
<NAME>GL_EMBOSS_CONSTANT_NV</NAME>
#define GL_EMBOSS_CONSTANT_NV             0x855E
</MACRO>
<MACRO>
<NAME>GL_EMBOSS_MAP_NV</NAME>
#define GL_EMBOSS_MAP_NV                  0x855F
</MACRO>
<MACRO>
<NAME>GL_COMBINE4_NV</NAME>
#define GL_COMBINE4_NV                    0x8503
</MACRO>
<MACRO>
<NAME>GL_SOURCE3_RGB_NV</NAME>
#define GL_SOURCE3_RGB_NV                 0x8583
</MACRO>
<MACRO>
<NAME>GL_SOURCE3_ALPHA_NV</NAME>
#define GL_SOURCE3_ALPHA_NV               0x858B
</MACRO>
<MACRO>
<NAME>GL_OPERAND3_RGB_NV</NAME>
#define GL_OPERAND3_RGB_NV                0x8593
</MACRO>
<MACRO>
<NAME>GL_OPERAND3_ALPHA_NV</NAME>
#define GL_OPERAND3_ALPHA_NV              0x859B
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGB_S3TC_DXT1_EXT</NAME>
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT   0x83F0
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</NAME>
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT  0x83F1
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</NAME>
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT  0x83F2
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</NAME>
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT  0x83F3
</MACRO>
<MACRO>
<NAME>GL_CULL_VERTEX_IBM</NAME>
#define GL_CULL_VERTEX_IBM                103050
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_LIST_IBM</NAME>
#define GL_VERTEX_ARRAY_LIST_IBM          103070
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_LIST_IBM</NAME>
#define GL_NORMAL_ARRAY_LIST_IBM          103071
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_LIST_IBM</NAME>
#define GL_COLOR_ARRAY_LIST_IBM           103072
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_LIST_IBM</NAME>
#define GL_INDEX_ARRAY_LIST_IBM           103073
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_LIST_IBM</NAME>
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM   103074
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_LIST_IBM</NAME>
#define GL_EDGE_FLAG_ARRAY_LIST_IBM       103075
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_LIST_IBM</NAME>
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM  103076
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_LIST_IBM</NAME>
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM   103080
</MACRO>
<MACRO>
<NAME>GL_NORMAL_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM   103081
</MACRO>
<MACRO>
<NAME>GL_COLOR_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM    103082
</MACRO>
<MACRO>
<NAME>GL_INDEX_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM    103083
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
</MACRO>
<MACRO>
<NAME>GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
</MACRO>
<MACRO>
<NAME>GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM</NAME>
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
</MACRO>
<MACRO>
<NAME>GL_PACK_SUBSAMPLE_RATE_SGIX</NAME>
#define GL_PACK_SUBSAMPLE_RATE_SGIX       0x85A0
</MACRO>
<MACRO>
<NAME>GL_UNPACK_SUBSAMPLE_RATE_SGIX</NAME>
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX     0x85A1
</MACRO>
<MACRO>
<NAME>GL_PIXEL_SUBSAMPLE_4444_SGIX</NAME>
#define GL_PIXEL_SUBSAMPLE_4444_SGIX      0x85A2
</MACRO>
<MACRO>
<NAME>GL_PIXEL_SUBSAMPLE_2424_SGIX</NAME>
#define GL_PIXEL_SUBSAMPLE_2424_SGIX      0x85A3
</MACRO>
<MACRO>
<NAME>GL_PIXEL_SUBSAMPLE_4242_SGIX</NAME>
#define GL_PIXEL_SUBSAMPLE_4242_SGIX      0x85A4
</MACRO>
<MACRO>
<NAME>GL_YCRCB_SGIX</NAME>
#define GL_YCRCB_SGIX                     0x8318
</MACRO>
<MACRO>
<NAME>GL_YCRCBA_SGIX</NAME>
#define GL_YCRCBA_SGIX                    0x8319
</MACRO>
<MACRO>
<NAME>GL_DEPTH_PASS_INSTRUMENT_SGIX</NAME>
#define GL_DEPTH_PASS_INSTRUMENT_SGIX     0x8310
</MACRO>
<MACRO>
<NAME>GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX</NAME>
#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX 0x8311
</MACRO>
<MACRO>
<NAME>GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX</NAME>
#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX 0x8312
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGB_FXT1_3DFX</NAME>
#define GL_COMPRESSED_RGB_FXT1_3DFX       0x86B0
</MACRO>
<MACRO>
<NAME>GL_COMPRESSED_RGBA_FXT1_3DFX</NAME>
#define GL_COMPRESSED_RGBA_FXT1_3DFX      0x86B1
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_3DFX</NAME>
#define GL_MULTISAMPLE_3DFX               0x86B2
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_BUFFERS_3DFX</NAME>
#define GL_SAMPLE_BUFFERS_3DFX            0x86B3
</MACRO>
<MACRO>
<NAME>GL_SAMPLES_3DFX</NAME>
#define GL_SAMPLES_3DFX                   0x86B4
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_BIT_3DFX</NAME>
#define GL_MULTISAMPLE_BIT_3DFX           0x20000000
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_EXT</NAME>
#define GL_MULTISAMPLE_EXT                0x809D
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_MASK_EXT</NAME>
#define GL_SAMPLE_ALPHA_TO_MASK_EXT       0x809E
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_ALPHA_TO_ONE_EXT</NAME>
#define GL_SAMPLE_ALPHA_TO_ONE_EXT        0x809F
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_EXT</NAME>
#define GL_SAMPLE_MASK_EXT                0x80A0
</MACRO>
<MACRO>
<NAME>GL_1PASS_EXT</NAME>
#define GL_1PASS_EXT                      0x80A1
</MACRO>
<MACRO>
<NAME>GL_2PASS_0_EXT</NAME>
#define GL_2PASS_0_EXT                    0x80A2
</MACRO>
<MACRO>
<NAME>GL_2PASS_1_EXT</NAME>
#define GL_2PASS_1_EXT                    0x80A3
</MACRO>
<MACRO>
<NAME>GL_4PASS_0_EXT</NAME>
#define GL_4PASS_0_EXT                    0x80A4
</MACRO>
<MACRO>
<NAME>GL_4PASS_1_EXT</NAME>
#define GL_4PASS_1_EXT                    0x80A5
</MACRO>
<MACRO>
<NAME>GL_4PASS_2_EXT</NAME>
#define GL_4PASS_2_EXT                    0x80A6
</MACRO>
<MACRO>
<NAME>GL_4PASS_3_EXT</NAME>
#define GL_4PASS_3_EXT                    0x80A7
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_BUFFERS_EXT</NAME>
#define GL_SAMPLE_BUFFERS_EXT             0x80A8
</MACRO>
<MACRO>
<NAME>GL_SAMPLES_EXT</NAME>
#define GL_SAMPLES_EXT                    0x80A9
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_VALUE_EXT</NAME>
#define GL_SAMPLE_MASK_VALUE_EXT          0x80AA
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_MASK_INVERT_EXT</NAME>
#define GL_SAMPLE_MASK_INVERT_EXT         0x80AB
</MACRO>
<MACRO>
<NAME>GL_SAMPLE_PATTERN_EXT</NAME>
#define GL_SAMPLE_PATTERN_EXT             0x80AC
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_BIT_EXT</NAME>
#define GL_MULTISAMPLE_BIT_EXT            0x20000000
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PRECLIP_SGIX</NAME>
#define GL_VERTEX_PRECLIP_SGIX            0x83EE
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PRECLIP_HINT_SGIX</NAME>
#define GL_VERTEX_PRECLIP_HINT_SGIX       0x83EF
</MACRO>
<MACRO>
<NAME>GL_CONVOLUTION_HINT_SGIX</NAME>
#define GL_CONVOLUTION_HINT_SGIX          0x8316
</MACRO>
<MACRO>
<NAME>GL_PACK_RESAMPLE_SGIX</NAME>
#define GL_PACK_RESAMPLE_SGIX             0x842C
</MACRO>
<MACRO>
<NAME>GL_UNPACK_RESAMPLE_SGIX</NAME>
#define GL_UNPACK_RESAMPLE_SGIX           0x842D
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_REPLICATE_SGIX</NAME>
#define GL_RESAMPLE_REPLICATE_SGIX        0x842E
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_ZERO_FILL_SGIX</NAME>
#define GL_RESAMPLE_ZERO_FILL_SGIX        0x842F
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_DECIMATE_SGIX</NAME>
#define GL_RESAMPLE_DECIMATE_SGIX         0x8430
</MACRO>
<MACRO>
<NAME>GL_EYE_DISTANCE_TO_POINT_SGIS</NAME>
#define GL_EYE_DISTANCE_TO_POINT_SGIS     0x81F0
</MACRO>
<MACRO>
<NAME>GL_OBJECT_DISTANCE_TO_POINT_SGIS</NAME>
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS  0x81F1
</MACRO>
<MACRO>
<NAME>GL_EYE_DISTANCE_TO_LINE_SGIS</NAME>
#define GL_EYE_DISTANCE_TO_LINE_SGIS      0x81F2
</MACRO>
<MACRO>
<NAME>GL_OBJECT_DISTANCE_TO_LINE_SGIS</NAME>
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS   0x81F3
</MACRO>
<MACRO>
<NAME>GL_EYE_POINT_SGIS</NAME>
#define GL_EYE_POINT_SGIS                 0x81F4
</MACRO>
<MACRO>
<NAME>GL_OBJECT_POINT_SGIS</NAME>
#define GL_OBJECT_POINT_SGIS              0x81F5
</MACRO>
<MACRO>
<NAME>GL_EYE_LINE_SGIS</NAME>
#define GL_EYE_LINE_SGIS                  0x81F6
</MACRO>
<MACRO>
<NAME>GL_OBJECT_LINE_SGIS</NAME>
#define GL_OBJECT_LINE_SGIS               0x81F7
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_COLOR_WRITEMASK_SGIS</NAME>
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS   0x81EF
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGB_EXT</NAME>
#define GL_DOT3_RGB_EXT                   0x8740
</MACRO>
<MACRO>
<NAME>GL_DOT3_RGBA_EXT</NAME>
#define GL_DOT3_RGBA_EXT                  0x8741
</MACRO>
<MACRO>
<NAME>GL_MIRROR_CLAMP_ATI</NAME>
#define GL_MIRROR_CLAMP_ATI               0x8742
</MACRO>
<MACRO>
<NAME>GL_MIRROR_CLAMP_TO_EDGE_ATI</NAME>
#define GL_MIRROR_CLAMP_TO_EDGE_ATI       0x8743
</MACRO>
<MACRO>
<NAME>GL_ALL_COMPLETED_NV</NAME>
#define GL_ALL_COMPLETED_NV               0x84F2
</MACRO>
<MACRO>
<NAME>GL_FENCE_STATUS_NV</NAME>
#define GL_FENCE_STATUS_NV                0x84F3
</MACRO>
<MACRO>
<NAME>GL_FENCE_CONDITION_NV</NAME>
#define GL_FENCE_CONDITION_NV             0x84F4
</MACRO>
<MACRO>
<NAME>GL_MIRRORED_REPEAT_IBM</NAME>
#define GL_MIRRORED_REPEAT_IBM            0x8370
</MACRO>
<MACRO>
<NAME>GL_EVAL_2D_NV</NAME>
#define GL_EVAL_2D_NV                     0x86C0
</MACRO>
<MACRO>
<NAME>GL_EVAL_TRIANGULAR_2D_NV</NAME>
#define GL_EVAL_TRIANGULAR_2D_NV          0x86C1
</MACRO>
<MACRO>
<NAME>GL_MAP_TESSELLATION_NV</NAME>
#define GL_MAP_TESSELLATION_NV            0x86C2
</MACRO>
<MACRO>
<NAME>GL_MAP_ATTRIB_U_ORDER_NV</NAME>
#define GL_MAP_ATTRIB_U_ORDER_NV          0x86C3
</MACRO>
<MACRO>
<NAME>GL_MAP_ATTRIB_V_ORDER_NV</NAME>
#define GL_MAP_ATTRIB_V_ORDER_NV          0x86C4
</MACRO>
<MACRO>
<NAME>GL_EVAL_FRACTIONAL_TESSELLATION_NV</NAME>
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB0_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB0_NV         0x86C6
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB1_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB1_NV         0x86C7
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB2_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB2_NV         0x86C8
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB3_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB3_NV         0x86C9
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB4_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB4_NV         0x86CA
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB5_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB5_NV         0x86CB
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB6_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB6_NV         0x86CC
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB7_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB7_NV         0x86CD
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB8_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB8_NV         0x86CE
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB9_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB9_NV         0x86CF
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB10_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB10_NV        0x86D0
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB11_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB11_NV        0x86D1
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB12_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB12_NV        0x86D2
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB13_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB13_NV        0x86D3
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB14_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB14_NV        0x86D4
</MACRO>
<MACRO>
<NAME>GL_EVAL_VERTEX_ATTRIB15_NV</NAME>
#define GL_EVAL_VERTEX_ATTRIB15_NV        0x86D5
</MACRO>
<MACRO>
<NAME>GL_MAX_MAP_TESSELLATION_NV</NAME>
#define GL_MAX_MAP_TESSELLATION_NV        0x86D6
</MACRO>
<MACRO>
<NAME>GL_MAX_RATIONAL_EVAL_ORDER_NV</NAME>
#define GL_MAX_RATIONAL_EVAL_ORDER_NV     0x86D7
</MACRO>
<MACRO>
<NAME>GL_DEPTH_STENCIL_NV</NAME>
#define GL_DEPTH_STENCIL_NV               0x84F9
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_24_8_NV</NAME>
#define GL_UNSIGNED_INT_24_8_NV           0x84FA
</MACRO>
<MACRO>
<NAME>GL_PER_STAGE_CONSTANTS_NV</NAME>
#define GL_PER_STAGE_CONSTANTS_NV         0x8535
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_RECTANGLE_NV</NAME>
#define GL_TEXTURE_RECTANGLE_NV           0x84F5
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BINDING_RECTANGLE_NV</NAME>
#define GL_TEXTURE_BINDING_RECTANGLE_NV   0x84F6
</MACRO>
<MACRO>
<NAME>GL_PROXY_TEXTURE_RECTANGLE_NV</NAME>
#define GL_PROXY_TEXTURE_RECTANGLE_NV     0x84F7
</MACRO>
<MACRO>
<NAME>GL_MAX_RECTANGLE_TEXTURE_SIZE_NV</NAME>
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV  0x84F8
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_RECTANGLE_NV</NAME>
#define GL_OFFSET_TEXTURE_RECTANGLE_NV    0x864C
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV</NAME>
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV</NAME>
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
</MACRO>
<MACRO>
<NAME>GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV</NAME>
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_S8_S8_8_8_NV</NAME>
#define GL_UNSIGNED_INT_S8_S8_8_8_NV      0x86DA
</MACRO>
<MACRO>
<NAME>GL_UNSIGNED_INT_8_8_S8_S8_REV_NV</NAME>
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV  0x86DB
</MACRO>
<MACRO>
<NAME>GL_DSDT_MAG_INTENSITY_NV</NAME>
#define GL_DSDT_MAG_INTENSITY_NV          0x86DC
</MACRO>
<MACRO>
<NAME>GL_SHADER_CONSISTENT_NV</NAME>
#define GL_SHADER_CONSISTENT_NV           0x86DD
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_SHADER_NV</NAME>
#define GL_TEXTURE_SHADER_NV              0x86DE
</MACRO>
<MACRO>
<NAME>GL_SHADER_OPERATION_NV</NAME>
#define GL_SHADER_OPERATION_NV            0x86DF
</MACRO>
<MACRO>
<NAME>GL_CULL_MODES_NV</NAME>
#define GL_CULL_MODES_NV                  0x86E0
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_MATRIX_NV</NAME>
#define GL_OFFSET_TEXTURE_MATRIX_NV       0x86E1
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_SCALE_NV</NAME>
#define GL_OFFSET_TEXTURE_SCALE_NV        0x86E2
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_BIAS_NV</NAME>
#define GL_OFFSET_TEXTURE_BIAS_NV         0x86E3
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_2D_MATRIX_NV</NAME>
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV    GL_OFFSET_TEXTURE_MATRIX_NV
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_2D_SCALE_NV</NAME>
#define GL_OFFSET_TEXTURE_2D_SCALE_NV     GL_OFFSET_TEXTURE_SCALE_NV
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_2D_BIAS_NV</NAME>
#define GL_OFFSET_TEXTURE_2D_BIAS_NV      GL_OFFSET_TEXTURE_BIAS_NV
</MACRO>
<MACRO>
<NAME>GL_PREVIOUS_TEXTURE_INPUT_NV</NAME>
#define GL_PREVIOUS_TEXTURE_INPUT_NV      0x86E4
</MACRO>
<MACRO>
<NAME>GL_CONST_EYE_NV</NAME>
#define GL_CONST_EYE_NV                   0x86E5
</MACRO>
<MACRO>
<NAME>GL_PASS_THROUGH_NV</NAME>
#define GL_PASS_THROUGH_NV                0x86E6
</MACRO>
<MACRO>
<NAME>GL_CULL_FRAGMENT_NV</NAME>
#define GL_CULL_FRAGMENT_NV               0x86E7
</MACRO>
<MACRO>
<NAME>GL_OFFSET_TEXTURE_2D_NV</NAME>
#define GL_OFFSET_TEXTURE_2D_NV           0x86E8
</MACRO>
<MACRO>
<NAME>GL_DEPENDENT_AR_TEXTURE_2D_NV</NAME>
#define GL_DEPENDENT_AR_TEXTURE_2D_NV     0x86E9
</MACRO>
<MACRO>
<NAME>GL_DEPENDENT_GB_TEXTURE_2D_NV</NAME>
#define GL_DEPENDENT_GB_TEXTURE_2D_NV     0x86EA
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_NV</NAME>
#define GL_DOT_PRODUCT_NV                 0x86EC
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_DEPTH_REPLACE_NV</NAME>
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV   0x86ED
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_TEXTURE_2D_NV</NAME>
#define GL_DOT_PRODUCT_TEXTURE_2D_NV      0x86EE
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV</NAME>
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV</NAME>
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV</NAME>
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV</NAME>
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
</MACRO>
<MACRO>
<NAME>GL_HILO_NV</NAME>
#define GL_HILO_NV                        0x86F4
</MACRO>
<MACRO>
<NAME>GL_DSDT_NV</NAME>
#define GL_DSDT_NV                        0x86F5
</MACRO>
<MACRO>
<NAME>GL_DSDT_MAG_NV</NAME>
#define GL_DSDT_MAG_NV                    0x86F6
</MACRO>
<MACRO>
<NAME>GL_DSDT_MAG_VIB_NV</NAME>
#define GL_DSDT_MAG_VIB_NV                0x86F7
</MACRO>
<MACRO>
<NAME>GL_HILO16_NV</NAME>
#define GL_HILO16_NV                      0x86F8
</MACRO>
<MACRO>
<NAME>GL_SIGNED_HILO_NV</NAME>
#define GL_SIGNED_HILO_NV                 0x86F9
</MACRO>
<MACRO>
<NAME>GL_SIGNED_HILO16_NV</NAME>
#define GL_SIGNED_HILO16_NV               0x86FA
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGBA_NV</NAME>
#define GL_SIGNED_RGBA_NV                 0x86FB
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGBA8_NV</NAME>
#define GL_SIGNED_RGBA8_NV                0x86FC
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGB_NV</NAME>
#define GL_SIGNED_RGB_NV                  0x86FE
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGB8_NV</NAME>
#define GL_SIGNED_RGB8_NV                 0x86FF
</MACRO>
<MACRO>
<NAME>GL_SIGNED_LUMINANCE_NV</NAME>
#define GL_SIGNED_LUMINANCE_NV            0x8701
</MACRO>
<MACRO>
<NAME>GL_SIGNED_LUMINANCE8_NV</NAME>
#define GL_SIGNED_LUMINANCE8_NV           0x8702
</MACRO>
<MACRO>
<NAME>GL_SIGNED_LUMINANCE_ALPHA_NV</NAME>
#define GL_SIGNED_LUMINANCE_ALPHA_NV      0x8703
</MACRO>
<MACRO>
<NAME>GL_SIGNED_LUMINANCE8_ALPHA8_NV</NAME>
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV    0x8704
</MACRO>
<MACRO>
<NAME>GL_SIGNED_ALPHA_NV</NAME>
#define GL_SIGNED_ALPHA_NV                0x8705
</MACRO>
<MACRO>
<NAME>GL_SIGNED_ALPHA8_NV</NAME>
#define GL_SIGNED_ALPHA8_NV               0x8706
</MACRO>
<MACRO>
<NAME>GL_SIGNED_INTENSITY_NV</NAME>
#define GL_SIGNED_INTENSITY_NV            0x8707
</MACRO>
<MACRO>
<NAME>GL_SIGNED_INTENSITY8_NV</NAME>
#define GL_SIGNED_INTENSITY8_NV           0x8708
</MACRO>
<MACRO>
<NAME>GL_DSDT8_NV</NAME>
#define GL_DSDT8_NV                       0x8709
</MACRO>
<MACRO>
<NAME>GL_DSDT8_MAG8_NV</NAME>
#define GL_DSDT8_MAG8_NV                  0x870A
</MACRO>
<MACRO>
<NAME>GL_DSDT8_MAG8_INTENSITY8_NV</NAME>
#define GL_DSDT8_MAG8_INTENSITY8_NV       0x870B
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGB_UNSIGNED_ALPHA_NV</NAME>
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV   0x870C
</MACRO>
<MACRO>
<NAME>GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV</NAME>
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
</MACRO>
<MACRO>
<NAME>GL_HI_SCALE_NV</NAME>
#define GL_HI_SCALE_NV                    0x870E
</MACRO>
<MACRO>
<NAME>GL_LO_SCALE_NV</NAME>
#define GL_LO_SCALE_NV                    0x870F
</MACRO>
<MACRO>
<NAME>GL_DS_SCALE_NV</NAME>
#define GL_DS_SCALE_NV                    0x8710
</MACRO>
<MACRO>
<NAME>GL_DT_SCALE_NV</NAME>
#define GL_DT_SCALE_NV                    0x8711
</MACRO>
<MACRO>
<NAME>GL_MAGNITUDE_SCALE_NV</NAME>
#define GL_MAGNITUDE_SCALE_NV             0x8712
</MACRO>
<MACRO>
<NAME>GL_VIBRANCE_SCALE_NV</NAME>
#define GL_VIBRANCE_SCALE_NV              0x8713
</MACRO>
<MACRO>
<NAME>GL_HI_BIAS_NV</NAME>
#define GL_HI_BIAS_NV                     0x8714
</MACRO>
<MACRO>
<NAME>GL_LO_BIAS_NV</NAME>
#define GL_LO_BIAS_NV                     0x8715
</MACRO>
<MACRO>
<NAME>GL_DS_BIAS_NV</NAME>
#define GL_DS_BIAS_NV                     0x8716
</MACRO>
<MACRO>
<NAME>GL_DT_BIAS_NV</NAME>
#define GL_DT_BIAS_NV                     0x8717
</MACRO>
<MACRO>
<NAME>GL_MAGNITUDE_BIAS_NV</NAME>
#define GL_MAGNITUDE_BIAS_NV              0x8718
</MACRO>
<MACRO>
<NAME>GL_VIBRANCE_BIAS_NV</NAME>
#define GL_VIBRANCE_BIAS_NV               0x8719
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_BORDER_VALUES_NV</NAME>
#define GL_TEXTURE_BORDER_VALUES_NV       0x871A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_HI_SIZE_NV</NAME>
#define GL_TEXTURE_HI_SIZE_NV             0x871B
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_LO_SIZE_NV</NAME>
#define GL_TEXTURE_LO_SIZE_NV             0x871C
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DS_SIZE_NV</NAME>
#define GL_TEXTURE_DS_SIZE_NV             0x871D
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_DT_SIZE_NV</NAME>
#define GL_TEXTURE_DT_SIZE_NV             0x871E
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAG_SIZE_NV</NAME>
#define GL_TEXTURE_MAG_SIZE_NV            0x871F
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_TEXTURE_3D_NV</NAME>
#define GL_DOT_PRODUCT_TEXTURE_3D_NV      0x86EF
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV</NAME>
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_NV</NAME>
#define GL_VERTEX_PROGRAM_NV              0x8620
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STATE_PROGRAM_NV</NAME>
#define GL_VERTEX_STATE_PROGRAM_NV        0x8621
</MACRO>
<MACRO>
<NAME>GL_ATTRIB_ARRAY_SIZE_NV</NAME>
#define GL_ATTRIB_ARRAY_SIZE_NV           0x8623
</MACRO>
<MACRO>
<NAME>GL_ATTRIB_ARRAY_STRIDE_NV</NAME>
#define GL_ATTRIB_ARRAY_STRIDE_NV         0x8624
</MACRO>
<MACRO>
<NAME>GL_ATTRIB_ARRAY_TYPE_NV</NAME>
#define GL_ATTRIB_ARRAY_TYPE_NV           0x8625
</MACRO>
<MACRO>
<NAME>GL_CURRENT_ATTRIB_NV</NAME>
#define GL_CURRENT_ATTRIB_NV              0x8626
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_LENGTH_NV</NAME>
#define GL_PROGRAM_LENGTH_NV              0x8627
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_STRING_NV</NAME>
#define GL_PROGRAM_STRING_NV              0x8628
</MACRO>
<MACRO>
<NAME>GL_MODELVIEW_PROJECTION_NV</NAME>
#define GL_MODELVIEW_PROJECTION_NV        0x8629
</MACRO>
<MACRO>
<NAME>GL_IDENTITY_NV</NAME>
#define GL_IDENTITY_NV                    0x862A
</MACRO>
<MACRO>
<NAME>GL_INVERSE_NV</NAME>
#define GL_INVERSE_NV                     0x862B
</MACRO>
<MACRO>
<NAME>GL_TRANSPOSE_NV</NAME>
#define GL_TRANSPOSE_NV                   0x862C
</MACRO>
<MACRO>
<NAME>GL_INVERSE_TRANSPOSE_NV</NAME>
#define GL_INVERSE_TRANSPOSE_NV           0x862D
</MACRO>
<MACRO>
<NAME>GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV</NAME>
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
</MACRO>
<MACRO>
<NAME>GL_MAX_TRACK_MATRICES_NV</NAME>
#define GL_MAX_TRACK_MATRICES_NV          0x862F
</MACRO>
<MACRO>
<NAME>GL_MATRIX0_NV</NAME>
#define GL_MATRIX0_NV                     0x8630
</MACRO>
<MACRO>
<NAME>GL_MATRIX1_NV</NAME>
#define GL_MATRIX1_NV                     0x8631
</MACRO>
<MACRO>
<NAME>GL_MATRIX2_NV</NAME>
#define GL_MATRIX2_NV                     0x8632
</MACRO>
<MACRO>
<NAME>GL_MATRIX3_NV</NAME>
#define GL_MATRIX3_NV                     0x8633
</MACRO>
<MACRO>
<NAME>GL_MATRIX4_NV</NAME>
#define GL_MATRIX4_NV                     0x8634
</MACRO>
<MACRO>
<NAME>GL_MATRIX5_NV</NAME>
#define GL_MATRIX5_NV                     0x8635
</MACRO>
<MACRO>
<NAME>GL_MATRIX6_NV</NAME>
#define GL_MATRIX6_NV                     0x8636
</MACRO>
<MACRO>
<NAME>GL_MATRIX7_NV</NAME>
#define GL_MATRIX7_NV                     0x8637
</MACRO>
<MACRO>
<NAME>GL_CURRENT_MATRIX_STACK_DEPTH_NV</NAME>
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV  0x8640
</MACRO>
<MACRO>
<NAME>GL_CURRENT_MATRIX_NV</NAME>
#define GL_CURRENT_MATRIX_NV              0x8641
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_POINT_SIZE_NV</NAME>
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV   0x8642
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_TWO_SIDE_NV</NAME>
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV     0x8643
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_PARAMETER_NV</NAME>
#define GL_PROGRAM_PARAMETER_NV           0x8644
</MACRO>
<MACRO>
<NAME>GL_ATTRIB_ARRAY_POINTER_NV</NAME>
#define GL_ATTRIB_ARRAY_POINTER_NV        0x8645
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_TARGET_NV</NAME>
#define GL_PROGRAM_TARGET_NV              0x8646
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_RESIDENT_NV</NAME>
#define GL_PROGRAM_RESIDENT_NV            0x8647
</MACRO>
<MACRO>
<NAME>GL_TRACK_MATRIX_NV</NAME>
#define GL_TRACK_MATRIX_NV                0x8648
</MACRO>
<MACRO>
<NAME>GL_TRACK_MATRIX_TRANSFORM_NV</NAME>
#define GL_TRACK_MATRIX_TRANSFORM_NV      0x8649
</MACRO>
<MACRO>
<NAME>GL_VERTEX_PROGRAM_BINDING_NV</NAME>
#define GL_VERTEX_PROGRAM_BINDING_NV      0x864A
</MACRO>
<MACRO>
<NAME>GL_PROGRAM_ERROR_POSITION_NV</NAME>
#define GL_PROGRAM_ERROR_POSITION_NV      0x864B
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY0_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY0_NV        0x8650
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY1_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY1_NV        0x8651
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY2_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY2_NV        0x8652
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY3_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY3_NV        0x8653
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY4_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY4_NV        0x8654
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY5_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY5_NV        0x8655
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY6_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY6_NV        0x8656
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY7_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY7_NV        0x8657
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY8_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY8_NV        0x8658
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY9_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY9_NV        0x8659
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY10_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY10_NV       0x865A
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY11_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY11_NV       0x865B
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY12_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY12_NV       0x865C
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY13_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY13_NV       0x865D
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY14_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY14_NV       0x865E
</MACRO>
<MACRO>
<NAME>GL_VERTEX_ATTRIB_ARRAY15_NV</NAME>
#define GL_VERTEX_ATTRIB_ARRAY15_NV       0x865F
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB0_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB0_4_NV       0x8660
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB1_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB1_4_NV       0x8661
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB2_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB2_4_NV       0x8662
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB3_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB3_4_NV       0x8663
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB4_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB4_4_NV       0x8664
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB5_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB5_4_NV       0x8665
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB6_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB6_4_NV       0x8666
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB7_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB7_4_NV       0x8667
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB8_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB8_4_NV       0x8668
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB9_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB9_4_NV       0x8669
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB10_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB10_4_NV      0x866A
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB11_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB11_4_NV      0x866B
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB12_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB12_4_NV      0x866C
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB13_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB13_4_NV      0x866D
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB14_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB14_4_NV      0x866E
</MACRO>
<MACRO>
<NAME>GL_MAP1_VERTEX_ATTRIB15_4_NV</NAME>
#define GL_MAP1_VERTEX_ATTRIB15_4_NV      0x866F
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB0_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB0_4_NV       0x8670
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB1_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB1_4_NV       0x8671
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB2_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB2_4_NV       0x8672
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB3_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB3_4_NV       0x8673
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB4_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB4_4_NV       0x8674
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB5_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB5_4_NV       0x8675
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB6_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB6_4_NV       0x8676
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB7_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB7_4_NV       0x8677
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB8_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB8_4_NV       0x8678
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB9_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB9_4_NV       0x8679
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB10_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB10_4_NV      0x867A
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB11_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB11_4_NV      0x867B
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB12_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB12_4_NV      0x867C
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB13_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB13_4_NV      0x867D
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB14_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB14_4_NV      0x867E
</MACRO>
<MACRO>
<NAME>GL_MAP2_VERTEX_ATTRIB15_4_NV</NAME>
#define GL_MAP2_VERTEX_ATTRIB15_4_NV      0x867F
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_CLAMP_S_SGIX</NAME>
#define GL_TEXTURE_MAX_CLAMP_S_SGIX       0x8369
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_CLAMP_T_SGIX</NAME>
#define GL_TEXTURE_MAX_CLAMP_T_SGIX       0x836A
</MACRO>
<MACRO>
<NAME>GL_TEXTURE_MAX_CLAMP_R_SGIX</NAME>
#define GL_TEXTURE_MAX_CLAMP_R_SGIX       0x836B
</MACRO>
<MACRO>
<NAME>GL_SCALEBIAS_HINT_SGIX</NAME>
#define GL_SCALEBIAS_HINT_SGIX            0x8322
</MACRO>
<MACRO>
<NAME>GL_INTERLACE_OML</NAME>
#define GL_INTERLACE_OML                  0x8980
</MACRO>
<MACRO>
<NAME>GL_INTERLACE_READ_OML</NAME>
#define GL_INTERLACE_READ_OML             0x8981
</MACRO>
<MACRO>
<NAME>GL_FORMAT_SUBSAMPLE_24_24_OML</NAME>
#define GL_FORMAT_SUBSAMPLE_24_24_OML     0x8982
</MACRO>
<MACRO>
<NAME>GL_FORMAT_SUBSAMPLE_244_244_OML</NAME>
#define GL_FORMAT_SUBSAMPLE_244_244_OML   0x8983
</MACRO>
<MACRO>
<NAME>GL_PACK_RESAMPLE_OML</NAME>
#define GL_PACK_RESAMPLE_OML              0x8984
</MACRO>
<MACRO>
<NAME>GL_UNPACK_RESAMPLE_OML</NAME>
#define GL_UNPACK_RESAMPLE_OML            0x8985
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_REPLICATE_OML</NAME>
#define GL_RESAMPLE_REPLICATE_OML         0x8986
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_ZERO_FILL_OML</NAME>
#define GL_RESAMPLE_ZERO_FILL_OML         0x8987
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_AVERAGE_OML</NAME>
#define GL_RESAMPLE_AVERAGE_OML           0x8988
</MACRO>
<MACRO>
<NAME>GL_RESAMPLE_DECIMATE_OML</NAME>
#define GL_RESAMPLE_DECIMATE_OML          0x8989
</MACRO>
<MACRO>
<NAME>GL_DEPTH_STENCIL_TO_RGBA_NV</NAME>
#define GL_DEPTH_STENCIL_TO_RGBA_NV       0x886E
</MACRO>
<MACRO>
<NAME>GL_DEPTH_STENCIL_TO_BGRA_NV</NAME>
#define GL_DEPTH_STENCIL_TO_BGRA_NV       0x886F
</MACRO>
<MACRO>
<NAME>GL_BUMP_ROT_MATRIX_ATI</NAME>
#define GL_BUMP_ROT_MATRIX_ATI            0x8775
</MACRO>
<MACRO>
<NAME>GL_BUMP_ROT_MATRIX_SIZE_ATI</NAME>
#define GL_BUMP_ROT_MATRIX_SIZE_ATI       0x8776
</MACRO>
<MACRO>
<NAME>GL_BUMP_NUM_TEX_UNITS_ATI</NAME>
#define GL_BUMP_NUM_TEX_UNITS_ATI         0x8777
</MACRO>
<MACRO>
<NAME>GL_BUMP_TEX_UNITS_ATI</NAME>
#define GL_BUMP_TEX_UNITS_ATI             0x8778
</MACRO>
<MACRO>
<NAME>GL_DUDV_ATI</NAME>
#define GL_DUDV_ATI                       0x8779
</MACRO>
<MACRO>
<NAME>GL_DU8DV8_ATI</NAME>
#define GL_DU8DV8_ATI                     0x877A
</MACRO>
<MACRO>
<NAME>GL_BUMP_ENVMAP_ATI</NAME>
#define GL_BUMP_ENVMAP_ATI                0x877B
</MACRO>
<MACRO>
<NAME>GL_BUMP_TARGET_ATI</NAME>
#define GL_BUMP_TARGET_ATI                0x877C
</MACRO>
<MACRO>
<NAME>GL_FRAGMENT_SHADER_ATI</NAME>
#define GL_FRAGMENT_SHADER_ATI            0x8920
</MACRO>
<MACRO>
<NAME>GL_REG_0_ATI</NAME>
#define GL_REG_0_ATI                      0x8921
</MACRO>
<MACRO>
<NAME>GL_REG_1_ATI</NAME>
#define GL_REG_1_ATI                      0x8922
</MACRO>
<MACRO>
<NAME>GL_REG_2_ATI</NAME>
#define GL_REG_2_ATI                      0x8923
</MACRO>
<MACRO>
<NAME>GL_REG_3_ATI</NAME>
#define GL_REG_3_ATI                      0x8924
</MACRO>
<MACRO>
<NAME>GL_REG_4_ATI</NAME>
#define GL_REG_4_ATI                      0x8925
</MACRO>
<MACRO>
<NAME>GL_REG_5_ATI</NAME>
#define GL_REG_5_ATI                      0x8926
</MACRO>
<MACRO>
<NAME>GL_REG_6_ATI</NAME>
#define GL_REG_6_ATI                      0x8927
</MACRO>
<MACRO>
<NAME>GL_REG_7_ATI</NAME>
#define GL_REG_7_ATI                      0x8928
</MACRO>
<MACRO>
<NAME>GL_REG_8_ATI</NAME>
#define GL_REG_8_ATI                      0x8929
</MACRO>
<MACRO>
<NAME>GL_REG_9_ATI</NAME>
#define GL_REG_9_ATI                      0x892A
</MACRO>
<MACRO>
<NAME>GL_REG_10_ATI</NAME>
#define GL_REG_10_ATI                     0x892B
</MACRO>
<MACRO>
<NAME>GL_REG_11_ATI</NAME>
#define GL_REG_11_ATI                     0x892C
</MACRO>
<MACRO>
<NAME>GL_REG_12_ATI</NAME>
#define GL_REG_12_ATI                     0x892D
</MACRO>
<MACRO>
<NAME>GL_REG_13_ATI</NAME>
#define GL_REG_13_ATI                     0x892E
</MACRO>
<MACRO>
<NAME>GL_REG_14_ATI</NAME>
#define GL_REG_14_ATI                     0x892F
</MACRO>
<MACRO>
<NAME>GL_REG_15_ATI</NAME>
#define GL_REG_15_ATI                     0x8930
</MACRO>
<MACRO>
<NAME>GL_REG_16_ATI</NAME>
#define GL_REG_16_ATI                     0x8931
</MACRO>
<MACRO>
<NAME>GL_REG_17_ATI</NAME>
#define GL_REG_17_ATI                     0x8932
</MACRO>
<MACRO>
<NAME>GL_REG_18_ATI</NAME>
#define GL_REG_18_ATI                     0x8933
</MACRO>
<MACRO>
<NAME>GL_REG_19_ATI</NAME>
#define GL_REG_19_ATI                     0x8934
</MACRO>
<MACRO>
<NAME>GL_REG_20_ATI</NAME>
#define GL_REG_20_ATI                     0x8935
</MACRO>
<MACRO>
<NAME>GL_REG_21_ATI</NAME>
#define GL_REG_21_ATI                     0x8936
</MACRO>
<MACRO>
<NAME>GL_REG_22_ATI</NAME>
#define GL_REG_22_ATI                     0x8937
</MACRO>
<MACRO>
<NAME>GL_REG_23_ATI</NAME>
#define GL_REG_23_ATI                     0x8938
</MACRO>
<MACRO>
<NAME>GL_REG_24_ATI</NAME>
#define GL_REG_24_ATI                     0x8939
</MACRO>
<MACRO>
<NAME>GL_REG_25_ATI</NAME>
#define GL_REG_25_ATI                     0x893A
</MACRO>
<MACRO>
<NAME>GL_REG_26_ATI</NAME>
#define GL_REG_26_ATI                     0x893B
</MACRO>
<MACRO>
<NAME>GL_REG_27_ATI</NAME>
#define GL_REG_27_ATI                     0x893C
</MACRO>
<MACRO>
<NAME>GL_REG_28_ATI</NAME>
#define GL_REG_28_ATI                     0x893D
</MACRO>
<MACRO>
<NAME>GL_REG_29_ATI</NAME>
#define GL_REG_29_ATI                     0x893E
</MACRO>
<MACRO>
<NAME>GL_REG_30_ATI</NAME>
#define GL_REG_30_ATI                     0x893F
</MACRO>
<MACRO>
<NAME>GL_REG_31_ATI</NAME>
#define GL_REG_31_ATI                     0x8940
</MACRO>
<MACRO>
<NAME>GL_CON_0_ATI</NAME>
#define GL_CON_0_ATI                      0x8941
</MACRO>
<MACRO>
<NAME>GL_CON_1_ATI</NAME>
#define GL_CON_1_ATI                      0x8942
</MACRO>
<MACRO>
<NAME>GL_CON_2_ATI</NAME>
#define GL_CON_2_ATI                      0x8943
</MACRO>
<MACRO>
<NAME>GL_CON_3_ATI</NAME>
#define GL_CON_3_ATI                      0x8944
</MACRO>
<MACRO>
<NAME>GL_CON_4_ATI</NAME>
#define GL_CON_4_ATI                      0x8945
</MACRO>
<MACRO>
<NAME>GL_CON_5_ATI</NAME>
#define GL_CON_5_ATI                      0x8946
</MACRO>
<MACRO>
<NAME>GL_CON_6_ATI</NAME>
#define GL_CON_6_ATI                      0x8947
</MACRO>
<MACRO>
<NAME>GL_CON_7_ATI</NAME>
#define GL_CON_7_ATI                      0x8948
</MACRO>
<MACRO>
<NAME>GL_CON_8_ATI</NAME>
#define GL_CON_8_ATI                      0x8949
</MACRO>
<MACRO>
<NAME>GL_CON_9_ATI</NAME>
#define GL_CON_9_ATI                      0x894A
</MACRO>
<MACRO>
<NAME>GL_CON_10_ATI</NAME>
#define GL_CON_10_ATI                     0x894B
</MACRO>
<MACRO>
<NAME>GL_CON_11_ATI</NAME>
#define GL_CON_11_ATI                     0x894C
</MACRO>
<MACRO>
<NAME>GL_CON_12_ATI</NAME>
#define GL_CON_12_ATI                     0x894D
</MACRO>
<MACRO>
<NAME>GL_CON_13_ATI</NAME>
#define GL_CON_13_ATI                     0x894E
</MACRO>
<MACRO>
<NAME>GL_CON_14_ATI</NAME>
#define GL_CON_14_ATI                     0x894F
</MACRO>
<MACRO>
<NAME>GL_CON_15_ATI</NAME>
#define GL_CON_15_ATI                     0x8950
</MACRO>
<MACRO>
<NAME>GL_CON_16_ATI</NAME>
#define GL_CON_16_ATI                     0x8951
</MACRO>
<MACRO>
<NAME>GL_CON_17_ATI</NAME>
#define GL_CON_17_ATI                     0x8952
</MACRO>
<MACRO>
<NAME>GL_CON_18_ATI</NAME>
#define GL_CON_18_ATI                     0x8953
</MACRO>
<MACRO>
<NAME>GL_CON_19_ATI</NAME>
#define GL_CON_19_ATI                     0x8954
</MACRO>
<MACRO>
<NAME>GL_CON_20_ATI</NAME>
#define GL_CON_20_ATI                     0x8955
</MACRO>
<MACRO>
<NAME>GL_CON_21_ATI</NAME>
#define GL_CON_21_ATI                     0x8956
</MACRO>
<MACRO>
<NAME>GL_CON_22_ATI</NAME>
#define GL_CON_22_ATI                     0x8957
</MACRO>
<MACRO>
<NAME>GL_CON_23_ATI</NAME>
#define GL_CON_23_ATI                     0x8958
</MACRO>
<MACRO>
<NAME>GL_CON_24_ATI</NAME>
#define GL_CON_24_ATI                     0x8959
</MACRO>
<MACRO>
<NAME>GL_CON_25_ATI</NAME>
#define GL_CON_25_ATI                     0x895A
</MACRO>
<MACRO>
<NAME>GL_CON_26_ATI</NAME>
#define GL_CON_26_ATI                     0x895B
</MACRO>
<MACRO>
<NAME>GL_CON_27_ATI</NAME>
#define GL_CON_27_ATI                     0x895C
</MACRO>
<MACRO>
<NAME>GL_CON_28_ATI</NAME>
#define GL_CON_28_ATI                     0x895D
</MACRO>
<MACRO>
<NAME>GL_CON_29_ATI</NAME>
#define GL_CON_29_ATI                     0x895E
</MACRO>
<MACRO>
<NAME>GL_CON_30_ATI</NAME>
#define GL_CON_30_ATI                     0x895F
</MACRO>
<MACRO>
<NAME>GL_CON_31_ATI</NAME>
#define GL_CON_31_ATI                     0x8960
</MACRO>
<MACRO>
<NAME>GL_MOV_ATI</NAME>
#define GL_MOV_ATI                        0x8961
</MACRO>
<MACRO>
<NAME>GL_ADD_ATI</NAME>
#define GL_ADD_ATI                        0x8963
</MACRO>
<MACRO>
<NAME>GL_MUL_ATI</NAME>
#define GL_MUL_ATI                        0x8964
</MACRO>
<MACRO>
<NAME>GL_SUB_ATI</NAME>
#define GL_SUB_ATI                        0x8965
</MACRO>
<MACRO>
<NAME>GL_DOT3_ATI</NAME>
#define GL_DOT3_ATI                       0x8966
</MACRO>
<MACRO>
<NAME>GL_DOT4_ATI</NAME>
#define GL_DOT4_ATI                       0x8967
</MACRO>
<MACRO>
<NAME>GL_MAD_ATI</NAME>
#define GL_MAD_ATI                        0x8968
</MACRO>
<MACRO>
<NAME>GL_LERP_ATI</NAME>
#define GL_LERP_ATI                       0x8969
</MACRO>
<MACRO>
<NAME>GL_CND_ATI</NAME>
#define GL_CND_ATI                        0x896A
</MACRO>
<MACRO>
<NAME>GL_CND0_ATI</NAME>
#define GL_CND0_ATI                       0x896B
</MACRO>
<MACRO>
<NAME>GL_DOT2_ADD_ATI</NAME>
#define GL_DOT2_ADD_ATI                   0x896C
</MACRO>
<MACRO>
<NAME>GL_SECONDARY_INTERPOLATOR_ATI</NAME>
#define GL_SECONDARY_INTERPOLATOR_ATI     0x896D
</MACRO>
<MACRO>
<NAME>GL_NUM_FRAGMENT_REGISTERS_ATI</NAME>
#define GL_NUM_FRAGMENT_REGISTERS_ATI     0x896E
</MACRO>
<MACRO>
<NAME>GL_NUM_FRAGMENT_CONSTANTS_ATI</NAME>
#define GL_NUM_FRAGMENT_CONSTANTS_ATI     0x896F
</MACRO>
<MACRO>
<NAME>GL_NUM_PASSES_ATI</NAME>
#define GL_NUM_PASSES_ATI                 0x8970
</MACRO>
<MACRO>
<NAME>GL_NUM_INSTRUCTIONS_PER_PASS_ATI</NAME>
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI  0x8971
</MACRO>
<MACRO>
<NAME>GL_NUM_INSTRUCTIONS_TOTAL_ATI</NAME>
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI     0x8972
</MACRO>
<MACRO>
<NAME>GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI</NAME>
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
</MACRO>
<MACRO>
<NAME>GL_NUM_LOOPBACK_COMPONENTS_ATI</NAME>
#define GL_NUM_LOOPBACK_COMPONENTS_ATI    0x8974
</MACRO>
<MACRO>
<NAME>GL_COLOR_ALPHA_PAIRING_ATI</NAME>
#define GL_COLOR_ALPHA_PAIRING_ATI        0x8975
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STR_ATI</NAME>
#define GL_SWIZZLE_STR_ATI                0x8976
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STQ_ATI</NAME>
#define GL_SWIZZLE_STQ_ATI                0x8977
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STR_DR_ATI</NAME>
#define GL_SWIZZLE_STR_DR_ATI             0x8978
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STQ_DQ_ATI</NAME>
#define GL_SWIZZLE_STQ_DQ_ATI             0x8979
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STRQ_ATI</NAME>
#define GL_SWIZZLE_STRQ_ATI               0x897A
</MACRO>
<MACRO>
<NAME>GL_SWIZZLE_STRQ_DQ_ATI</NAME>
#define GL_SWIZZLE_STRQ_DQ_ATI            0x897B
</MACRO>
<MACRO>
<NAME>GL_RED_BIT_ATI</NAME>
#define GL_RED_BIT_ATI                    0x00000001
</MACRO>
<MACRO>
<NAME>GL_GREEN_BIT_ATI</NAME>
#define GL_GREEN_BIT_ATI                  0x00000002
</MACRO>
<MACRO>
<NAME>GL_BLUE_BIT_ATI</NAME>
#define GL_BLUE_BIT_ATI                   0x00000004
</MACRO>
<MACRO>
<NAME>GL_2X_BIT_ATI</NAME>
#define GL_2X_BIT_ATI                     0x00000001
</MACRO>
<MACRO>
<NAME>GL_4X_BIT_ATI</NAME>
#define GL_4X_BIT_ATI                     0x00000002
</MACRO>
<MACRO>
<NAME>GL_8X_BIT_ATI</NAME>
#define GL_8X_BIT_ATI                     0x00000004
</MACRO>
<MACRO>
<NAME>GL_HALF_BIT_ATI</NAME>
#define GL_HALF_BIT_ATI                   0x00000008
</MACRO>
<MACRO>
<NAME>GL_QUARTER_BIT_ATI</NAME>
#define GL_QUARTER_BIT_ATI                0x00000010
</MACRO>
<MACRO>
<NAME>GL_EIGHTH_BIT_ATI</NAME>
#define GL_EIGHTH_BIT_ATI                 0x00000020
</MACRO>
<MACRO>
<NAME>GL_SATURATE_BIT_ATI</NAME>
#define GL_SATURATE_BIT_ATI               0x00000040
</MACRO>
<MACRO>
<NAME>GL_COMP_BIT_ATI</NAME>
#define GL_COMP_BIT_ATI                   0x00000002
</MACRO>
<MACRO>
<NAME>GL_NEGATE_BIT_ATI</NAME>
#define GL_NEGATE_BIT_ATI                 0x00000004
</MACRO>
<MACRO>
<NAME>GL_BIAS_BIT_ATI</NAME>
#define GL_BIAS_BIT_ATI                   0x00000008
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_ATI</NAME>
#define GL_PN_TRIANGLES_ATI               0x87F0
</MACRO>
<MACRO>
<NAME>GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI</NAME>
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_POINT_MODE_ATI</NAME>
#define GL_PN_TRIANGLES_POINT_MODE_ATI    0x87F2
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_NORMAL_MODE_ATI</NAME>
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI   0x87F3
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI</NAME>
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI</NAME>
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI</NAME>
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI</NAME>
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
</MACRO>
<MACRO>
<NAME>GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI</NAME>
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
</MACRO>
<MACRO>
<NAME>GL_STATIC_ATI</NAME>
#define GL_STATIC_ATI                     0x8760
</MACRO>
<MACRO>
<NAME>GL_DYNAMIC_ATI</NAME>
#define GL_DYNAMIC_ATI                    0x8761
</MACRO>
<MACRO>
<NAME>GL_PRESERVE_ATI</NAME>
#define GL_PRESERVE_ATI                   0x8762
</MACRO>
<MACRO>
<NAME>GL_DISCARD_ATI</NAME>
#define GL_DISCARD_ATI                    0x8763
</MACRO>
<MACRO>
<NAME>GL_OBJECT_BUFFER_SIZE_ATI</NAME>
#define GL_OBJECT_BUFFER_SIZE_ATI         0x8764
</MACRO>
<MACRO>
<NAME>GL_OBJECT_BUFFER_USAGE_ATI</NAME>
#define GL_OBJECT_BUFFER_USAGE_ATI        0x8765
</MACRO>
<MACRO>
<NAME>GL_ARRAY_OBJECT_BUFFER_ATI</NAME>
#define GL_ARRAY_OBJECT_BUFFER_ATI        0x8766
</MACRO>
<MACRO>
<NAME>GL_ARRAY_OBJECT_OFFSET_ATI</NAME>
#define GL_ARRAY_OBJECT_OFFSET_ATI        0x8767
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_EXT</NAME>
#define GL_VERTEX_SHADER_EXT              0x8780
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_BINDING_EXT</NAME>
#define GL_VERTEX_SHADER_BINDING_EXT      0x8781
</MACRO>
<MACRO>
<NAME>GL_OP_INDEX_EXT</NAME>
#define GL_OP_INDEX_EXT                   0x8782
</MACRO>
<MACRO>
<NAME>GL_OP_NEGATE_EXT</NAME>
#define GL_OP_NEGATE_EXT                  0x8783
</MACRO>
<MACRO>
<NAME>GL_OP_DOT3_EXT</NAME>
#define GL_OP_DOT3_EXT                    0x8784
</MACRO>
<MACRO>
<NAME>GL_OP_DOT4_EXT</NAME>
#define GL_OP_DOT4_EXT                    0x8785
</MACRO>
<MACRO>
<NAME>GL_OP_MUL_EXT</NAME>
#define GL_OP_MUL_EXT                     0x8786
</MACRO>
<MACRO>
<NAME>GL_OP_ADD_EXT</NAME>
#define GL_OP_ADD_EXT                     0x8787
</MACRO>
<MACRO>
<NAME>GL_OP_MADD_EXT</NAME>
#define GL_OP_MADD_EXT                    0x8788
</MACRO>
<MACRO>
<NAME>GL_OP_FRAC_EXT</NAME>
#define GL_OP_FRAC_EXT                    0x8789
</MACRO>
<MACRO>
<NAME>GL_OP_MAX_EXT</NAME>
#define GL_OP_MAX_EXT                     0x878A
</MACRO>
<MACRO>
<NAME>GL_OP_MIN_EXT</NAME>
#define GL_OP_MIN_EXT                     0x878B
</MACRO>
<MACRO>
<NAME>GL_OP_SET_GE_EXT</NAME>
#define GL_OP_SET_GE_EXT                  0x878C
</MACRO>
<MACRO>
<NAME>GL_OP_SET_LT_EXT</NAME>
#define GL_OP_SET_LT_EXT                  0x878D
</MACRO>
<MACRO>
<NAME>GL_OP_CLAMP_EXT</NAME>
#define GL_OP_CLAMP_EXT                   0x878E
</MACRO>
<MACRO>
<NAME>GL_OP_FLOOR_EXT</NAME>
#define GL_OP_FLOOR_EXT                   0x878F
</MACRO>
<MACRO>
<NAME>GL_OP_ROUND_EXT</NAME>
#define GL_OP_ROUND_EXT                   0x8790
</MACRO>
<MACRO>
<NAME>GL_OP_EXP_BASE_2_EXT</NAME>
#define GL_OP_EXP_BASE_2_EXT              0x8791
</MACRO>
<MACRO>
<NAME>GL_OP_LOG_BASE_2_EXT</NAME>
#define GL_OP_LOG_BASE_2_EXT              0x8792
</MACRO>
<MACRO>
<NAME>GL_OP_POWER_EXT</NAME>
#define GL_OP_POWER_EXT                   0x8793
</MACRO>
<MACRO>
<NAME>GL_OP_RECIP_EXT</NAME>
#define GL_OP_RECIP_EXT                   0x8794
</MACRO>
<MACRO>
<NAME>GL_OP_RECIP_SQRT_EXT</NAME>
#define GL_OP_RECIP_SQRT_EXT              0x8795
</MACRO>
<MACRO>
<NAME>GL_OP_SUB_EXT</NAME>
#define GL_OP_SUB_EXT                     0x8796
</MACRO>
<MACRO>
<NAME>GL_OP_CROSS_PRODUCT_EXT</NAME>
#define GL_OP_CROSS_PRODUCT_EXT           0x8797
</MACRO>
<MACRO>
<NAME>GL_OP_MULTIPLY_MATRIX_EXT</NAME>
#define GL_OP_MULTIPLY_MATRIX_EXT         0x8798
</MACRO>
<MACRO>
<NAME>GL_OP_MOV_EXT</NAME>
#define GL_OP_MOV_EXT                     0x8799
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_VERTEX_EXT</NAME>
#define GL_OUTPUT_VERTEX_EXT              0x879A
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_COLOR0_EXT</NAME>
#define GL_OUTPUT_COLOR0_EXT              0x879B
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_COLOR1_EXT</NAME>
#define GL_OUTPUT_COLOR1_EXT              0x879C
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD0_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD0_EXT      0x879D
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD1_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD1_EXT      0x879E
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD2_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD2_EXT      0x879F
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD3_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD3_EXT      0x87A0
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD4_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD4_EXT      0x87A1
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD5_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD5_EXT      0x87A2
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD6_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD6_EXT      0x87A3
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD7_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD7_EXT      0x87A4
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD8_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD8_EXT      0x87A5
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD9_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD9_EXT      0x87A6
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD10_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD10_EXT     0x87A7
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD11_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD11_EXT     0x87A8
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD12_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD12_EXT     0x87A9
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD13_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD13_EXT     0x87AA
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD14_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD14_EXT     0x87AB
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD15_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD15_EXT     0x87AC
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD16_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD16_EXT     0x87AD
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD17_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD17_EXT     0x87AE
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD18_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD18_EXT     0x87AF
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD19_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD19_EXT     0x87B0
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD20_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD20_EXT     0x87B1
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD21_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD21_EXT     0x87B2
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD22_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD22_EXT     0x87B3
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD23_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD23_EXT     0x87B4
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD24_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD24_EXT     0x87B5
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD25_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD25_EXT     0x87B6
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD26_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD26_EXT     0x87B7
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD27_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD27_EXT     0x87B8
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD28_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD28_EXT     0x87B9
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD29_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD29_EXT     0x87BA
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD30_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD30_EXT     0x87BB
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_TEXTURE_COORD31_EXT</NAME>
#define GL_OUTPUT_TEXTURE_COORD31_EXT     0x87BC
</MACRO>
<MACRO>
<NAME>GL_OUTPUT_FOG_EXT</NAME>
#define GL_OUTPUT_FOG_EXT                 0x87BD
</MACRO>
<MACRO>
<NAME>GL_SCALAR_EXT</NAME>
#define GL_SCALAR_EXT                     0x87BE
</MACRO>
<MACRO>
<NAME>GL_VECTOR_EXT</NAME>
#define GL_VECTOR_EXT                     0x87BF
</MACRO>
<MACRO>
<NAME>GL_MATRIX_EXT</NAME>
#define GL_MATRIX_EXT                     0x87C0
</MACRO>
<MACRO>
<NAME>GL_VARIANT_EXT</NAME>
#define GL_VARIANT_EXT                    0x87C1
</MACRO>
<MACRO>
<NAME>GL_INVARIANT_EXT</NAME>
#define GL_INVARIANT_EXT                  0x87C2
</MACRO>
<MACRO>
<NAME>GL_LOCAL_CONSTANT_EXT</NAME>
#define GL_LOCAL_CONSTANT_EXT             0x87C3
</MACRO>
<MACRO>
<NAME>GL_LOCAL_EXT</NAME>
#define GL_LOCAL_EXT                      0x87C4
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT</NAME>
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_SHADER_VARIANTS_EXT</NAME>
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_SHADER_INVARIANTS_EXT</NAME>
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT</NAME>
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_SHADER_LOCALS_EXT</NAME>
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT   0x87C9
</MACRO>
<MACRO>
<NAME>GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT</NAME>
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
</MACRO>
<MACRO>
<NAME>GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT</NAME>
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
</MACRO>
<MACRO>
<NAME>GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT</NAME>
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
</MACRO>
<MACRO>
<NAME>GL_MAX_OPTIMIZED_VERTEX_SHADER_INARIANTS_EXT</NAME>
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INARIANTS_EXT 0x87CD
</MACRO>
<MACRO>
<NAME>GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT</NAME>
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_INSTRUCTIONS_EXT</NAME>
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_VARIANTS_EXT</NAME>
#define GL_VERTEX_SHADER_VARIANTS_EXT     0x87D0
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_INVARIANTS_EXT</NAME>
#define GL_VERTEX_SHADER_INVARIANTS_EXT   0x87D1
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT</NAME>
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_LOCALS_EXT</NAME>
#define GL_VERTEX_SHADER_LOCALS_EXT       0x87D3
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SHADER_OPTIMIZED_EXT</NAME>
#define GL_VERTEX_SHADER_OPTIMIZED_EXT    0x87D4
</MACRO>
<MACRO>
<NAME>GL_X_EXT</NAME>
#define GL_X_EXT                          0x87D5
</MACRO>
<MACRO>
<NAME>GL_Y_EXT</NAME>
#define GL_Y_EXT                          0x87D6
</MACRO>
<MACRO>
<NAME>GL_Z_EXT</NAME>
#define GL_Z_EXT                          0x87D7
</MACRO>
<MACRO>
<NAME>GL_W_EXT</NAME>
#define GL_W_EXT                          0x87D8
</MACRO>
<MACRO>
<NAME>GL_NEGATIVE_X_EXT</NAME>
#define GL_NEGATIVE_X_EXT                 0x87D9
</MACRO>
<MACRO>
<NAME>GL_NEGATIVE_Y_EXT</NAME>
#define GL_NEGATIVE_Y_EXT                 0x87DA
</MACRO>
<MACRO>
<NAME>GL_NEGATIVE_Z_EXT</NAME>
#define GL_NEGATIVE_Z_EXT                 0x87DB
</MACRO>
<MACRO>
<NAME>GL_NEGATIVE_W_EXT</NAME>
#define GL_NEGATIVE_W_EXT                 0x87DC
</MACRO>
<MACRO>
<NAME>GL_ZERO_EXT</NAME>
#define GL_ZERO_EXT                       0x87DD
</MACRO>
<MACRO>
<NAME>GL_ONE_EXT</NAME>
#define GL_ONE_EXT                        0x87DE
</MACRO>
<MACRO>
<NAME>GL_NEGATIVE_ONE_EXT</NAME>
#define GL_NEGATIVE_ONE_EXT               0x87DF
</MACRO>
<MACRO>
<NAME>GL_NORMALIZED_RANGE_EXT</NAME>
#define GL_NORMALIZED_RANGE_EXT           0x87E0
</MACRO>
<MACRO>
<NAME>GL_FULL_RANGE_EXT</NAME>
#define GL_FULL_RANGE_EXT                 0x87E1
</MACRO>
<MACRO>
<NAME>GL_CURRENT_VERTEX_EXT</NAME>
#define GL_CURRENT_VERTEX_EXT             0x87E2
</MACRO>
<MACRO>
<NAME>GL_MVP_MATRIX_EXT</NAME>
#define GL_MVP_MATRIX_EXT                 0x87E3
</MACRO>
<MACRO>
<NAME>GL_VARIANT_VALUE_EXT</NAME>
#define GL_VARIANT_VALUE_EXT              0x87E4
</MACRO>
<MACRO>
<NAME>GL_VARIANT_DATATYPE_EXT</NAME>
#define GL_VARIANT_DATATYPE_EXT           0x87E5
</MACRO>
<MACRO>
<NAME>GL_VARIANT_ARRAY_STRIDE_EXT</NAME>
#define GL_VARIANT_ARRAY_STRIDE_EXT       0x87E6
</MACRO>
<MACRO>
<NAME>GL_VARIANT_ARRAY_TYPE_EXT</NAME>
#define GL_VARIANT_ARRAY_TYPE_EXT         0x87E7
</MACRO>
<MACRO>
<NAME>GL_VARIANT_ARRAY_EXT</NAME>
#define GL_VARIANT_ARRAY_EXT              0x87E8
</MACRO>
<MACRO>
<NAME>GL_VARIANT_ARRAY_POINTER_EXT</NAME>
#define GL_VARIANT_ARRAY_POINTER_EXT      0x87E9
</MACRO>
<MACRO>
<NAME>GL_INVARIANT_VALUE_EXT</NAME>
#define GL_INVARIANT_VALUE_EXT            0x87EA
</MACRO>
<MACRO>
<NAME>GL_INVARIANT_DATATYPE_EXT</NAME>
#define GL_INVARIANT_DATATYPE_EXT         0x87EB
</MACRO>
<MACRO>
<NAME>GL_LOCAL_CONSTANT_VALUE_EXT</NAME>
#define GL_LOCAL_CONSTANT_VALUE_EXT       0x87EC
</MACRO>
<MACRO>
<NAME>GL_LOCAL_CONSTANT_DATATYPE_EXT</NAME>
#define GL_LOCAL_CONSTANT_DATATYPE_EXT    0x87ED
</MACRO>
<MACRO>
<NAME>GL_MAX_VERTEX_STREAMS_ATI</NAME>
#define GL_MAX_VERTEX_STREAMS_ATI         0x876B
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM0_ATI</NAME>
#define GL_VERTEX_STREAM0_ATI             0x876C
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM1_ATI</NAME>
#define GL_VERTEX_STREAM1_ATI             0x876D
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM2_ATI</NAME>
#define GL_VERTEX_STREAM2_ATI             0x876E
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM3_ATI</NAME>
#define GL_VERTEX_STREAM3_ATI             0x876F
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM4_ATI</NAME>
#define GL_VERTEX_STREAM4_ATI             0x8770
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM5_ATI</NAME>
#define GL_VERTEX_STREAM5_ATI             0x8771
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM6_ATI</NAME>
#define GL_VERTEX_STREAM6_ATI             0x8772
</MACRO>
<MACRO>
<NAME>GL_VERTEX_STREAM7_ATI</NAME>
#define GL_VERTEX_STREAM7_ATI             0x8773
</MACRO>
<MACRO>
<NAME>GL_VERTEX_SOURCE_ATI</NAME>
#define GL_VERTEX_SOURCE_ATI              0x8774
</MACRO>
<MACRO>
<NAME>GL_ELEMENT_ARRAY_ATI</NAME>
#define GL_ELEMENT_ARRAY_ATI              0x8768
</MACRO>
<MACRO>
<NAME>GL_ELEMENT_ARRAY_TYPE_ATI</NAME>
#define GL_ELEMENT_ARRAY_TYPE_ATI         0x8769
</MACRO>
<MACRO>
<NAME>GL_ELEMENT_ARRAY_POINTER_ATI</NAME>
#define GL_ELEMENT_ARRAY_POINTER_ATI      0x876A
</MACRO>
<MACRO>
<NAME>GL_QUAD_MESH_SUN</NAME>
#define GL_QUAD_MESH_SUN                  0x8614
</MACRO>
<MACRO>
<NAME>GL_TRIANGLE_MESH_SUN</NAME>
#define GL_TRIANGLE_MESH_SUN              0x8615
</MACRO>
<MACRO>
<NAME>GL_SLICE_ACCUM_SUN</NAME>
#define GL_SLICE_ACCUM_SUN                0x85CC
</MACRO>
<MACRO>
<NAME>GL_MULTISAMPLE_FILTER_HINT_NV</NAME>
#define GL_MULTISAMPLE_FILTER_HINT_NV     0x8534
</MACRO>
<MACRO>
<NAME>GL_DEPTH_CLAMP_NV</NAME>
#define GL_DEPTH_CLAMP_NV                 0x864F
</MACRO>
<MACRO>
<NAME>GL_PIXEL_COUNTER_BITS_NV</NAME>
#define GL_PIXEL_COUNTER_BITS_NV          0x8864
</MACRO>
<MACRO>
<NAME>GL_CURRENT_OCCLUSION_QUERY_ID_NV</NAME>
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV  0x8865
</MACRO>
<MACRO>
<NAME>GL_PIXEL_COUNT_NV</NAME>
#define GL_PIXEL_COUNT_NV                 0x8866
</MACRO>
<MACRO>
<NAME>GL_PIXEL_COUNT_AVAILABLE_NV</NAME>
#define GL_PIXEL_COUNT_AVAILABLE_NV       0x8867
</MACRO>
<MACRO>
<NAME>GL_POINT_SPRITE_NV</NAME>
#define GL_POINT_SPRITE_NV                0x8861
</MACRO>
<MACRO>
<NAME>GL_COORD_REPLACE_NV</NAME>
#define GL_COORD_REPLACE_NV               0x8862
</MACRO>
<MACRO>
<NAME>GL_POINT_SPRITE_R_MODE_NV</NAME>
#define GL_POINT_SPRITE_R_MODE_NV         0x8863
</MACRO>
<MACRO>
<NAME>GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV</NAME>
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
</MACRO>
<MACRO>
<NAME>GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV</NAME>
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
</MACRO>
<MACRO>
<NAME>GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV</NAME>
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
</MACRO>
<MACRO>
<NAME>GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV</NAME>
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
</MACRO>
<MACRO>
<NAME>GL_OFFSET_HILO_TEXTURE_2D_NV</NAME>
#define GL_OFFSET_HILO_TEXTURE_2D_NV      0x8854
</MACRO>
<MACRO>
<NAME>GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV</NAME>
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
</MACRO>
<MACRO>
<NAME>GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV</NAME>
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
</MACRO>
<MACRO>
<NAME>GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV</NAME>
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
</MACRO>
<MACRO>
<NAME>GL_DEPENDENT_HILO_TEXTURE_2D_NV</NAME>
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV   0x8858
</MACRO>
<MACRO>
<NAME>GL_DEPENDENT_RGB_TEXTURE_3D_NV</NAME>
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV    0x8859
</MACRO>
<MACRO>
<NAME>GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV</NAME>
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_PASS_THROUGH_NV</NAME>
#define GL_DOT_PRODUCT_PASS_THROUGH_NV    0x885B
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_TEXTURE_1D_NV</NAME>
#define GL_DOT_PRODUCT_TEXTURE_1D_NV      0x885C
</MACRO>
<MACRO>
<NAME>GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV</NAME>
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
</MACRO>
<MACRO>
<NAME>GL_HILO8_NV</NAME>
#define GL_HILO8_NV                       0x885E
</MACRO>
<MACRO>
<NAME>GL_SIGNED_HILO8_NV</NAME>
#define GL_SIGNED_HILO8_NV                0x885F
</MACRO>
<MACRO>
<NAME>GL_FORCE_BLUE_TO_ONE_NV</NAME>
#define GL_FORCE_BLUE_TO_ONE_NV           0x8860
</MACRO>
<MACRO>
<NAME>GL_STENCIL_TEST_TWO_SIDE_EXT</NAME>
#define GL_STENCIL_TEST_TWO_SIDE_EXT      0x8910
</MACRO>
<MACRO>
<NAME>GL_ACTIVE_STENCIL_FACE_EXT</NAME>
#define GL_ACTIVE_STENCIL_FACE_EXT        0x8911
</MACRO>
<MACRO>
<NAME>GL_VERSION_1_2</NAME>
#define GL_VERSION_1_2 1
</MACRO>
<TYPEDEF>
<NAME>alpha)</NAME>
typedef void (APIENTRY * PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
</TYPEDEF>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLBLENDEQUATIONPROC) (GLenum mode);
</TYPEDEF>
<TYPEDEF>
<NAME>indices)</NAME>
typedef void (APIENTRY * PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
</TYPEDEF>
<TYPEDEF>
<NAME>table)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>table)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
</TYPEDEF>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>span)</NAME>
typedef void (APIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
</TYPEDEF>
<TYPEDEF>
<NAME>column)</NAME>
typedef void (APIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
</TYPEDEF>
<TYPEDEF>
<NAME>values)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>values)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>sink)</NAME>
typedef void (APIENTRY * PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
</TYPEDEF>
<TYPEDEF>
<NAME>sink)</NAME>
typedef void (APIENTRY * PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
</TYPEDEF>
<TYPEDEF>
<NAME>target)</NAME>
typedef void (APIENTRY * PFNGLRESETHISTOGRAMPROC) (GLenum target);
</TYPEDEF>
<TYPEDEF>
<NAME>target)</NAME>
typedef void (APIENTRY * PFNGLRESETMINMAXPROC) (GLenum target);
</TYPEDEF>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
</TYPEDEF>
<MACRO>
<NAME>GL_VERSION_1_3</NAME>
#define GL_VERSION_1_3 1
</MACRO>
<TYPEDEF>
<NAME>texture)</NAME>
typedef void (APIENTRY * PFNGLACTIVETEXTUREPROC) (GLenum texture);
</TYPEDEF>
<TYPEDEF>
<NAME>texture)</NAME>
typedef void (APIENTRY * PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
</TYPEDEF>
<TYPEDEF>
<NAME>invert)</NAME>
typedef void (APIENTRY * PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>img)</NAME>
typedef void (APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);
</TYPEDEF>
<MACRO>
<NAME>GL_VERSION_1_4</NAME>
#define GL_VERSION_1_4 1
</MACRO>
<TYPEDEF>
<NAME>dfactorAlpha)</NAME>
typedef void (APIENTRY * PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDFPROC) (GLfloat coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDFVPROC) (const GLfloat *coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDDPROC) (GLdouble coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDDVPROC) (const GLdouble *coord);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>primcount)</NAME>
typedef void (APIENTRY * PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
</TYPEDEF>
<TYPEDEF>
<NAME>primcount)</NAME>
typedef void (APIENTRY * PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IVPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SVPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IVPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SVPROC) (const GLshort *v);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_multitexture</NAME>
#define GL_ARB_multitexture 1
</MACRO>
<TYPEDEF>
<NAME>texture)</NAME>
typedef void (APIENTRY * PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
</TYPEDEF>
<TYPEDEF>
<NAME>texture)</NAME>
typedef void (APIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>s)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>t)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>r)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>q)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_transpose_matrix</NAME>
#define GL_ARB_transpose_matrix 1
</MACRO>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
</TYPEDEF>
<TYPEDEF>
<NAME>m)</NAME>
typedef void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_multisample</NAME>
#define GL_ARB_multisample 1
</MACRO>
<TYPEDEF>
<NAME>invert)</NAME>
typedef void (APIENTRY * PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_texture_env_add</NAME>
#define GL_ARB_texture_env_add 1
</MACRO>
<MACRO>
<NAME>GL_ARB_texture_cube_map</NAME>
#define GL_ARB_texture_cube_map 1
</MACRO>
<MACRO>
<NAME>GL_ARB_texture_compression</NAME>
#define GL_ARB_texture_compression 1
</MACRO>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>img)</NAME>
typedef void (APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *img);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_texture_border_clamp</NAME>
#define GL_ARB_texture_border_clamp 1
</MACRO>
<MACRO>
<NAME>GL_ARB_point_parameters</NAME>
#define GL_ARB_point_parameters 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_vertex_blend</NAME>
#define GL_ARB_vertex_blend 1
</MACRO>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef void (APIENTRY * PFNGLVERTEXBLENDARBPROC) (GLint count);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_matrix_palette</NAME>
#define GL_ARB_matrix_palette 1
</MACRO>
<TYPEDEF>
<NAME>index)</NAME>
typedef void (APIENTRY * PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
</TYPEDEF>
<TYPEDEF>
<NAME>indices)</NAME>
typedef void (APIENTRY * PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
</TYPEDEF>
<TYPEDEF>
<NAME>indices)</NAME>
typedef void (APIENTRY * PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
</TYPEDEF>
<TYPEDEF>
<NAME>indices)</NAME>
typedef void (APIENTRY * PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_texture_env_combine</NAME>
#define GL_ARB_texture_env_combine 1
</MACRO>
<MACRO>
<NAME>GL_ARB_texture_env_crossbar</NAME>
#define GL_ARB_texture_env_crossbar 1
</MACRO>
<MACRO>
<NAME>GL_ARB_texture_env_dot3</NAME>
#define GL_ARB_texture_env_dot3 1
</MACRO>
<MACRO>
<NAME>GL_ARB_texture_mirror_repeat</NAME>
#define GL_ARB_texture_mirror_repeat 1
</MACRO>
<MACRO>
<NAME>GL_ARB_depth_texture</NAME>
#define GL_ARB_depth_texture 1
</MACRO>
<MACRO>
<NAME>GL_ARB_shadow</NAME>
#define GL_ARB_shadow 1
</MACRO>
<MACRO>
<NAME>GL_ARB_shadow_ambient</NAME>
#define GL_ARB_shadow_ambient 1
</MACRO>
<MACRO>
<NAME>GL_ARB_window_pos</NAME>
#define GL_ARB_window_pos 1
</MACRO>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);
</TYPEDEF>
<MACRO>
<NAME>GL_ARB_vertex_program</NAME>
#define GL_ARB_vertex_program 1
</MACRO>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>index)</NAME>
typedef void (APIENTRY * PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
</TYPEDEF>
<TYPEDEF>
<NAME>index)</NAME>
typedef void (APIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
</TYPEDEF>
<TYPEDEF>
<NAME>string)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);
</TYPEDEF>
<TYPEDEF>
<NAME>program)</NAME>
typedef void (APIENTRY * PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);
</TYPEDEF>
<TYPEDEF>
<NAME>programs)</NAME>
typedef void (APIENTRY * PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);
</TYPEDEF>
<TYPEDEF>
<NAME>programs)</NAME>
typedef void (APIENTRY * PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>string)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>program)</NAME>
typedef GLboolean (APIENTRY * PFNGLISPROGRAMARBPROC) (GLuint program);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_abgr</NAME>
#define GL_EXT_abgr 1
</MACRO>
<MACRO>
<NAME>GL_EXT_blend_color</NAME>
#define GL_EXT_blend_color 1
</MACRO>
<TYPEDEF>
<NAME>alpha)</NAME>
typedef void (APIENTRY * PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_polygon_offset</NAME>
#define GL_EXT_polygon_offset 1
</MACRO>
<TYPEDEF>
<NAME>bias)</NAME>
typedef void (APIENTRY * PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_texture</NAME>
#define GL_EXT_texture 1
</MACRO>
<MACRO>
<NAME>GL_EXT_texture3D</NAME>
#define GL_EXT_texture3D 1
</MACRO>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_texture_filter4</NAME>
#define GL_SGIS_texture_filter4 1
</MACRO>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);
</TYPEDEF>
<TYPEDEF>
<NAME>weights)</NAME>
typedef void (APIENTRY * PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_subtexture</NAME>
#define GL_EXT_subtexture 1
</MACRO>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_copy_texture</NAME>
#define GL_EXT_copy_texture 1
</MACRO>
<TYPEDEF>
<NAME>border)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
</TYPEDEF>
<TYPEDEF>
<NAME>border)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef void (APIENTRY * PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_histogram</NAME>
#define GL_EXT_histogram 1
</MACRO>
<TYPEDEF>
<NAME>values)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>values)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>sink)</NAME>
typedef void (APIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
</TYPEDEF>
<TYPEDEF>
<NAME>sink)</NAME>
typedef void (APIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
</TYPEDEF>
<TYPEDEF>
<NAME>target)</NAME>
typedef void (APIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
</TYPEDEF>
<TYPEDEF>
<NAME>target)</NAME>
typedef void (APIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_convolution</NAME>
#define GL_EXT_convolution 1
</MACRO>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
</TYPEDEF>
<TYPEDEF>
<NAME>image)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>span)</NAME>
typedef void (APIENTRY * PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
</TYPEDEF>
<TYPEDEF>
<NAME>column)</NAME>
typedef void (APIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_color_matrix</NAME>
#define GL_EXT_color_matrix 1
</MACRO>
<MACRO>
<NAME>GL_SGI_color_table</NAME>
#define GL_SGI_color_table 1
</MACRO>
<TYPEDEF>
<NAME>table)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<TYPEDEF>
<NAME>table)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_pixel_texture</NAME>
#define GL_SGIX_pixel_texture 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_pixel_texture</NAME>
#define GL_SGIS_pixel_texture 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_texture4D</NAME>
#define GL_SGIS_texture4D 1
</MACRO>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<TYPEDEF>
<NAME>pixels)</NAME>
typedef void (APIENTRY * PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);
</TYPEDEF>
<MACRO>
<NAME>GL_SGI_texture_color_table</NAME>
#define GL_SGI_texture_color_table 1
</MACRO>
<MACRO>
<NAME>GL_EXT_cmyka</NAME>
#define GL_EXT_cmyka 1
</MACRO>
<MACRO>
<NAME>GL_EXT_texture_object</NAME>
#define GL_EXT_texture_object 1
</MACRO>
<TYPEDEF>
<NAME>residences)</NAME>
typedef GLboolean (APIENTRY * PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
</TYPEDEF>
<TYPEDEF>
<NAME>texture)</NAME>
typedef void (APIENTRY * PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
</TYPEDEF>
<TYPEDEF>
<NAME>textures)</NAME>
typedef void (APIENTRY * PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);
</TYPEDEF>
<TYPEDEF>
<NAME>textures)</NAME>
typedef void (APIENTRY * PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
</TYPEDEF>
<TYPEDEF>
<NAME>texture)</NAME>
typedef GLboolean (APIENTRY * PFNGLISTEXTUREEXTPROC) (GLuint texture);
</TYPEDEF>
<TYPEDEF>
<NAME>priorities)</NAME>
typedef void (APIENTRY * PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_detail_texture</NAME>
#define GL_SGIS_detail_texture 1
</MACRO>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
</TYPEDEF>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_sharpen_texture</NAME>
#define GL_SGIS_sharpen_texture 1
</MACRO>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
</TYPEDEF>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_packed_pixels</NAME>
#define GL_EXT_packed_pixels 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_texture_lod</NAME>
#define GL_SGIS_texture_lod 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_multisample</NAME>
#define GL_SGIS_multisample 1
</MACRO>
<TYPEDEF>
<NAME>invert)</NAME>
typedef void (APIENTRY * PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
</TYPEDEF>
<TYPEDEF>
<NAME>pattern)</NAME>
typedef void (APIENTRY * PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_rescale_normal</NAME>
#define GL_EXT_rescale_normal 1
</MACRO>
<MACRO>
<NAME>GL_EXT_vertex_array</NAME>
#define GL_EXT_vertex_array 1
</MACRO>
<TYPEDEF>
<NAME>i)</NAME>
typedef void (APIENTRY * PFNGLARRAYELEMENTEXTPROC) (GLint i);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef void (APIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_misc_attribute</NAME>
#define GL_EXT_misc_attribute 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_generate_mipmap</NAME>
#define GL_SGIS_generate_mipmap 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_clipmap</NAME>
#define GL_SGIX_clipmap 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_shadow</NAME>
#define GL_SGIX_shadow 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_texture_edge_clamp</NAME>
#define GL_SGIS_texture_edge_clamp 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_texture_border_clamp</NAME>
#define GL_SGIS_texture_border_clamp 1
</MACRO>
<MACRO>
<NAME>GL_EXT_blend_minmax</NAME>
#define GL_EXT_blend_minmax 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_blend_subtract</NAME>
#define GL_EXT_blend_subtract 1
</MACRO>
<MACRO>
<NAME>GL_EXT_blend_logic_op</NAME>
#define GL_EXT_blend_logic_op 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_interlace</NAME>
#define GL_SGIX_interlace 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_pixel_tiles</NAME>
#define GL_SGIX_pixel_tiles 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_texture_select</NAME>
#define GL_SGIX_texture_select 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_sprite</NAME>
#define GL_SGIX_sprite 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_texture_multi_buffer</NAME>
#define GL_SGIX_texture_multi_buffer 1
</MACRO>
<MACRO>
<NAME>GL_EXT_point_parameters</NAME>
#define GL_EXT_point_parameters 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIS_point_parameters</NAME>
#define GL_SGIS_point_parameters 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_instruments</NAME>
#define GL_SGIX_instruments 1
</MACRO>
<TYPEDEF>
<NAME>buffer)</NAME>
typedef void (APIENTRY * PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
</TYPEDEF>
<TYPEDEF>
<NAME>marker_p)</NAME>
typedef GLint (APIENTRY * PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
</TYPEDEF>
<TYPEDEF>
<NAME>marker)</NAME>
typedef void (APIENTRY * PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);
</TYPEDEF>
<TYPEDEF>
<NAME>marker)</NAME>
typedef void (APIENTRY * PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_texture_scale_bias</NAME>
#define GL_SGIX_texture_scale_bias 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_framezoom</NAME>
#define GL_SGIX_framezoom 1
</MACRO>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLFRAMEZOOMSGIXPROC) (GLint factor);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_tag_sample_buffer</NAME>
#define GL_SGIX_tag_sample_buffer 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_polynomial_ffd</NAME>
#define GL_SGIX_polynomial_ffd 1
</MACRO>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
</TYPEDEF>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
</TYPEDEF>
<TYPEDEF>
<NAME>mask)</NAME>
typedef void (APIENTRY * PFNGLDEFORMSGIXPROC) (GLbitfield mask);
</TYPEDEF>
<TYPEDEF>
<NAME>mask)</NAME>
typedef void (APIENTRY * PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_reference_plane</NAME>
#define GL_SGIX_reference_plane 1
</MACRO>
<TYPEDEF>
<NAME>equation)</NAME>
typedef void (APIENTRY * PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_flush_raster</NAME>
#define GL_SGIX_flush_raster 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_depth_texture</NAME>
#define GL_SGIX_depth_texture 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_fog_function</NAME>
#define GL_SGIS_fog_function 1
</MACRO>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);
</TYPEDEF>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_fog_offset</NAME>
#define GL_SGIX_fog_offset 1
</MACRO>
<MACRO>
<NAME>GL_HP_image_transform</NAME>
#define GL_HP_image_transform 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_HP_convolution_border_modes</NAME>
#define GL_HP_convolution_border_modes 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_texture_add_env</NAME>
#define GL_SGIX_texture_add_env 1
</MACRO>
<MACRO>
<NAME>GL_EXT_color_subtable</NAME>
#define GL_EXT_color_subtable 1
</MACRO>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
</TYPEDEF>
<MACRO>
<NAME>GL_PGI_vertex_hints</NAME>
#define GL_PGI_vertex_hints 1
</MACRO>
<MACRO>
<NAME>GL_PGI_misc_hints</NAME>
#define GL_PGI_misc_hints 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLHINTPGIPROC) (GLenum target, GLint mode);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_paletted_texture</NAME>
#define GL_EXT_paletted_texture 1
</MACRO>
<TYPEDEF>
<NAME>table)</NAME>
typedef void (APIENTRY * PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_clip_volume_hint</NAME>
#define GL_EXT_clip_volume_hint 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_list_priority</NAME>
#define GL_SGIX_list_priority 1
</MACRO>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_ir_instrument1</NAME>
#define GL_SGIX_ir_instrument1 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_calligraphic_fragment</NAME>
#define GL_SGIX_calligraphic_fragment 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_texture_lod_bias</NAME>
#define GL_SGIX_texture_lod_bias 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_shadow_ambient</NAME>
#define GL_SGIX_shadow_ambient 1
</MACRO>
<MACRO>
<NAME>GL_EXT_index_texture</NAME>
#define GL_EXT_index_texture 1
</MACRO>
<MACRO>
<NAME>GL_EXT_index_material</NAME>
#define GL_EXT_index_material 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_index_func</NAME>
#define GL_EXT_index_func 1
</MACRO>
<TYPEDEF>
<NAME>ref)</NAME>
typedef void (APIENTRY * PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_index_array_formats</NAME>
#define GL_EXT_index_array_formats 1
</MACRO>
<MACRO>
<NAME>GL_EXT_compiled_vertex_array</NAME>
#define GL_EXT_compiled_vertex_array 1
</MACRO>
<TYPEDEF>
<NAME>count)</NAME>
typedef void (APIENTRY * PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_cull_vertex</NAME>
#define GL_EXT_cull_vertex 1
</MACRO>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_ycrcb</NAME>
#define GL_SGIX_ycrcb 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_fragment_lighting</NAME>
#define GL_SGIX_fragment_lighting 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);
</TYPEDEF>
<MACRO>
<NAME>GL_IBM_rasterpos_clip</NAME>
#define GL_IBM_rasterpos_clip 1
</MACRO>
<MACRO>
<NAME>GL_HP_texture_lighting</NAME>
#define GL_HP_texture_lighting 1
</MACRO>
<MACRO>
<NAME>GL_EXT_draw_range_elements</NAME>
#define GL_EXT_draw_range_elements 1
</MACRO>
<TYPEDEF>
<NAME>indices)</NAME>
typedef void (APIENTRY * PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
</TYPEDEF>
<MACRO>
<NAME>GL_WIN_phong_shading</NAME>
#define GL_WIN_phong_shading 1
</MACRO>
<MACRO>
<NAME>GL_WIN_specular_fog</NAME>
#define GL_WIN_specular_fog 1
</MACRO>
<MACRO>
<NAME>GL_EXT_light_texture</NAME>
#define GL_EXT_light_texture 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
</TYPEDEF>
<TYPEDEF>
<NAME>pname)</NAME>
typedef void (APIENTRY * PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
</TYPEDEF>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_blend_alpha_minmax</NAME>
#define GL_SGIX_blend_alpha_minmax 1
</MACRO>
<MACRO>
<NAME>GL_EXT_bgra</NAME>
#define GL_EXT_bgra 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_async</NAME>
#define GL_SGIX_async 1
</MACRO>
<TYPEDEF>
<NAME>marker)</NAME>
typedef void (APIENTRY * PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
</TYPEDEF>
<TYPEDEF>
<NAME>markerp)</NAME>
typedef GLint (APIENTRY * PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);
</TYPEDEF>
<TYPEDEF>
<NAME>markerp)</NAME>
typedef GLint (APIENTRY * PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);
</TYPEDEF>
<TYPEDEF>
<NAME>range)</NAME>
typedef GLuint (APIENTRY * PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
</TYPEDEF>
<TYPEDEF>
<NAME>range)</NAME>
typedef void (APIENTRY * PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
</TYPEDEF>
<TYPEDEF>
<NAME>marker)</NAME>
typedef GLboolean (APIENTRY * PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_async_pixel</NAME>
#define GL_SGIX_async_pixel 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_async_histogram</NAME>
#define GL_SGIX_async_histogram 1
</MACRO>
<MACRO>
<NAME>GL_INTEL_parallel_arrays</NAME>
#define GL_INTEL_parallel_arrays 1
</MACRO>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_HP_occlusion_test</NAME>
#define GL_HP_occlusion_test 1
</MACRO>
<MACRO>
<NAME>GL_EXT_pixel_transform</NAME>
#define GL_EXT_pixel_transform 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_pixel_transform_color_table</NAME>
#define GL_EXT_pixel_transform_color_table 1
</MACRO>
<MACRO>
<NAME>GL_EXT_shared_texture_palette</NAME>
#define GL_EXT_shared_texture_palette 1
</MACRO>
<MACRO>
<NAME>GL_EXT_separate_specular_color</NAME>
#define GL_EXT_separate_specular_color 1
</MACRO>
<MACRO>
<NAME>GL_EXT_secondary_color</NAME>
#define GL_EXT_secondary_color 1
</MACRO>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>blue)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_texture_perturb_normal</NAME>
#define GL_EXT_texture_perturb_normal 1
</MACRO>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLTEXTURENORMALEXTPROC) (GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_multi_draw_arrays</NAME>
#define GL_EXT_multi_draw_arrays 1
</MACRO>
<TYPEDEF>
<NAME>primcount)</NAME>
typedef void (APIENTRY * PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
</TYPEDEF>
<TYPEDEF>
<NAME>primcount)</NAME>
typedef void (APIENTRY * PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_fog_coord</NAME>
#define GL_EXT_fog_coord 1
</MACRO>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
</TYPEDEF>
<TYPEDEF>
<NAME>coord)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_REND_screen_coordinates</NAME>
#define GL_REND_screen_coordinates 1
</MACRO>
<MACRO>
<NAME>GL_EXT_coordinate_frame</NAME>
#define GL_EXT_coordinate_frame 1
</MACRO>
<TYPEDEF>
<NAME>tz)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>tz)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>tz)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>tz)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3IVEXTPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>tz)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTANGENT3SVEXTPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>bz)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>bz)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>bz)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>bz)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3IVEXTPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>bz)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_texture_env_combine</NAME>
#define GL_EXT_texture_env_combine 1
</MACRO>
<MACRO>
<NAME>GL_APPLE_specular_vector</NAME>
#define GL_APPLE_specular_vector 1
</MACRO>
<MACRO>
<NAME>GL_APPLE_transform_hint</NAME>
#define GL_APPLE_transform_hint 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_fog_scale</NAME>
#define GL_SGIX_fog_scale 1
</MACRO>
<MACRO>
<NAME>GL_SUNX_constant_data</NAME>
#define GL_SUNX_constant_data 1
</MACRO>
<MACRO>
<NAME>GL_SUN_global_alpha</NAME>
#define GL_SUN_global_alpha 1
</MACRO>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
</TYPEDEF>
<TYPEDEF>
<NAME>factor)</NAME>
typedef void (APIENTRY * PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);
</TYPEDEF>
<MACRO>
<NAME>GL_SUN_triangle_list</NAME>
#define GL_SUN_triangle_list 1
</MACRO>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
</TYPEDEF>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
</TYPEDEF>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
</TYPEDEF>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);
</TYPEDEF>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);
</TYPEDEF>
<TYPEDEF>
<NAME>code)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_SUN_vertex</NAME>
#define GL_SUN_vertex 1
</MACRO>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_blend_func_separate</NAME>
#define GL_EXT_blend_func_separate 1
</MACRO>
<TYPEDEF>
<NAME>dfactorAlpha)</NAME>
typedef void (APIENTRY * PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
</TYPEDEF>
<MACRO>
<NAME>GL_INGR_blend_func_separate</NAME>
#define GL_INGR_blend_func_separate 1
</MACRO>
<TYPEDEF>
<NAME>dfactorAlpha)</NAME>
typedef void (APIENTRY * PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
</TYPEDEF>
<MACRO>
<NAME>GL_INGR_color_clamp</NAME>
#define GL_INGR_color_clamp 1
</MACRO>
<MACRO>
<NAME>GL_INGR_interlace_read</NAME>
#define GL_INGR_interlace_read 1
</MACRO>
<MACRO>
<NAME>GL_EXT_stencil_wrap</NAME>
#define GL_EXT_stencil_wrap 1
</MACRO>
<MACRO>
<NAME>GL_EXT_422_pixels</NAME>
#define GL_EXT_422_pixels 1
</MACRO>
<MACRO>
<NAME>GL_NV_texgen_reflection</NAME>
#define GL_NV_texgen_reflection 1
</MACRO>
<MACRO>
<NAME>GL_SUN_convolution_border_modes</NAME>
#define GL_SUN_convolution_border_modes 1
</MACRO>
<MACRO>
<NAME>GL_EXT_texture_env_add</NAME>
#define GL_EXT_texture_env_add 1
</MACRO>
<MACRO>
<NAME>GL_EXT_texture_lod_bias</NAME>
#define GL_EXT_texture_lod_bias 1
</MACRO>
<MACRO>
<NAME>GL_EXT_texture_filter_anisotropic</NAME>
#define GL_EXT_texture_filter_anisotropic 1
</MACRO>
<MACRO>
<NAME>GL_EXT_vertex_weighting</NAME>
#define GL_EXT_vertex_weighting 1
</MACRO>
<TYPEDEF>
<NAME>weight)</NAME>
typedef void (APIENTRY * PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
</TYPEDEF>
<TYPEDEF>
<NAME>weight)</NAME>
typedef void (APIENTRY * PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_light_max_exponent</NAME>
#define GL_NV_light_max_exponent 1
</MACRO>
<MACRO>
<NAME>GL_NV_vertex_array_range</NAME>
#define GL_NV_vertex_array_range 1
</MACRO>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_register_combiners</NAME>
#define GL_NV_register_combiners 1
</MACRO>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>componentUsage)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
</TYPEDEF>
<TYPEDEF>
<NAME>muxSum)</NAME>
typedef void (APIENTRY * PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
</TYPEDEF>
<TYPEDEF>
<NAME>componentUsage)</NAME>
typedef void (APIENTRY * PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_fog_distance</NAME>
#define GL_NV_fog_distance 1
</MACRO>
<MACRO>
<NAME>GL_NV_texgen_emboss</NAME>
#define GL_NV_texgen_emboss 1
</MACRO>
<MACRO>
<NAME>GL_NV_blend_square</NAME>
#define GL_NV_blend_square 1
</MACRO>
<MACRO>
<NAME>GL_NV_texture_env_combine4</NAME>
#define GL_NV_texture_env_combine4 1
</MACRO>
<MACRO>
<NAME>GL_MESA_resize_buffers</NAME>
#define GL_MESA_resize_buffers 1
</MACRO>
<MACRO>
<NAME>GL_MESA_window_pos</NAME>
#define GL_MESA_window_pos 1
</MACRO>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);
</TYPEDEF>
<MACRO>
<NAME>GL_IBM_cull_vertex</NAME>
#define GL_IBM_cull_vertex 1
</MACRO>
<MACRO>
<NAME>GL_IBM_multimode_draw_arrays</NAME>
#define GL_IBM_multimode_draw_arrays 1
</MACRO>
<TYPEDEF>
<NAME>modestride)</NAME>
typedef void (APIENTRY * PFNGLMULTIMODEDRAWARRAYSIBMPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
</TYPEDEF>
<TYPEDEF>
<NAME>modestride)</NAME>
typedef void (APIENTRY * PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, GLint modestride);
</TYPEDEF>
<MACRO>
<NAME>GL_IBM_vertex_array_lists</NAME>
#define GL_IBM_vertex_array_lists 1
</MACRO>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<TYPEDEF>
<NAME>ptrstride)</NAME>
typedef void (APIENTRY * PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_subsample</NAME>
#define GL_SGIX_subsample 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_ycrcba</NAME>
#define GL_SGIX_ycrcba 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_ycrcb_subsample</NAME>
#define GL_SGIX_ycrcb_subsample 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_depth_pass_instrument</NAME>
#define GL_SGIX_depth_pass_instrument 1
</MACRO>
<MACRO>
<NAME>GL_3DFX_texture_compression_FXT1</NAME>
#define GL_3DFX_texture_compression_FXT1 1
</MACRO>
<MACRO>
<NAME>GL_3DFX_multisample</NAME>
#define GL_3DFX_multisample 1
</MACRO>
<MACRO>
<NAME>GL_3DFX_tbuffer</NAME>
#define GL_3DFX_tbuffer 1
</MACRO>
<TYPEDEF>
<NAME>mask)</NAME>
typedef void (APIENTRY * PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_multisample</NAME>
#define GL_EXT_multisample 1
</MACRO>
<TYPEDEF>
<NAME>invert)</NAME>
typedef void (APIENTRY * PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
</TYPEDEF>
<TYPEDEF>
<NAME>pattern)</NAME>
typedef void (APIENTRY * PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_vertex_preclip</NAME>
#define GL_SGIX_vertex_preclip 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_convolution_accuracy</NAME>
#define GL_SGIX_convolution_accuracy 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_resample</NAME>
#define GL_SGIX_resample 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_point_line_texgen</NAME>
#define GL_SGIS_point_line_texgen 1
</MACRO>
<MACRO>
<NAME>GL_SGIS_texture_color_mask</NAME>
#define GL_SGIS_texture_color_mask 1
</MACRO>
<TYPEDEF>
<NAME>alpha)</NAME>
typedef void (APIENTRY * PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_igloo_interface</NAME>
#define GL_SGIX_igloo_interface 1
</MACRO>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_texture_env_dot3</NAME>
#define GL_EXT_texture_env_dot3 1
</MACRO>
<MACRO>
<NAME>GL_ATI_texture_mirror_once</NAME>
#define GL_ATI_texture_mirror_once 1
</MACRO>
<MACRO>
<NAME>GL_NV_fence</NAME>
#define GL_NV_fence 1
</MACRO>
<TYPEDEF>
<NAME>fences)</NAME>
typedef void (APIENTRY * PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);
</TYPEDEF>
<TYPEDEF>
<NAME>fences)</NAME>
typedef void (APIENTRY * PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);
</TYPEDEF>
<TYPEDEF>
<NAME>fence)</NAME>
typedef GLboolean (APIENTRY * PFNGLISFENCENVPROC) (GLuint fence);
</TYPEDEF>
<TYPEDEF>
<NAME>fence)</NAME>
typedef GLboolean (APIENTRY * PFNGLTESTFENCENVPROC) (GLuint fence);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>fence)</NAME>
typedef void (APIENTRY * PFNGLFINISHFENCENVPROC) (GLuint fence);
</TYPEDEF>
<TYPEDEF>
<NAME>condition)</NAME>
typedef void (APIENTRY * PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_evaluators</NAME>
#define GL_NV_evaluators 1
</MACRO>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>points)</NAME>
typedef void (APIENTRY * PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>mode)</NAME>
typedef void (APIENTRY * PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_packed_depth_stencil</NAME>
#define GL_NV_packed_depth_stencil 1
</MACRO>
<MACRO>
<NAME>GL_NV_register_combiners2</NAME>
#define GL_NV_register_combiners2 1
</MACRO>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_texture_compression_vtc</NAME>
#define GL_NV_texture_compression_vtc 1
</MACRO>
<MACRO>
<NAME>GL_NV_texture_rectangle</NAME>
#define GL_NV_texture_rectangle 1
</MACRO>
<MACRO>
<NAME>GL_NV_texture_shader</NAME>
#define GL_NV_texture_shader 1
</MACRO>
<MACRO>
<NAME>GL_NV_texture_shader2</NAME>
#define GL_NV_texture_shader2 1
</MACRO>
<MACRO>
<NAME>GL_NV_vertex_array_range2</NAME>
#define GL_NV_vertex_array_range2 1
</MACRO>
<MACRO>
<NAME>GL_NV_vertex_program</NAME>
#define GL_NV_vertex_program 1
</MACRO>
<TYPEDEF>
<NAME>residences)</NAME>
typedef GLboolean (APIENTRY * PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>programs)</NAME>
typedef void (APIENTRY * PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>programs)</NAME>
typedef void (APIENTRY * PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>program)</NAME>
typedef void (APIENTRY * PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef GLboolean (APIENTRY * PFNGLISPROGRAMNVPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>program)</NAME>
typedef void (APIENTRY * PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>programs)</NAME>
typedef void (APIENTRY * PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
</TYPEDEF>
<TYPEDEF>
<NAME>transform)</NAME>
typedef void (APIENTRY * PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
</TYPEDEF>
<TYPEDEF>
<NAME>v)</NAME>
typedef void (APIENTRY * PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);
</TYPEDEF>
<MACRO>
<NAME>GL_SGIX_texture_coordinate_clamp</NAME>
#define GL_SGIX_texture_coordinate_clamp 1
</MACRO>
<MACRO>
<NAME>GL_SGIX_scalebias_hint</NAME>
#define GL_SGIX_scalebias_hint 1
</MACRO>
<MACRO>
<NAME>GL_OML_interlace</NAME>
#define GL_OML_interlace 1
</MACRO>
<MACRO>
<NAME>GL_OML_subsample</NAME>
#define GL_OML_subsample 1
</MACRO>
<MACRO>
<NAME>GL_OML_resample</NAME>
#define GL_OML_resample 1
</MACRO>
<MACRO>
<NAME>GL_NV_copy_depth_to_color</NAME>
#define GL_NV_copy_depth_to_color 1
</MACRO>
<MACRO>
<NAME>GL_ATI_envmap_bumpmap</NAME>
#define GL_ATI_envmap_bumpmap 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
</TYPEDEF>
<MACRO>
<NAME>GL_ATI_fragment_shader</NAME>
#define GL_ATI_fragment_shader 1
</MACRO>
<TYPEDEF>
<NAME>range)</NAME>
typedef GLuint (APIENTRY * PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>swizzle)</NAME>
typedef void (APIENTRY * PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
</TYPEDEF>
<TYPEDEF>
<NAME>swizzle)</NAME>
typedef void (APIENTRY * PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
</TYPEDEF>
<TYPEDEF>
<NAME>arg1Mod)</NAME>
typedef void (APIENTRY * PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>arg2Mod)</NAME>
typedef void (APIENTRY * PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>arg3Mod)</NAME>
typedef void (APIENTRY * PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>arg1Mod)</NAME>
typedef void (APIENTRY * PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>arg2Mod)</NAME>
typedef void (APIENTRY * PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>arg3Mod)</NAME>
typedef void (APIENTRY * PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef void (APIENTRY * PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);
</TYPEDEF>
<MACRO>
<NAME>GL_ATI_pn_triangles</NAME>
#define GL_ATI_pn_triangles 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<MACRO>
<NAME>GL_ATI_vertex_array_object</NAME>
#define GL_ATI_vertex_array_object 1
</MACRO>
<TYPEDEF>
<NAME>usage)</NAME>
typedef GLuint (APIENTRY * PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
</TYPEDEF>
<TYPEDEF>
<NAME>buffer)</NAME>
typedef GLboolean (APIENTRY * PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
</TYPEDEF>
<TYPEDEF>
<NAME>preserve)</NAME>
typedef void (APIENTRY * PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>buffer)</NAME>
typedef void (APIENTRY * PFNGLDELETEOBJECTBUFFERATIPROC) (GLuint buffer);
</TYPEDEF>
<TYPEDEF>
<NAME>offset)</NAME>
typedef void (APIENTRY * PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>offset)</NAME>
typedef void (APIENTRY * PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_EXT_vertex_shader</NAME>
#define GL_EXT_vertex_shader 1
</MACRO>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>range)</NAME>
typedef GLuint (APIENTRY * PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>arg1)</NAME>
typedef void (APIENTRY * PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
</TYPEDEF>
<TYPEDEF>
<NAME>arg2)</NAME>
typedef void (APIENTRY * PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
</TYPEDEF>
<TYPEDEF>
<NAME>arg3)</NAME>
typedef void (APIENTRY * PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
</TYPEDEF>
<TYPEDEF>
<NAME>outW)</NAME>
typedef void (APIENTRY * PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
</TYPEDEF>
<TYPEDEF>
<NAME>outW)</NAME>
typedef void (APIENTRY * PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
</TYPEDEF>
<TYPEDEF>
<NAME>num)</NAME>
typedef void (APIENTRY * PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
</TYPEDEF>
<TYPEDEF>
<NAME>num)</NAME>
typedef void (APIENTRY * PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
</TYPEDEF>
<TYPEDEF>
<NAME>components)</NAME>
typedef GLuint (APIENTRY * PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>addr)</NAME>
typedef void (APIENTRY * PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const void *addr);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef GLuint (APIENTRY * PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef GLuint (APIENTRY * PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef GLuint (APIENTRY * PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef GLuint (APIENTRY * PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
</TYPEDEF>
<TYPEDEF>
<NAME>value)</NAME>
typedef GLuint (APIENTRY * PFNGLBINDPARAMETEREXTPROC) (GLenum value);
</TYPEDEF>
<TYPEDEF>
<NAME>cap)</NAME>
typedef GLboolean (APIENTRY * PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
</TYPEDEF>
<TYPEDEF>
<NAME>data)</NAME>
typedef void (APIENTRY * PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
</TYPEDEF>
<MACRO>
<NAME>GL_ATI_vertex_streams</NAME>
#define GL_ATI_vertex_streams 1
</MACRO>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>x)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>y)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>z)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>w)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>nz)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>nz)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>nz)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>nz)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>nz)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
</TYPEDEF>
<TYPEDEF>
<NAME>coords)</NAME>
typedef void (APIENTRY * PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
</TYPEDEF>
<TYPEDEF>
<NAME>stream)</NAME>
typedef void (APIENTRY * PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);
</TYPEDEF>
<MACRO>
<NAME>GL_ATI_element_array</NAME>
#define GL_ATI_element_array 1
</MACRO>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (APIENTRY * PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef void (APIENTRY * PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef void (APIENTRY * PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);
</TYPEDEF>
<MACRO>
<NAME>GL_SUN_mesh_array</NAME>
#define GL_SUN_mesh_array 1
</MACRO>
<TYPEDEF>
<NAME>width)</NAME>
typedef void (APIENTRY * PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);
</TYPEDEF>
<MACRO>
<NAME>GL_SUN_slice_accum</NAME>
#define GL_SUN_slice_accum 1
</MACRO>
<MACRO>
<NAME>GL_NV_multisample_filter_hint</NAME>
#define GL_NV_multisample_filter_hint 1
</MACRO>
<MACRO>
<NAME>GL_NV_depth_clamp</NAME>
#define GL_NV_depth_clamp 1
</MACRO>
<MACRO>
<NAME>GL_NV_occlusion_query</NAME>
#define GL_NV_occlusion_query 1
</MACRO>
<TYPEDEF>
<NAME>ids)</NAME>
typedef void (APIENTRY * PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);
</TYPEDEF>
<TYPEDEF>
<NAME>ids)</NAME>
typedef void (APIENTRY * PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef GLboolean (APIENTRY * PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef void (APIENTRY * PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_point_sprite</NAME>
#define GL_NV_point_sprite 1
</MACRO>
<TYPEDEF>
<NAME>param)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
</TYPEDEF>
<TYPEDEF>
<NAME>params)</NAME>
typedef void (APIENTRY * PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
</TYPEDEF>
<MACRO>
<NAME>GL_NV_texture_shader3</NAME>
#define GL_NV_texture_shader3 1
</MACRO>
<MACRO>
<NAME>GL_NV_vertex_program1_1</NAME>
#define GL_NV_vertex_program1_1 1
</MACRO>
<MACRO>
<NAME>GL_EXT_shadow_funcs</NAME>
#define GL_EXT_shadow_funcs 1
</MACRO>
<MACRO>
<NAME>GL_EXT_stencil_two_side</NAME>
#define GL_EXT_stencil_two_side 1
</MACRO>
<TYPEDEF>
<NAME>face)</NAME>
typedef void (APIENTRY * PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);
</TYPEDEF>
<MACRO>
<NAME>WIN32_LEAN_AND_MEAN</NAME>
#define WIN32_LEAN_AND_MEAN 1
</MACRO>
<MACRO>
<NAME>APIENTRY</NAME>
#define APIENTRY
</MACRO>
<MACRO>
<NAME>GLAPI</NAME>
#define GLAPI extern
</MACRO>
<MACRO>
<NAME>WGL_WGLEXT_VERSION</NAME>
#define WGL_WGLEXT_VERSION 4
</MACRO>
<MACRO>
<NAME>WGL_FRONT_COLOR_BUFFER_BIT_ARB</NAME>
#define WGL_FRONT_COLOR_BUFFER_BIT_ARB 0x00000001
</MACRO>
<MACRO>
<NAME>WGL_BACK_COLOR_BUFFER_BIT_ARB</NAME>
#define WGL_BACK_COLOR_BUFFER_BIT_ARB  0x00000002
</MACRO>
<MACRO>
<NAME>WGL_DEPTH_BUFFER_BIT_ARB</NAME>
#define WGL_DEPTH_BUFFER_BIT_ARB       0x00000004
</MACRO>
<MACRO>
<NAME>WGL_STENCIL_BUFFER_BIT_ARB</NAME>
#define WGL_STENCIL_BUFFER_BIT_ARB     0x00000008
</MACRO>
<MACRO>
<NAME>WGL_SAMPLE_BUFFERS_ARB</NAME>
#define WGL_SAMPLE_BUFFERS_ARB         0x2041
</MACRO>
<MACRO>
<NAME>WGL_SAMPLES_ARB</NAME>
#define WGL_SAMPLES_ARB                0x2042
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_PIXEL_FORMATS_ARB</NAME>
#define WGL_NUMBER_PIXEL_FORMATS_ARB   0x2000
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_WINDOW_ARB</NAME>
#define WGL_DRAW_TO_WINDOW_ARB         0x2001
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_BITMAP_ARB</NAME>
#define WGL_DRAW_TO_BITMAP_ARB         0x2002
</MACRO>
<MACRO>
<NAME>WGL_ACCELERATION_ARB</NAME>
#define WGL_ACCELERATION_ARB           0x2003
</MACRO>
<MACRO>
<NAME>WGL_NEED_PALETTE_ARB</NAME>
#define WGL_NEED_PALETTE_ARB           0x2004
</MACRO>
<MACRO>
<NAME>WGL_NEED_SYSTEM_PALETTE_ARB</NAME>
#define WGL_NEED_SYSTEM_PALETTE_ARB    0x2005
</MACRO>
<MACRO>
<NAME>WGL_SWAP_LAYER_BUFFERS_ARB</NAME>
#define WGL_SWAP_LAYER_BUFFERS_ARB     0x2006
</MACRO>
<MACRO>
<NAME>WGL_SWAP_METHOD_ARB</NAME>
#define WGL_SWAP_METHOD_ARB            0x2007
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_OVERLAYS_ARB</NAME>
#define WGL_NUMBER_OVERLAYS_ARB        0x2008
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_UNDERLAYS_ARB</NAME>
#define WGL_NUMBER_UNDERLAYS_ARB       0x2009
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_ARB</NAME>
#define WGL_TRANSPARENT_ARB            0x200A
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_RED_VALUE_ARB</NAME>
#define WGL_TRANSPARENT_RED_VALUE_ARB  0x2037
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_GREEN_VALUE_ARB</NAME>
#define WGL_TRANSPARENT_GREEN_VALUE_ARB 0x2038
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_BLUE_VALUE_ARB</NAME>
#define WGL_TRANSPARENT_BLUE_VALUE_ARB 0x2039
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_ALPHA_VALUE_ARB</NAME>
#define WGL_TRANSPARENT_ALPHA_VALUE_ARB 0x203A
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_INDEX_VALUE_ARB</NAME>
#define WGL_TRANSPARENT_INDEX_VALUE_ARB 0x203B
</MACRO>
<MACRO>
<NAME>WGL_SHARE_DEPTH_ARB</NAME>
#define WGL_SHARE_DEPTH_ARB            0x200C
</MACRO>
<MACRO>
<NAME>WGL_SHARE_STENCIL_ARB</NAME>
#define WGL_SHARE_STENCIL_ARB          0x200D
</MACRO>
<MACRO>
<NAME>WGL_SHARE_ACCUM_ARB</NAME>
#define WGL_SHARE_ACCUM_ARB            0x200E
</MACRO>
<MACRO>
<NAME>WGL_SUPPORT_GDI_ARB</NAME>
#define WGL_SUPPORT_GDI_ARB            0x200F
</MACRO>
<MACRO>
<NAME>WGL_SUPPORT_OPENGL_ARB</NAME>
#define WGL_SUPPORT_OPENGL_ARB         0x2010
</MACRO>
<MACRO>
<NAME>WGL_DOUBLE_BUFFER_ARB</NAME>
#define WGL_DOUBLE_BUFFER_ARB          0x2011
</MACRO>
<MACRO>
<NAME>WGL_STEREO_ARB</NAME>
#define WGL_STEREO_ARB                 0x2012
</MACRO>
<MACRO>
<NAME>WGL_PIXEL_TYPE_ARB</NAME>
#define WGL_PIXEL_TYPE_ARB             0x2013
</MACRO>
<MACRO>
<NAME>WGL_COLOR_BITS_ARB</NAME>
#define WGL_COLOR_BITS_ARB             0x2014
</MACRO>
<MACRO>
<NAME>WGL_RED_BITS_ARB</NAME>
#define WGL_RED_BITS_ARB               0x2015
</MACRO>
<MACRO>
<NAME>WGL_RED_SHIFT_ARB</NAME>
#define WGL_RED_SHIFT_ARB              0x2016
</MACRO>
<MACRO>
<NAME>WGL_GREEN_BITS_ARB</NAME>
#define WGL_GREEN_BITS_ARB             0x2017
</MACRO>
<MACRO>
<NAME>WGL_GREEN_SHIFT_ARB</NAME>
#define WGL_GREEN_SHIFT_ARB            0x2018
</MACRO>
<MACRO>
<NAME>WGL_BLUE_BITS_ARB</NAME>
#define WGL_BLUE_BITS_ARB              0x2019
</MACRO>
<MACRO>
<NAME>WGL_BLUE_SHIFT_ARB</NAME>
#define WGL_BLUE_SHIFT_ARB             0x201A
</MACRO>
<MACRO>
<NAME>WGL_ALPHA_BITS_ARB</NAME>
#define WGL_ALPHA_BITS_ARB             0x201B
</MACRO>
<MACRO>
<NAME>WGL_ALPHA_SHIFT_ARB</NAME>
#define WGL_ALPHA_SHIFT_ARB            0x201C
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_BITS_ARB</NAME>
#define WGL_ACCUM_BITS_ARB             0x201D
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_RED_BITS_ARB</NAME>
#define WGL_ACCUM_RED_BITS_ARB         0x201E
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_GREEN_BITS_ARB</NAME>
#define WGL_ACCUM_GREEN_BITS_ARB       0x201F
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_BLUE_BITS_ARB</NAME>
#define WGL_ACCUM_BLUE_BITS_ARB        0x2020
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_ALPHA_BITS_ARB</NAME>
#define WGL_ACCUM_ALPHA_BITS_ARB       0x2021
</MACRO>
<MACRO>
<NAME>WGL_DEPTH_BITS_ARB</NAME>
#define WGL_DEPTH_BITS_ARB             0x2022
</MACRO>
<MACRO>
<NAME>WGL_STENCIL_BITS_ARB</NAME>
#define WGL_STENCIL_BITS_ARB           0x2023
</MACRO>
<MACRO>
<NAME>WGL_AUX_BUFFERS_ARB</NAME>
#define WGL_AUX_BUFFERS_ARB            0x2024
</MACRO>
<MACRO>
<NAME>WGL_NO_ACCELERATION_ARB</NAME>
#define WGL_NO_ACCELERATION_ARB        0x2025
</MACRO>
<MACRO>
<NAME>WGL_GENERIC_ACCELERATION_ARB</NAME>
#define WGL_GENERIC_ACCELERATION_ARB   0x2026
</MACRO>
<MACRO>
<NAME>WGL_FULL_ACCELERATION_ARB</NAME>
#define WGL_FULL_ACCELERATION_ARB      0x2027
</MACRO>
<MACRO>
<NAME>WGL_SWAP_EXCHANGE_ARB</NAME>
#define WGL_SWAP_EXCHANGE_ARB          0x2028
</MACRO>
<MACRO>
<NAME>WGL_SWAP_COPY_ARB</NAME>
#define WGL_SWAP_COPY_ARB              0x2029
</MACRO>
<MACRO>
<NAME>WGL_SWAP_UNDEFINED_ARB</NAME>
#define WGL_SWAP_UNDEFINED_ARB         0x202A
</MACRO>
<MACRO>
<NAME>WGL_TYPE_RGBA_ARB</NAME>
#define WGL_TYPE_RGBA_ARB              0x202B
</MACRO>
<MACRO>
<NAME>WGL_TYPE_COLORINDEX_ARB</NAME>
#define WGL_TYPE_COLORINDEX_ARB        0x202C
</MACRO>
<MACRO>
<NAME>ERROR_INVALID_PIXEL_TYPE_ARB</NAME>
#define ERROR_INVALID_PIXEL_TYPE_ARB   0x2043
</MACRO>
<MACRO>
<NAME>ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</NAME>
#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB 0x2054
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_PBUFFER_ARB</NAME>
#define WGL_DRAW_TO_PBUFFER_ARB        0x202D
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_PIXELS_ARB</NAME>
#define WGL_MAX_PBUFFER_PIXELS_ARB     0x202E
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_WIDTH_ARB</NAME>
#define WGL_MAX_PBUFFER_WIDTH_ARB      0x202F
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_HEIGHT_ARB</NAME>
#define WGL_MAX_PBUFFER_HEIGHT_ARB     0x2030
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_LARGEST_ARB</NAME>
#define WGL_PBUFFER_LARGEST_ARB        0x2033
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_WIDTH_ARB</NAME>
#define WGL_PBUFFER_WIDTH_ARB          0x2034
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_HEIGHT_ARB</NAME>
#define WGL_PBUFFER_HEIGHT_ARB         0x2035
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_LOST_ARB</NAME>
#define WGL_PBUFFER_LOST_ARB           0x2036
</MACRO>
<MACRO>
<NAME>WGL_BIND_TO_TEXTURE_RGB_ARB</NAME>
#define WGL_BIND_TO_TEXTURE_RGB_ARB    0x2070
</MACRO>
<MACRO>
<NAME>WGL_BIND_TO_TEXTURE_RGBA_ARB</NAME>
#define WGL_BIND_TO_TEXTURE_RGBA_ARB   0x2071
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_FORMAT_ARB</NAME>
#define WGL_TEXTURE_FORMAT_ARB         0x2072
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_TARGET_ARB</NAME>
#define WGL_TEXTURE_TARGET_ARB         0x2073
</MACRO>
<MACRO>
<NAME>WGL_MIPMAP_TEXTURE_ARB</NAME>
#define WGL_MIPMAP_TEXTURE_ARB         0x2074
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_RGB_ARB</NAME>
#define WGL_TEXTURE_RGB_ARB            0x2075
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_RGBA_ARB</NAME>
#define WGL_TEXTURE_RGBA_ARB           0x2076
</MACRO>
<MACRO>
<NAME>WGL_NO_TEXTURE_ARB</NAME>
#define WGL_NO_TEXTURE_ARB             0x2077
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_ARB       0x2078
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_1D_ARB</NAME>
#define WGL_TEXTURE_1D_ARB             0x2079
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_2D_ARB</NAME>
#define WGL_TEXTURE_2D_ARB             0x207A
</MACRO>
<MACRO>
<NAME>WGL_MIPMAP_LEVEL_ARB</NAME>
#define WGL_MIPMAP_LEVEL_ARB           0x207B
</MACRO>
<MACRO>
<NAME>WGL_CUBE_MAP_FACE_ARB</NAME>
#define WGL_CUBE_MAP_FACE_ARB          0x207C
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
</MACRO>
<MACRO>
<NAME>WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB</NAME>
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
</MACRO>
<MACRO>
<NAME>WGL_FRONT_LEFT_ARB</NAME>
#define WGL_FRONT_LEFT_ARB             0x2083
</MACRO>
<MACRO>
<NAME>WGL_FRONT_RIGHT_ARB</NAME>
#define WGL_FRONT_RIGHT_ARB            0x2084
</MACRO>
<MACRO>
<NAME>WGL_BACK_LEFT_ARB</NAME>
#define WGL_BACK_LEFT_ARB              0x2085
</MACRO>
<MACRO>
<NAME>WGL_BACK_RIGHT_ARB</NAME>
#define WGL_BACK_RIGHT_ARB             0x2086
</MACRO>
<MACRO>
<NAME>WGL_AUX0_ARB</NAME>
#define WGL_AUX0_ARB                   0x2087
</MACRO>
<MACRO>
<NAME>WGL_AUX1_ARB</NAME>
#define WGL_AUX1_ARB                   0x2088
</MACRO>
<MACRO>
<NAME>WGL_AUX2_ARB</NAME>
#define WGL_AUX2_ARB                   0x2089
</MACRO>
<MACRO>
<NAME>WGL_AUX3_ARB</NAME>
#define WGL_AUX3_ARB                   0x208A
</MACRO>
<MACRO>
<NAME>WGL_AUX4_ARB</NAME>
#define WGL_AUX4_ARB                   0x208B
</MACRO>
<MACRO>
<NAME>WGL_AUX5_ARB</NAME>
#define WGL_AUX5_ARB                   0x208C
</MACRO>
<MACRO>
<NAME>WGL_AUX6_ARB</NAME>
#define WGL_AUX6_ARB                   0x208D
</MACRO>
<MACRO>
<NAME>WGL_AUX7_ARB</NAME>
#define WGL_AUX7_ARB                   0x208E
</MACRO>
<MACRO>
<NAME>WGL_AUX8_ARB</NAME>
#define WGL_AUX8_ARB                   0x208F
</MACRO>
<MACRO>
<NAME>WGL_AUX9_ARB</NAME>
#define WGL_AUX9_ARB                   0x2090
</MACRO>
<MACRO>
<NAME>ERROR_INVALID_PIXEL_TYPE_EXT</NAME>
#define ERROR_INVALID_PIXEL_TYPE_EXT   0x2043
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_PIXEL_FORMATS_EXT</NAME>
#define WGL_NUMBER_PIXEL_FORMATS_EXT   0x2000
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_WINDOW_EXT</NAME>
#define WGL_DRAW_TO_WINDOW_EXT         0x2001
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_BITMAP_EXT</NAME>
#define WGL_DRAW_TO_BITMAP_EXT         0x2002
</MACRO>
<MACRO>
<NAME>WGL_ACCELERATION_EXT</NAME>
#define WGL_ACCELERATION_EXT           0x2003
</MACRO>
<MACRO>
<NAME>WGL_NEED_PALETTE_EXT</NAME>
#define WGL_NEED_PALETTE_EXT           0x2004
</MACRO>
<MACRO>
<NAME>WGL_NEED_SYSTEM_PALETTE_EXT</NAME>
#define WGL_NEED_SYSTEM_PALETTE_EXT    0x2005
</MACRO>
<MACRO>
<NAME>WGL_SWAP_LAYER_BUFFERS_EXT</NAME>
#define WGL_SWAP_LAYER_BUFFERS_EXT     0x2006
</MACRO>
<MACRO>
<NAME>WGL_SWAP_METHOD_EXT</NAME>
#define WGL_SWAP_METHOD_EXT            0x2007
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_OVERLAYS_EXT</NAME>
#define WGL_NUMBER_OVERLAYS_EXT        0x2008
</MACRO>
<MACRO>
<NAME>WGL_NUMBER_UNDERLAYS_EXT</NAME>
#define WGL_NUMBER_UNDERLAYS_EXT       0x2009
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_EXT</NAME>
#define WGL_TRANSPARENT_EXT            0x200A
</MACRO>
<MACRO>
<NAME>WGL_TRANSPARENT_VALUE_EXT</NAME>
#define WGL_TRANSPARENT_VALUE_EXT      0x200B
</MACRO>
<MACRO>
<NAME>WGL_SHARE_DEPTH_EXT</NAME>
#define WGL_SHARE_DEPTH_EXT            0x200C
</MACRO>
<MACRO>
<NAME>WGL_SHARE_STENCIL_EXT</NAME>
#define WGL_SHARE_STENCIL_EXT          0x200D
</MACRO>
<MACRO>
<NAME>WGL_SHARE_ACCUM_EXT</NAME>
#define WGL_SHARE_ACCUM_EXT            0x200E
</MACRO>
<MACRO>
<NAME>WGL_SUPPORT_GDI_EXT</NAME>
#define WGL_SUPPORT_GDI_EXT            0x200F
</MACRO>
<MACRO>
<NAME>WGL_SUPPORT_OPENGL_EXT</NAME>
#define WGL_SUPPORT_OPENGL_EXT         0x2010
</MACRO>
<MACRO>
<NAME>WGL_DOUBLE_BUFFER_EXT</NAME>
#define WGL_DOUBLE_BUFFER_EXT          0x2011
</MACRO>
<MACRO>
<NAME>WGL_STEREO_EXT</NAME>
#define WGL_STEREO_EXT                 0x2012
</MACRO>
<MACRO>
<NAME>WGL_PIXEL_TYPE_EXT</NAME>
#define WGL_PIXEL_TYPE_EXT             0x2013
</MACRO>
<MACRO>
<NAME>WGL_COLOR_BITS_EXT</NAME>
#define WGL_COLOR_BITS_EXT             0x2014
</MACRO>
<MACRO>
<NAME>WGL_RED_BITS_EXT</NAME>
#define WGL_RED_BITS_EXT               0x2015
</MACRO>
<MACRO>
<NAME>WGL_RED_SHIFT_EXT</NAME>
#define WGL_RED_SHIFT_EXT              0x2016
</MACRO>
<MACRO>
<NAME>WGL_GREEN_BITS_EXT</NAME>
#define WGL_GREEN_BITS_EXT             0x2017
</MACRO>
<MACRO>
<NAME>WGL_GREEN_SHIFT_EXT</NAME>
#define WGL_GREEN_SHIFT_EXT            0x2018
</MACRO>
<MACRO>
<NAME>WGL_BLUE_BITS_EXT</NAME>
#define WGL_BLUE_BITS_EXT              0x2019
</MACRO>
<MACRO>
<NAME>WGL_BLUE_SHIFT_EXT</NAME>
#define WGL_BLUE_SHIFT_EXT             0x201A
</MACRO>
<MACRO>
<NAME>WGL_ALPHA_BITS_EXT</NAME>
#define WGL_ALPHA_BITS_EXT             0x201B
</MACRO>
<MACRO>
<NAME>WGL_ALPHA_SHIFT_EXT</NAME>
#define WGL_ALPHA_SHIFT_EXT            0x201C
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_BITS_EXT</NAME>
#define WGL_ACCUM_BITS_EXT             0x201D
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_RED_BITS_EXT</NAME>
#define WGL_ACCUM_RED_BITS_EXT         0x201E
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_GREEN_BITS_EXT</NAME>
#define WGL_ACCUM_GREEN_BITS_EXT       0x201F
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_BLUE_BITS_EXT</NAME>
#define WGL_ACCUM_BLUE_BITS_EXT        0x2020
</MACRO>
<MACRO>
<NAME>WGL_ACCUM_ALPHA_BITS_EXT</NAME>
#define WGL_ACCUM_ALPHA_BITS_EXT       0x2021
</MACRO>
<MACRO>
<NAME>WGL_DEPTH_BITS_EXT</NAME>
#define WGL_DEPTH_BITS_EXT             0x2022
</MACRO>
<MACRO>
<NAME>WGL_STENCIL_BITS_EXT</NAME>
#define WGL_STENCIL_BITS_EXT           0x2023
</MACRO>
<MACRO>
<NAME>WGL_AUX_BUFFERS_EXT</NAME>
#define WGL_AUX_BUFFERS_EXT            0x2024
</MACRO>
<MACRO>
<NAME>WGL_NO_ACCELERATION_EXT</NAME>
#define WGL_NO_ACCELERATION_EXT        0x2025
</MACRO>
<MACRO>
<NAME>WGL_GENERIC_ACCELERATION_EXT</NAME>
#define WGL_GENERIC_ACCELERATION_EXT   0x2026
</MACRO>
<MACRO>
<NAME>WGL_FULL_ACCELERATION_EXT</NAME>
#define WGL_FULL_ACCELERATION_EXT      0x2027
</MACRO>
<MACRO>
<NAME>WGL_SWAP_EXCHANGE_EXT</NAME>
#define WGL_SWAP_EXCHANGE_EXT          0x2028
</MACRO>
<MACRO>
<NAME>WGL_SWAP_COPY_EXT</NAME>
#define WGL_SWAP_COPY_EXT              0x2029
</MACRO>
<MACRO>
<NAME>WGL_SWAP_UNDEFINED_EXT</NAME>
#define WGL_SWAP_UNDEFINED_EXT         0x202A
</MACRO>
<MACRO>
<NAME>WGL_TYPE_RGBA_EXT</NAME>
#define WGL_TYPE_RGBA_EXT              0x202B
</MACRO>
<MACRO>
<NAME>WGL_TYPE_COLORINDEX_EXT</NAME>
#define WGL_TYPE_COLORINDEX_EXT        0x202C
</MACRO>
<MACRO>
<NAME>WGL_DRAW_TO_PBUFFER_EXT</NAME>
#define WGL_DRAW_TO_PBUFFER_EXT        0x202D
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_PIXELS_EXT</NAME>
#define WGL_MAX_PBUFFER_PIXELS_EXT     0x202E
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_WIDTH_EXT</NAME>
#define WGL_MAX_PBUFFER_WIDTH_EXT      0x202F
</MACRO>
<MACRO>
<NAME>WGL_MAX_PBUFFER_HEIGHT_EXT</NAME>
#define WGL_MAX_PBUFFER_HEIGHT_EXT     0x2030
</MACRO>
<MACRO>
<NAME>WGL_OPTIMAL_PBUFFER_WIDTH_EXT</NAME>
#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT  0x2031
</MACRO>
<MACRO>
<NAME>WGL_OPTIMAL_PBUFFER_HEIGHT_EXT</NAME>
#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT 0x2032
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_LARGEST_EXT</NAME>
#define WGL_PBUFFER_LARGEST_EXT        0x2033
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_WIDTH_EXT</NAME>
#define WGL_PBUFFER_WIDTH_EXT          0x2034
</MACRO>
<MACRO>
<NAME>WGL_PBUFFER_HEIGHT_EXT</NAME>
#define WGL_PBUFFER_HEIGHT_EXT         0x2035
</MACRO>
<MACRO>
<NAME>WGL_DEPTH_FLOAT_EXT</NAME>
#define WGL_DEPTH_FLOAT_EXT            0x2040
</MACRO>
<MACRO>
<NAME>WGL_SAMPLE_BUFFERS_3DFX</NAME>
#define WGL_SAMPLE_BUFFERS_3DFX        0x2060
</MACRO>
<MACRO>
<NAME>WGL_SAMPLES_3DFX</NAME>
#define WGL_SAMPLES_3DFX               0x2061
</MACRO>
<MACRO>
<NAME>WGL_SAMPLE_BUFFERS_EXT</NAME>
#define WGL_SAMPLE_BUFFERS_EXT         0x2041
</MACRO>
<MACRO>
<NAME>WGL_SAMPLES_EXT</NAME>
#define WGL_SAMPLES_EXT                0x2042
</MACRO>
<MACRO>
<NAME>WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D</NAME>
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D 0x2050
</MACRO>
<MACRO>
<NAME>WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D</NAME>
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D 0x2051
</MACRO>
<MACRO>
<NAME>WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D</NAME>
#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D 0x2052
</MACRO>
<MACRO>
<NAME>WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D</NAME>
#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D 0x2053
</MACRO>
<MACRO>
<NAME>WGL_GAMMA_TABLE_SIZE_I3D</NAME>
#define WGL_GAMMA_TABLE_SIZE_I3D       0x204E
</MACRO>
<MACRO>
<NAME>WGL_GAMMA_EXCLUDE_DESKTOP_I3D</NAME>
#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D  0x204F
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_MULTIVIEW_I3D</NAME>
#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D 0x2044
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D 0x2045
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D 0x2046
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D 0x2047
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D</NAME>
#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D 0x2048
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D</NAME>
#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D 0x2049
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D 0x204A
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EDGE_RISING_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D 0x204B
</MACRO>
<MACRO>
<NAME>WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D</NAME>
#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D 0x204C
</MACRO>
<MACRO>
<NAME>WGL_IMAGE_BUFFER_MIN_ACCESS_I3D</NAME>
#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
</MACRO>
<MACRO>
<NAME>WGL_IMAGE_BUFFER_LOCK_I3D</NAME>
#define WGL_IMAGE_BUFFER_LOCK_I3D      0x00000002
</MACRO>
<MACRO>
<NAME>WGL_ARB_buffer_region</NAME>
#define WGL_ARB_buffer_region 1
</MACRO>
<TYPEDEF>
<NAME>uType)</NAME>
typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);
</TYPEDEF>
<TYPEDEF>
<NAME>hRegion)</NAME>
typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);
</TYPEDEF>
<TYPEDEF>
<NAME>height)</NAME>
typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);
</TYPEDEF>
<TYPEDEF>
<NAME>ySrc)</NAME>
typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);
</TYPEDEF>
<MACRO>
<NAME>WGL_ARB_multisample</NAME>
#define WGL_ARB_multisample 1
</MACRO>
<MACRO>
<NAME>WGL_ARB_extensions_string</NAME>
#define WGL_ARB_extensions_string 1
</MACRO>
<TYPEDEF>
<NAME>hdc)</NAME>
typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);
</TYPEDEF>
<MACRO>
<NAME>WGL_ARB_pixel_format</NAME>
#define WGL_ARB_pixel_format 1
</MACRO>
<TYPEDEF>
<NAME>piValues)</NAME>
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
</TYPEDEF>
<TYPEDEF>
<NAME>pfValues)</NAME>
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
</TYPEDEF>
<TYPEDEF>
<NAME>nNumFormats)</NAME>
typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
</TYPEDEF>
<MACRO>
<NAME>WGL_ARB_make_current_read</NAME>
#define WGL_ARB_make_current_read 1
</MACRO>
<TYPEDEF>
<NAME>hglrc)</NAME>
typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
</TYPEDEF>
<MACRO>
<NAME>WGL_ARB_pbuffer</NAME>
#define WGL_ARB_pbuffer 1
</MACRO>
<TYPEDEF>
<NAME>piAttribList)</NAME>
typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
</TYPEDEF>
<TYPEDEF>
<NAME>hPbuffer)</NAME>
typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>hDC)</NAME>
typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);
</TYPEDEF>
<TYPEDEF>
<NAME>hPbuffer)</NAME>
typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);
</TYPEDEF>
<MACRO>
<NAME>WGL_ARB_render_texture</NAME>
#define WGL_ARB_render_texture 1
</MACRO>
<TYPEDEF>
<NAME>iBuffer)</NAME>
typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>iBuffer)</NAME>
typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>piAttribList)</NAME>
typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_display_color_table</NAME>
#define WGL_EXT_display_color_table 1
</MACRO>
<TYPEDEF>
<NAME>id)</NAME>
typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);
</TYPEDEF>
<TYPEDEF>
<NAME>length)</NAME>
typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);
</TYPEDEF>
<TYPEDEF>
<NAME>id)</NAME>
typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_extensions_string</NAME>
#define WGL_EXT_extensions_string 1
</MACRO>
<MACRO>
<NAME>WGL_EXT_make_current_read</NAME>
#define WGL_EXT_make_current_read 1
</MACRO>
<TYPEDEF>
<NAME>hglrc)</NAME>
typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_pbuffer</NAME>
#define WGL_EXT_pbuffer 1
</MACRO>
<TYPEDEF>
<NAME>piAttribList)</NAME>
typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
</TYPEDEF>
<TYPEDEF>
<NAME>hPbuffer)</NAME>
typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>hDC)</NAME>
typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);
</TYPEDEF>
<TYPEDEF>
<NAME>hPbuffer)</NAME>
typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);
</TYPEDEF>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_pixel_format</NAME>
#define WGL_EXT_pixel_format 1
</MACRO>
<TYPEDEF>
<NAME>piValues)</NAME>
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);
</TYPEDEF>
<TYPEDEF>
<NAME>pfValues)</NAME>
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);
</TYPEDEF>
<TYPEDEF>
<NAME>nNumFormats)</NAME>
typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_swap_control</NAME>
#define WGL_EXT_swap_control 1
</MACRO>
<TYPEDEF>
<NAME>interval)</NAME>
typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);
</TYPEDEF>
<MACRO>
<NAME>WGL_EXT_depth_float</NAME>
#define WGL_EXT_depth_float 1
</MACRO>
<MACRO>
<NAME>WGL_NV_vertex_array_range</NAME>
#define WGL_NV_vertex_array_range 1
</MACRO>
<TYPEDEF>
<NAME>priority)</NAME>
typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);
</TYPEDEF>
<TYPEDEF>
<NAME>pointer)</NAME>
typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);
</TYPEDEF>
<MACRO>
<NAME>WGL_3DFX_multisample</NAME>
#define WGL_3DFX_multisample 1
</MACRO>
<MACRO>
<NAME>WGL_EXT_multisample</NAME>
#define WGL_EXT_multisample 1
</MACRO>
<MACRO>
<NAME>WGL_OML_sync_control</NAME>
#define WGL_OML_sync_control 1
</MACRO>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);
</TYPEDEF>
<TYPEDEF>
<NAME>denominator)</NAME>
typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);
</TYPEDEF>
<TYPEDEF>
<NAME>remainder)</NAME>
typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);
</TYPEDEF>
<TYPEDEF>
<NAME>remainder)</NAME>
typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);
</TYPEDEF>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);
</TYPEDEF>
<TYPEDEF>
<NAME>sbc)</NAME>
typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_digital_video_control</NAME>
#define WGL_I3D_digital_video_control 1
</MACRO>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);
</TYPEDEF>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_gamma</NAME>
#define WGL_I3D_gamma 1
</MACRO>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);
</TYPEDEF>
<TYPEDEF>
<NAME>piValue)</NAME>
typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);
</TYPEDEF>
<TYPEDEF>
<NAME>puBlue)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);
</TYPEDEF>
<TYPEDEF>
<NAME>puBlue)</NAME>
typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_genlock</NAME>
#define WGL_I3D_genlock 1
</MACRO>
<TYPEDEF>
<NAME>hDC)</NAME>
typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);
</TYPEDEF>
<TYPEDEF>
<NAME>hDC)</NAME>
typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);
</TYPEDEF>
<TYPEDEF>
<NAME>pFlag)</NAME>
typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);
</TYPEDEF>
<TYPEDEF>
<NAME>uSource)</NAME>
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);
</TYPEDEF>
<TYPEDEF>
<NAME>uSource)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);
</TYPEDEF>
<TYPEDEF>
<NAME>uEdge)</NAME>
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);
</TYPEDEF>
<TYPEDEF>
<NAME>uEdge)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);
</TYPEDEF>
<TYPEDEF>
<NAME>uRate)</NAME>
typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);
</TYPEDEF>
<TYPEDEF>
<NAME>uRate)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);
</TYPEDEF>
<TYPEDEF>
<NAME>uDelay)</NAME>
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);
</TYPEDEF>
<TYPEDEF>
<NAME>uDelay)</NAME>
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);
</TYPEDEF>
<TYPEDEF>
<NAME>uMaxPixelDelay)</NAME>
typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_image_buffer</NAME>
#define WGL_I3D_image_buffer 1
</MACRO>
<TYPEDEF>
<NAME>uFlags)</NAME>
typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
</TYPEDEF>
<TYPEDEF>
<NAME>pAddress)</NAME>
typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
</TYPEDEF>
<TYPEDEF>
<NAME>count)</NAME>
typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_swap_frame_lock</NAME>
#define WGL_I3D_swap_frame_lock 1
</MACRO>
<TYPEDEF>
<NAME>pFlag)</NAME>
typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);
</TYPEDEF>
<TYPEDEF>
<NAME>pFlag)</NAME>
typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);
</TYPEDEF>
<MACRO>
<NAME>WGL_I3D_swap_frame_usage</NAME>
#define WGL_I3D_swap_frame_usage 1
</MACRO>
<TYPEDEF>
<NAME>pUsage)</NAME>
typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);
</TYPEDEF>
<TYPEDEF>
<NAME>pLastMissedUsage)</NAME>
typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);
</TYPEDEF>
<MACRO>
<NAME>GTK_GL_VAR</NAME>
#    define GTK_GL_VAR __declspec(dllexport)
</MACRO>
<MACRO>
<NAME>GTK_GL_VAR</NAME>
#    define GTK_GL_VAR extern __declspec(dllimport)
</MACRO>
<MACRO>
<NAME>GTK_GL_VAR</NAME>
#  define GTK_GL_VAR extern
</MACRO>
<FUNCTION>
<NAME>gtk_widget_set_gl_capability</NAME>
<RETURNS>gboolean  </RETURNS>
GtkWidget    *widget,GdkGLConfig  *glconfig,GdkGLContext *share_list,gboolean      direct,int           render_type
</FUNCTION>
<FUNCTION>
<NAME>gtk_widget_is_gl_capable</NAME>
<RETURNS>gboolean  </RETURNS>
GtkWidget    *widget
</FUNCTION>
<FUNCTION>
<NAME>gtk_widget_get_gl_config</NAME>
<RETURNS>GdkGLConfig   *</RETURNS>
GtkWidget    *widget
</FUNCTION>
<FUNCTION>
<NAME>gtk_widget_get_gl_context</NAME>
<RETURNS>GdkGLContext  *</RETURNS>
GtkWidget    *widget
</FUNCTION>
<FUNCTION>
<NAME>gtk_widget_get_gl_window</NAME>
<RETURNS>GdkGLWindow   *</RETURNS>
GtkWidget    *widget
</FUNCTION>
<MACRO>
<NAME>gtk_widget_get_gl_drawable</NAME>
#define       gtk_widget_get_gl_drawable(widget)        \
  GDK_GL_DRAWABLE (gtk_widget_get_gl_window (widget))
</MACRO>
<MACRO>
<NAME>GTKGLEXT_MAJOR_VERSION</NAME>
#define GTKGLEXT_MAJOR_VERSION (0)
</MACRO>
<MACRO>
<NAME>GTKGLEXT_MINOR_VERSION</NAME>
#define GTKGLEXT_MINOR_VERSION (5)
</MACRO>
<MACRO>
<NAME>GTKGLEXT_MICRO_VERSION</NAME>
#define GTKGLEXT_MICRO_VERSION (1)
</MACRO>
<MACRO>
<NAME>GTKGLEXT_INTERFACE_AGE</NAME>
#define GTKGLEXT_INTERFACE_AGE (0)
</MACRO>
<MACRO>
<NAME>GTKGLEXT_BINARY_AGE</NAME>
#define GTKGLEXT_BINARY_AGE    (0)
</MACRO>
<MACRO>
<NAME>GTKGLEXT_CHECK_VERSION</NAME>
#define	GTKGLEXT_CHECK_VERSION(major, minor, micro)                          \
  (GTKGLEXT_MAJOR_VERSION > (major) ||                                       \
  (GTKGLEXT_MAJOR_VERSION == (major) && GTKGLEXT_MINOR_VERSION > (minor)) || \
  (GTKGLEXT_MAJOR_VERSION == (major) && GTKGLEXT_MINOR_VERSION == (minor) && \
   GTKGLEXT_MICRO_VERSION >= (micro)))
</MACRO>
<VARIABLE>
<NAME>gtkglext_major_version</NAME>
extern const guint gtkglext_major_version;
</VARIABLE>
<VARIABLE>
<NAME>gtkglext_minor_version</NAME>
extern const guint gtkglext_minor_version;
</VARIABLE>
<VARIABLE>
<NAME>gtkglext_micro_version</NAME>
extern const guint gtkglext_micro_version;
</VARIABLE>
<VARIABLE>
<NAME>gtkglext_interface_age</NAME>
extern const guint gtkglext_interface_age;
</VARIABLE>
<VARIABLE>
<NAME>gtkglext_binary_age</NAME>
extern const guint gtkglext_binary_age;
</VARIABLE>
